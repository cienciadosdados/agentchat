{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/global/dist/index.js"],"sourcesContent":["import { path, AsyncLocalStorage, randomUUID, CustomEvent, getEnv } from '@llamaindex/env';\nimport { tokenizers } from '@llamaindex/env/tokenizers';\n\n//#region llm\nconst DEFAULT_CONTEXT_WINDOW = 3900;\nconst DEFAULT_NUM_OUTPUTS = 256;\nconst DEFAULT_CHUNK_SIZE = 1024;\nconst DEFAULT_CHUNK_OVERLAP = 20;\nconst DEFAULT_CHUNK_OVERLAP_RATIO = 0.1;\nconst DEFAULT_PADDING = 5;\n//#endregion\n//#region storage\nconst DEFAULT_COLLECTION = \"data\";\nconst DEFAULT_PERSIST_DIR = path.join(\"./storage\");\nconst DEFAULT_INDEX_STORE_PERSIST_FILENAME = \"index_store.json\";\nconst DEFAULT_DOC_STORE_PERSIST_FILENAME = \"doc_store.json\";\nconst DEFAULT_VECTOR_STORE_PERSIST_FILENAME = \"vector_store.json\";\nconst DEFAULT_GRAPH_STORE_PERSIST_FILENAME = \"graph_store.json\";\nconst DEFAULT_NAMESPACE = \"docstore\";\n//#endregion\n//#region llama cloud\nconst DEFAULT_PROJECT_NAME = \"Default\";\nconst DEFAULT_BASE_URL = \"https://api.cloud.llamaindex.ai\"; //#endregion\n\nconst eventReasonAsyncLocalStorage = new AsyncLocalStorage();\n/**\n * EventCaller is used to track the caller of an event.\n */ class EventCaller {\n    constructor(caller, parent){\n        this.caller = caller;\n        this.parent = parent;\n        this.id = randomUUID();\n        this.#computedCallers = null;\n    }\n    #computedCallers;\n    get computedCallers() {\n        if (this.#computedCallers != null) {\n            return this.#computedCallers;\n        }\n        const callers = [\n            this.caller\n        ];\n        let parent = this.parent;\n        while(parent != null){\n            callers.push(parent.caller);\n            parent = parent.parent;\n        }\n        this.#computedCallers = callers;\n        return callers;\n    }\n    static create(caller, parent) {\n        return new EventCaller(caller, parent);\n    }\n}\nfunction getEventCaller() {\n    return eventReasonAsyncLocalStorage.getStore() ?? null;\n}\n/**\n * @param caller who is calling this function, pass in `this` if it's a class method\n * @param fn\n */ function withEventCaller(caller, fn) {\n    // create a chain of event callers\n    const parentCaller = getEventCaller();\n    return eventReasonAsyncLocalStorage.run(EventCaller.create(caller, parentCaller), fn);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nclass LlamaIndexCustomEvent extends CustomEvent {\n    constructor(event, options){\n        super(event, options), this.reason = null;\n        this.reason = options?.reason ?? null;\n    }\n    static fromEvent(type, detail) {\n        return new LlamaIndexCustomEvent(type, {\n            detail: detail,\n            reason: getEventCaller()\n        });\n    }\n}\nclass CallbackManager {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    #handlers;\n    on(event, handler) {\n        if (!this.#handlers.has(event)) {\n            this.#handlers.set(event, []);\n        }\n        this.#handlers.get(event).push(handler);\n        return this;\n    }\n    off(event, handler) {\n        if (!this.#handlers.has(event)) {\n            return this;\n        }\n        const cbs = this.#handlers.get(event);\n        const index = cbs.indexOf(handler);\n        if (index > -1) {\n            cbs.splice(index, 1);\n        }\n        return this;\n    }\n    dispatchEvent(event, detail, sync = false) {\n        const cbs = this.#handlers.get(event);\n        if (!cbs) {\n            return;\n        }\n        if (typeof queueMicrotask === \"undefined\") {\n            console.warn(\"queueMicrotask is not available, dispatching synchronously\");\n            sync = true;\n        }\n        if (sync) {\n            cbs.forEach((handler)=>handler(LlamaIndexCustomEvent.fromEvent(event, {\n                    ...detail\n                })));\n        } else {\n            queueMicrotask(()=>{\n                cbs.forEach((handler)=>handler(LlamaIndexCustomEvent.fromEvent(event, {\n                        ...detail\n                    })));\n            });\n        }\n    }\n    constructor(){\n        this.#handlers = new Map();\n    }\n}\nconst globalCallbackManager = new CallbackManager();\nconst callbackManagerAsyncLocalStorage = new AsyncLocalStorage();\nlet currentCallbackManager = globalCallbackManager;\nfunction getCallbackManager() {\n    return callbackManagerAsyncLocalStorage.getStore() ?? currentCallbackManager;\n}\nfunction setCallbackManager(callbackManager) {\n    currentCallbackManager = callbackManager;\n}\nfunction withCallbackManager(callbackManager, fn) {\n    return callbackManagerAsyncLocalStorage.run(callbackManager, fn);\n}\n\nconst chunkSizeAsyncLocalStorage$1 = new AsyncLocalStorage();\nlet globalChunkSize = 1024;\nfunction getChunkSize() {\n    return chunkSizeAsyncLocalStorage$1.getStore() ?? globalChunkSize;\n}\nfunction setChunkSize(chunkSize) {\n    if (chunkSize !== undefined) {\n        globalChunkSize = chunkSize;\n    }\n}\nfunction withChunkSize(embeddedModel, fn) {\n    return chunkSizeAsyncLocalStorage$1.run(embeddedModel, fn);\n}\n\nconst embeddedModelAsyncLocalStorage = new AsyncLocalStorage();\nlet globalEmbeddedModel = null;\nfunction getEmbeddedModel() {\n    const currentEmbeddedModel = embeddedModelAsyncLocalStorage.getStore() ?? globalEmbeddedModel;\n    if (!currentEmbeddedModel) {\n        throw new Error(\"Cannot find Embedding, please set `Settings.embedModel = ...` on the top of your code\");\n    }\n    return currentEmbeddedModel;\n}\nfunction setEmbeddedModel(embeddedModel) {\n    globalEmbeddedModel = embeddedModel;\n}\nfunction withEmbeddedModel(embeddedModel, fn) {\n    return embeddedModelAsyncLocalStorage.run(embeddedModel, fn);\n}\n\nconst llmAsyncLocalStorage = new AsyncLocalStorage();\nlet globalLLM;\nfunction getLLM() {\n    const currentLLM = llmAsyncLocalStorage.getStore() ?? globalLLM;\n    if (!currentLLM) {\n        throw new Error(\"Cannot find LLM, please set `Settings.llm = ...` on the top of your code\");\n    }\n    return currentLLM;\n}\nfunction setLLM(llm) {\n    globalLLM = llm;\n}\nfunction withLLM(llm, fn) {\n    return llmAsyncLocalStorage.run(llm, fn);\n}\n\nconst chunkSizeAsyncLocalStorage = new AsyncLocalStorage();\nlet globalTokenizer = tokenizers.tokenizer();\nfunction getTokenizer() {\n    return chunkSizeAsyncLocalStorage.getStore() ?? globalTokenizer;\n}\nfunction setTokenizer(tokenizer) {\n    if (tokenizer !== undefined) {\n        globalTokenizer = tokenizer;\n    }\n}\nfunction withTokenizer(tokenizer, fn) {\n    return chunkSizeAsyncLocalStorage.run(tokenizer, fn);\n}\n\nconst Settings = {\n    get llm () {\n        return getLLM();\n    },\n    set llm (llm){\n        setLLM(llm);\n    },\n    withLLM (llm1, fn) {\n        return withLLM(llm1, fn);\n    },\n    get embedModel () {\n        return getEmbeddedModel();\n    },\n    set embedModel (embedModel){\n        setEmbeddedModel(embedModel);\n    },\n    withEmbedModel (embedModel1, fn) {\n        return withEmbeddedModel(embedModel1, fn);\n    },\n    get tokenizer () {\n        return getTokenizer();\n    },\n    set tokenizer (tokenizer){\n        setTokenizer(tokenizer);\n    },\n    withTokenizer (tokenizer1, fn) {\n        return withTokenizer(tokenizer1, fn);\n    },\n    get chunkSize () {\n        return getChunkSize();\n    },\n    set chunkSize (chunkSize){\n        setChunkSize(chunkSize);\n    },\n    withChunkSize (chunkSize1, fn) {\n        return withChunkSize(chunkSize1, fn);\n    },\n    get callbackManager () {\n        return getCallbackManager();\n    },\n    set callbackManager (callbackManager){\n        setCallbackManager(callbackManager);\n    },\n    withCallbackManager (callbackManager1, fn) {\n        return withCallbackManager(callbackManager1, fn);\n    },\n    get debug () {\n        let debug = getEnv(\"DEBUG\");\n        if (typeof window !== \"undefined\") {\n            debug ||= window.localStorage.debug;\n        }\n        return Boolean(debug) && debug?.includes(\"llamaindex\") || debug === \"*\" || debug === \"true\";\n    }\n};\n\nexport { CallbackManager, DEFAULT_BASE_URL, DEFAULT_CHUNK_OVERLAP, DEFAULT_CHUNK_OVERLAP_RATIO, DEFAULT_CHUNK_SIZE, DEFAULT_COLLECTION, DEFAULT_CONTEXT_WINDOW, DEFAULT_DOC_STORE_PERSIST_FILENAME, DEFAULT_GRAPH_STORE_PERSIST_FILENAME, DEFAULT_INDEX_STORE_PERSIST_FILENAME, DEFAULT_NAMESPACE, DEFAULT_NUM_OUTPUTS, DEFAULT_PADDING, DEFAULT_PERSIST_DIR, DEFAULT_PROJECT_NAME, DEFAULT_VECTOR_STORE_PERSIST_FILENAME, EventCaller, Settings, getEventCaller, withEventCaller };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/utils/dist/index.js"],"sourcesContent":["import { fs } from '@llamaindex/env';\nimport { filetypemime } from 'magic-bytes.js';\n\n/**\n * Extracts just the text whether from\n *  a multi-modal message\n *  a single text message\n *  or a query\n *\n * @param message The message to extract text from.\n * @returns The extracted text\n */ function extractText(message) {\n    if (typeof message === \"object\" && \"query\" in message) {\n        return extractText(message.query);\n    }\n    if (typeof message !== \"string\" && !Array.isArray(message)) {\n        console.warn(\"extractText called with non-MessageContent message, this is likely a bug.\");\n        return `${message}`;\n    } else if (typeof message !== \"string\" && Array.isArray(message)) {\n        // message is of type MessageContentDetail[] - retrieve just the text parts and concatenate them\n        // so we can pass them to the context generator\n        return message.filter((c)=>c.type === \"text\").map((c)=>c.text).join(\"\\n\\n\");\n    } else {\n        return message;\n    }\n}\n/**\n * Extracts a single text from a multi-modal message content\n *\n * @param message The message to extract images from.\n * @returns The extracted images\n */ function extractSingleText(message) {\n    if (message.type === \"text\") {\n        return message.text;\n    }\n    return null;\n}\n/**\n * Extracts an image from a multi-modal message content\n *\n * @param message The message to extract images from.\n * @returns The extracted images\n */ function extractImage(message) {\n    if (message.type === \"image_url\") {\n        return new URL(message.image_url.url);\n    }\n    return null;\n}\nconst extractDataUrlComponents = (dataUrl)=>{\n    const parts = dataUrl.split(\";base64,\");\n    if (parts.length !== 2 || !parts[0].startsWith(\"data:\")) {\n        throw new Error(\"Invalid data URL\");\n    }\n    const mimeType = parts[0].slice(5);\n    const base64 = parts[1];\n    return {\n        mimeType,\n        base64\n    };\n};\nfunction messagesToHistory(messages) {\n    return messages.reduce((acc, message)=>{\n        acc += acc ? \"\\n\" : \"\";\n        if (message.role === \"user\") {\n            acc += `Human: ${message.content}`;\n        } else {\n            acc += `Assistant: ${message.content}`;\n        }\n        return acc;\n    }, \"\");\n}\nfunction toToolDescriptions(tools) {\n    const toolsObj = tools.reduce((acc, tool)=>{\n        acc[tool.name] = tool.description;\n        return acc;\n    }, {});\n    return JSON.stringify(toolsObj, null, 4);\n}\nasync function blobToDataUrl(input) {\n    const buffer = Buffer.from(await input.arrayBuffer());\n    const mimes = filetypemime(buffer);\n    if (mimes.length < 1) {\n        throw new Error(\"Unsupported image type\");\n    }\n    return \"data:\" + mimes[0] + \";base64,\" + buffer.toString(\"base64\");\n}\nasync function imageToDataUrl(input) {\n    // first ensure, that the input is a Blob\n    if (input instanceof URL && input.protocol === \"file:\" || typeof input === \"string\") {\n        // string or file URL\n        const dataBuffer = await fs.readFile(input instanceof URL ? input.pathname : input);\n        input = new Blob([\n            dataBuffer\n        ]);\n    } else if (!(input instanceof Blob)) {\n        if (input instanceof URL) {\n            throw new Error(`Unsupported URL with protocol: ${input.protocol}`);\n        } else if (input instanceof Uint8Array) {\n            input = new Blob([\n                input\n            ]); // convert Uint8Array to Blob\n        } else {\n            throw new Error(`Unsupported input type: ${typeof input}`);\n        }\n    }\n    return await blobToDataUrl(input);\n}\n\nclass BaseLLM {\n    async complete(params) {\n        const { prompt, stream } = params;\n        if (stream) {\n            const stream = await this.chat({\n                messages: [\n                    {\n                        content: prompt,\n                        role: \"user\"\n                    }\n                ],\n                stream: true\n            });\n            return streamConverter(stream, (chunk)=>{\n                return {\n                    raw: null,\n                    text: chunk.delta\n                };\n            });\n        }\n        const chatResponse = await this.chat({\n            messages: [\n                {\n                    content: prompt,\n                    role: \"user\"\n                }\n            ]\n        });\n        return {\n            text: extractText(chatResponse.message.content),\n            raw: chatResponse.raw\n        };\n    }\n}\nclass ToolCallLLM extends BaseLLM {\n}\n\n// TODO: move to a test package\nclass MockLLM extends ToolCallLLM {\n    constructor(options){\n        super(), this.supportToolCall = false;\n        this.options = {\n            timeBetweenToken: options?.timeBetweenToken ?? 20,\n            responseMessage: options?.responseMessage ?? \"This is a mock response\"\n        };\n        this.metadata = options?.metadata ?? {\n            model: \"MockLLM\",\n            temperature: 0.5,\n            topP: 0.5,\n            contextWindow: 1024,\n            tokenizer: undefined\n        };\n    }\n    async chat(params) {\n        const responseMessage = this.options.responseMessage;\n        const timeBetweenToken = this.options.timeBetweenToken;\n        if (params.stream) {\n            return async function*() {\n                for (const char of responseMessage){\n                    yield {\n                        delta: char,\n                        raw: {}\n                    };\n                    await new Promise((resolve)=>setTimeout(resolve, timeBetweenToken));\n                }\n            }();\n        }\n        return {\n            message: {\n                content: responseMessage,\n                role: \"assistant\"\n            },\n            raw: {}\n        };\n    }\n    async complete(params) {\n        const responseMessage = this.options.responseMessage;\n        const timeBetweenToken = this.options.timeBetweenToken;\n        if (params.stream) {\n            return async function*() {\n                for (const char of responseMessage){\n                    yield {\n                        delta: char,\n                        text: char,\n                        raw: {}\n                    };\n                    await new Promise((resolve)=>setTimeout(resolve, timeBetweenToken));\n                }\n            }();\n        }\n        return {\n            text: responseMessage,\n            raw: {}\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n/**\n * Type safe version of `Object.entries`\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction objectEntries(obj) {\n    return Object.entries(obj);\n}\n\nconst isPromise = (obj)=>{\n    return obj != null && typeof obj === \"object\" && \"then\" in obj;\n};\nconst isAsyncIterable = (obj)=>{\n    return obj != null && typeof obj === \"object\" && Symbol.asyncIterator in obj;\n};\nconst isIterable = (obj)=>{\n    return obj != null && typeof obj === \"object\" && Symbol.iterator in obj;\n};\nasync function* streamConverter(stream, converter) {\n    for await (const data of stream){\n        const newData = converter(data);\n        if (newData === null) {\n            return;\n        }\n        yield newData;\n    }\n}\nasync function* streamCallbacks(stream, callbacks) {\n    let value;\n    for await (value of stream){\n        yield value;\n    }\n    if (callbacks.finished) {\n        callbacks.finished(value);\n    }\n}\nasync function* streamReducer(params) {\n    let value = params.initialValue;\n    for await (const data of params.stream){\n        value = params.reducer(value, data);\n        yield data;\n    }\n    if (params.finished) {\n        params.finished(value);\n    }\n}\n/**\n * Prettify an error for AI to read\n */ function prettifyError(error) {\n    if (error instanceof Error) {\n        return `Error(${error.name}): ${error.message}`;\n    } else {\n        return `${error}`;\n    }\n}\nfunction stringifyJSONToMessageContent(value) {\n    return JSON.stringify(value, null, 2).replace(/\"([^\"]*)\"/g, \"$1\");\n}\n\nexport { MockLLM, extractDataUrlComponents, extractImage, extractSingleText, extractText, imageToDataUrl, isAsyncIterable, isIterable, isPromise, messagesToHistory, objectEntries, prettifyError, streamCallbacks, streamConverter, streamReducer, stringifyJSONToMessageContent, toToolDescriptions };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/decorator/dist/index.js"],"sourcesContent":["import { AsyncLocalStorage, randomUUID } from '@llamaindex/env';\nimport { withEventCaller, Settings } from '../../global/dist/index.js';\nimport { isAsyncIterable, isIterable } from '../../utils/dist/index.js';\n\nfunction wrapEventCaller(originalMethod, context) {\n    const name = context.name;\n    context.addInitializer(function() {\n        // @ts-expect-error - this is a valid assignment\n        const fn = this[name].bind(this);\n        // @ts-expect-error - this is a valid assignment\n        this[name] = (...args)=>{\n            return withEventCaller(this, ()=>fn(...args));\n        };\n    });\n    return function(...args) {\n        const result = originalMethod.call(this, ...args);\n        // patch for iterators because AsyncLocalStorage doesn't work with them\n        if (isAsyncIterable(result)) {\n            const iter = result[Symbol.asyncIterator]();\n            const snapshot = AsyncLocalStorage.snapshot();\n            return async function* asyncGeneratorWrapper() {\n                while(true){\n                    const { value, done } = await snapshot(()=>iter.next());\n                    if (done) {\n                        break;\n                    }\n                    yield value;\n                }\n            }();\n        } else if (isIterable(result)) {\n            const iter = result[Symbol.iterator]();\n            const snapshot = AsyncLocalStorage.snapshot();\n            return function* generatorWrapper() {\n                while(true){\n                    const { value, done } = snapshot(()=>iter.next());\n                    if (done) {\n                        break;\n                    }\n                    yield value;\n                }\n            }();\n        }\n        return result;\n    };\n}\n\nfunction lazyInitHash(value, _context) {\n    return {\n        get () {\n            const oldValue = value.get.call(this);\n            if (oldValue === \"\") {\n                const hash = this.generateHash();\n                value.set.call(this, hash);\n            }\n            return value.get.call(this);\n        },\n        set (newValue) {\n            value.set.call(this, newValue);\n        },\n        init (value) {\n            return value;\n        }\n    };\n}\n\nfunction wrapLLMEvent(originalMethod, _context) {\n    return async function withLLMEvent(...params) {\n        const id = randomUUID();\n        Settings.callbackManager.dispatchEvent(\"llm-start\", {\n            id,\n            messages: params[0].messages\n        });\n        const response = await originalMethod.call(this, ...params);\n        if (Symbol.asyncIterator in response) {\n            // save snapshot to restore it after the response is done\n            const snapshot = AsyncLocalStorage.snapshot();\n            const originalAsyncIterator = {\n                [Symbol.asyncIterator]: response[Symbol.asyncIterator].bind(response)\n            };\n            response[Symbol.asyncIterator] = async function*() {\n                const finalResponse = {\n                    raw: [],\n                    message: {\n                        content: \"\",\n                        role: \"assistant\",\n                        options: {}\n                    }\n                };\n                let firstOne = false;\n                for await (const chunk of originalAsyncIterator){\n                    if (!firstOne) {\n                        firstOne = true;\n                        finalResponse.message.content = chunk.delta;\n                    } else {\n                        finalResponse.message.content += chunk.delta;\n                    }\n                    if (chunk.options) {\n                        finalResponse.message.options = {\n                            ...finalResponse.message.options,\n                            ...chunk.options\n                        };\n                    }\n                    Settings.callbackManager.dispatchEvent(\"llm-stream\", {\n                        id,\n                        chunk\n                    });\n                    finalResponse.raw.push(chunk);\n                    yield chunk;\n                }\n                snapshot(()=>{\n                    Settings.callbackManager.dispatchEvent(\"llm-end\", {\n                        id,\n                        response: finalResponse\n                    });\n                });\n            };\n        } else {\n            Settings.callbackManager.dispatchEvent(\"llm-end\", {\n                id,\n                response\n            });\n        }\n        return response;\n    };\n}\n\nexport { lazyInitHash, wrapEventCaller, wrapLLMEvent };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 711, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/schema/dist/index.js"],"sourcesContent":["import { getEnv, randomUUID, createSHA256, path, fs } from '@llamaindex/env';\nimport { lazyInitHash } from '../../decorator/dist/index.js';\nimport { Settings } from '../../global/dist/index.js';\nimport { extractText } from '../../utils/dist/index.js';\nimport { z } from 'zod';\n\nfunction chunkSizeCheck(contentGetter, _context) {\n    return function(...args) {\n        const content = contentGetter.call(this, ...args);\n        const chunkSize = Settings.chunkSize;\n        const enableChunkSizeCheck = getEnv(\"ENABLE_CHUNK_SIZE_CHECK\") === \"true\";\n        if (enableChunkSizeCheck && chunkSize !== undefined && content.length > chunkSize) {\n            console.warn(`Node (${this.id_}) is larger than chunk size: ${content.length} > ${chunkSize}`);\n            {\n                console.warn(\"Will truncate the content if it is larger than chunk size\");\n                console.warn(\"If you want to disable this behavior:\");\n                console.warn(\"  1. Set Settings.chunkSize = undefined\");\n                console.warn(\"  2. Set Settings.chunkSize to a larger value\");\n                console.warn(\"  3. Change the way of splitting content into smaller chunks\");\n            }\n            return content.slice(0, chunkSize);\n        }\n        return content;\n    };\n}\n\nfunction applyDecs2203RFactory() {\n    function createAddInitializerMethod(initializers, decoratorFinishedRef) {\n        return function addInitializer(initializer) {\n            assertNotFinished(decoratorFinishedRef, \"addInitializer\");\n            assertCallable(initializer, \"An initializer\");\n            initializers.push(initializer);\n        };\n    }\n    function memberDec(dec, name, desc, initializers, kind, isStatic, isPrivate, metadata, value) {\n        var kindStr;\n        switch(kind){\n            case 1:\n                kindStr = \"accessor\";\n                break;\n            case 2:\n                kindStr = \"method\";\n                break;\n            case 3:\n                kindStr = \"getter\";\n                break;\n            case 4:\n                kindStr = \"setter\";\n                break;\n            default:\n                kindStr = \"field\";\n        }\n        var ctx = {\n            kind: kindStr,\n            name: isPrivate ? \"#\" + name : name,\n            static: isStatic,\n            private: isPrivate,\n            metadata: metadata\n        };\n        var decoratorFinishedRef = {\n            v: false\n        };\n        ctx.addInitializer = createAddInitializerMethod(initializers, decoratorFinishedRef);\n        var get, set;\n        if (kind === 0) {\n            if (isPrivate) {\n                get = desc.get;\n                set = desc.set;\n            } else {\n                get = function() {\n                    return this[name];\n                };\n                set = function(v) {\n                    this[name] = v;\n                };\n            }\n        } else if (kind === 2) {\n            get = function() {\n                return desc.value;\n            };\n        } else {\n            if (kind === 1 || kind === 3) {\n                get = function() {\n                    return desc.get.call(this);\n                };\n            }\n            if (kind === 1 || kind === 4) {\n                set = function(v) {\n                    desc.set.call(this, v);\n                };\n            }\n        }\n        ctx.access = get && set ? {\n            get: get,\n            set: set\n        } : get ? {\n            get: get\n        } : {\n            set: set\n        };\n        try {\n            return dec(value, ctx);\n        } finally{\n            decoratorFinishedRef.v = true;\n        }\n    }\n    function assertNotFinished(decoratorFinishedRef, fnName) {\n        if (decoratorFinishedRef.v) {\n            throw new Error(\"attempted to call \" + fnName + \" after decoration was finished\");\n        }\n    }\n    function assertCallable(fn, hint) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(hint + \" must be a function\");\n        }\n    }\n    function assertValidReturnValue(kind, value) {\n        var type = typeof value;\n        if (kind === 1) {\n            if (type !== \"object\" || value === null) {\n                throw new TypeError(\"accessor decorators must return an object with get, set, or init properties or void 0\");\n            }\n            if (value.get !== undefined) {\n                assertCallable(value.get, \"accessor.get\");\n            }\n            if (value.set !== undefined) {\n                assertCallable(value.set, \"accessor.set\");\n            }\n            if (value.init !== undefined) {\n                assertCallable(value.init, \"accessor.init\");\n            }\n        } else if (type !== \"function\") {\n            var hint;\n            if (kind === 0) {\n                hint = \"field\";\n            } else if (kind === 10) {\n                hint = \"class\";\n            } else {\n                hint = \"method\";\n            }\n            throw new TypeError(hint + \" decorators must return a function or void 0\");\n        }\n    }\n    function applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers, metadata) {\n        var decs = decInfo[0];\n        var desc, init, value;\n        if (isPrivate) {\n            if (kind === 0 || kind === 1) {\n                desc = {\n                    get: decInfo[3],\n                    set: decInfo[4]\n                };\n            } else if (kind === 3) {\n                desc = {\n                    get: decInfo[3]\n                };\n            } else if (kind === 4) {\n                desc = {\n                    set: decInfo[3]\n                };\n            } else {\n                desc = {\n                    value: decInfo[3]\n                };\n            }\n        } else if (kind !== 0) {\n            desc = Object.getOwnPropertyDescriptor(base, name);\n        }\n        if (kind === 1) {\n            value = {\n                get: desc.get,\n                set: desc.set\n            };\n        } else if (kind === 2) {\n            value = desc.value;\n        } else if (kind === 3) {\n            value = desc.get;\n        } else if (kind === 4) {\n            value = desc.set;\n        }\n        var newValue, get, set;\n        if (typeof decs === \"function\") {\n            newValue = memberDec(decs, name, desc, initializers, kind, isStatic, isPrivate, metadata, value);\n            if (newValue !== void 0) {\n                assertValidReturnValue(kind, newValue);\n                if (kind === 0) {\n                    init = newValue;\n                } else if (kind === 1) {\n                    init = newValue.init;\n                    get = newValue.get || value.get;\n                    set = newValue.set || value.set;\n                    value = {\n                        get: get,\n                        set: set\n                    };\n                } else {\n                    value = newValue;\n                }\n            }\n        } else {\n            for(var i = decs.length - 1; i >= 0; i--){\n                var dec = decs[i];\n                newValue = memberDec(dec, name, desc, initializers, kind, isStatic, isPrivate, metadata, value);\n                if (newValue !== void 0) {\n                    assertValidReturnValue(kind, newValue);\n                    var newInit;\n                    if (kind === 0) {\n                        newInit = newValue;\n                    } else if (kind === 1) {\n                        newInit = newValue.init;\n                        get = newValue.get || value.get;\n                        set = newValue.set || value.set;\n                        value = {\n                            get: get,\n                            set: set\n                        };\n                    } else {\n                        value = newValue;\n                    }\n                    if (newInit !== void 0) {\n                        if (init === void 0) {\n                            init = newInit;\n                        } else if (typeof init === \"function\") {\n                            init = [\n                                init,\n                                newInit\n                            ];\n                        } else {\n                            init.push(newInit);\n                        }\n                    }\n                }\n            }\n        }\n        if (kind === 0 || kind === 1) {\n            if (init === void 0) {\n                init = function(instance, init) {\n                    return init;\n                };\n            } else if (typeof init !== \"function\") {\n                var ownInitializers = init;\n                init = function(instance, init) {\n                    var value = init;\n                    for(var i = 0; i < ownInitializers.length; i++){\n                        value = ownInitializers[i].call(instance, value);\n                    }\n                    return value;\n                };\n            } else {\n                var originalInitializer = init;\n                init = function(instance, init) {\n                    return originalInitializer.call(instance, init);\n                };\n            }\n            ret.push(init);\n        }\n        if (kind !== 0) {\n            if (kind === 1) {\n                desc.get = value.get;\n                desc.set = value.set;\n            } else if (kind === 2) {\n                desc.value = value;\n            } else if (kind === 3) {\n                desc.get = value;\n            } else if (kind === 4) {\n                desc.set = value;\n            }\n            if (isPrivate) {\n                if (kind === 1) {\n                    ret.push(function(instance, args) {\n                        return value.get.call(instance, args);\n                    });\n                    ret.push(function(instance, args) {\n                        return value.set.call(instance, args);\n                    });\n                } else if (kind === 2) {\n                    ret.push(value);\n                } else {\n                    ret.push(function(instance, args) {\n                        return value.call(instance, args);\n                    });\n                }\n            } else {\n                Object.defineProperty(base, name, desc);\n            }\n        }\n    }\n    function applyMemberDecs(Class, decInfos, metadata) {\n        var ret = [];\n        var protoInitializers;\n        var staticInitializers;\n        var existingProtoNonFields = new Map();\n        var existingStaticNonFields = new Map();\n        for(var i = 0; i < decInfos.length; i++){\n            var decInfo = decInfos[i];\n            if (!Array.isArray(decInfo)) continue;\n            var kind = decInfo[1];\n            var name = decInfo[2];\n            var isPrivate = decInfo.length > 3;\n            var isStatic = kind >= 5;\n            var base;\n            var initializers;\n            if (isStatic) {\n                base = Class;\n                kind = kind - 5;\n                staticInitializers = staticInitializers || [];\n                initializers = staticInitializers;\n            } else {\n                base = Class.prototype;\n                protoInitializers = protoInitializers || [];\n                initializers = protoInitializers;\n            }\n            if (kind !== 0 && !isPrivate) {\n                var existingNonFields = isStatic ? existingStaticNonFields : existingProtoNonFields;\n                var existingKind = existingNonFields.get(name) || 0;\n                if (existingKind === true || existingKind === 3 && kind !== 4 || existingKind === 4 && kind !== 3) {\n                    throw new Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \" + name);\n                } else if (!existingKind && kind > 2) {\n                    existingNonFields.set(name, kind);\n                } else {\n                    existingNonFields.set(name, true);\n                }\n            }\n            applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers, metadata);\n        }\n        pushInitializers(ret, protoInitializers);\n        pushInitializers(ret, staticInitializers);\n        return ret;\n    }\n    function pushInitializers(ret, initializers) {\n        if (initializers) {\n            ret.push(function(instance) {\n                for(var i = 0; i < initializers.length; i++){\n                    initializers[i].call(instance);\n                }\n                return instance;\n            });\n        }\n    }\n    function applyClassDecs(targetClass, classDecs, metadata) {\n        if (classDecs.length > 0) {\n            var initializers = [];\n            var newClass = targetClass;\n            var name = targetClass.name;\n            for(var i = classDecs.length - 1; i >= 0; i--){\n                var decoratorFinishedRef = {\n                    v: false\n                };\n                try {\n                    var nextNewClass = classDecs[i](newClass, {\n                        kind: \"class\",\n                        name: name,\n                        addInitializer: createAddInitializerMethod(initializers, decoratorFinishedRef),\n                        metadata\n                    });\n                } finally{\n                    decoratorFinishedRef.v = true;\n                }\n                if (nextNewClass !== undefined) {\n                    assertValidReturnValue(10, nextNewClass);\n                    newClass = nextNewClass;\n                }\n            }\n            return [\n                defineMetadata(newClass, metadata),\n                function() {\n                    for(var i = 0; i < initializers.length; i++){\n                        initializers[i].call(newClass);\n                    }\n                }\n            ];\n        }\n    }\n    function defineMetadata(Class, metadata) {\n        return Object.defineProperty(Class, Symbol.metadata || Symbol.for(\"Symbol.metadata\"), {\n            configurable: true,\n            enumerable: true,\n            value: metadata\n        });\n    }\n    return function applyDecs2203R(targetClass, memberDecs, classDecs, parentClass) {\n        if (parentClass !== void 0) {\n            var parentMetadata = parentClass[Symbol.metadata || Symbol.for(\"Symbol.metadata\")];\n        }\n        var metadata = Object.create(parentMetadata === void 0 ? null : parentMetadata);\n        var e = applyMemberDecs(targetClass, memberDecs, metadata);\n        if (!classDecs.length) defineMetadata(targetClass, metadata);\n        return {\n            e: e,\n            get c () {\n                return applyClassDecs(targetClass, classDecs, metadata);\n            }\n        };\n    };\n}\nfunction _apply_decs_2203_r(targetClass, memberDecs, classDecs, parentClass) {\n    return (_apply_decs_2203_r = applyDecs2203RFactory())(targetClass, memberDecs, classDecs, parentClass);\n}\nvar _init_hash, _initProto, _initProto1;\nvar NodeRelationship = /*#__PURE__*/ function(NodeRelationship) {\n    NodeRelationship[\"SOURCE\"] = \"SOURCE\";\n    NodeRelationship[\"PREVIOUS\"] = \"PREVIOUS\";\n    NodeRelationship[\"NEXT\"] = \"NEXT\";\n    NodeRelationship[\"PARENT\"] = \"PARENT\";\n    NodeRelationship[\"CHILD\"] = \"CHILD\";\n    return NodeRelationship;\n}({});\nvar ObjectType = /*#__PURE__*/ function(ObjectType) {\n    ObjectType[\"TEXT\"] = \"TEXT\";\n    ObjectType[\"IMAGE\"] = \"IMAGE\";\n    ObjectType[\"INDEX\"] = \"INDEX\";\n    ObjectType[\"DOCUMENT\"] = \"DOCUMENT\";\n    ObjectType[\"IMAGE_DOCUMENT\"] = \"IMAGE_DOCUMENT\";\n    return ObjectType;\n}({});\nvar MetadataMode = /*#__PURE__*/ function(MetadataMode) {\n    MetadataMode[\"ALL\"] = \"ALL\";\n    MetadataMode[\"EMBED\"] = \"EMBED\";\n    MetadataMode[\"LLM\"] = \"LLM\";\n    MetadataMode[\"NONE\"] = \"NONE\";\n    return MetadataMode;\n}({});\n/**\n * Generic abstract class for retrievable nodes\n */ class BaseNode {\n    static{\n        ({ e: [_init_hash, _initProto] } = _apply_decs_2203_r(this, [\n            [\n                lazyInitHash,\n                1,\n                \"hash\"\n            ]\n        ], []));\n    }\n    #___private_hash_1;\n    get hash() {\n        return this.#___private_hash_1;\n    }\n    set hash(_v) {\n        this.#___private_hash_1 = _v;\n    }\n    constructor(init){\n        this.#___private_hash_1 = (_initProto(this), _init_hash(this, \"\"));\n        const { id_, metadata, excludedEmbedMetadataKeys, excludedLlmMetadataKeys, relationships, hash, embedding } = init || {};\n        this.id_ = id_ ?? randomUUID();\n        this.metadata = metadata ?? {};\n        this.excludedEmbedMetadataKeys = excludedEmbedMetadataKeys ?? [];\n        this.excludedLlmMetadataKeys = excludedLlmMetadataKeys ?? [];\n        this.relationships = relationships ?? {};\n        this.embedding = embedding;\n    }\n    get sourceNode() {\n        const relationship = this.relationships[\"SOURCE\"];\n        if (Array.isArray(relationship)) {\n            throw new Error(\"Source object must be a single RelatedNodeInfo object\");\n        }\n        return relationship;\n    }\n    get prevNode() {\n        const relationship = this.relationships[\"PREVIOUS\"];\n        if (Array.isArray(relationship)) {\n            throw new Error(\"Previous object must be a single RelatedNodeInfo object\");\n        }\n        return relationship;\n    }\n    get nextNode() {\n        const relationship = this.relationships[\"NEXT\"];\n        if (Array.isArray(relationship)) {\n            throw new Error(\"Next object must be a single RelatedNodeInfo object\");\n        }\n        return relationship;\n    }\n    get parentNode() {\n        const relationship = this.relationships[\"PARENT\"];\n        if (Array.isArray(relationship)) {\n            throw new Error(\"Parent object must be a single RelatedNodeInfo object\");\n        }\n        return relationship;\n    }\n    get childNodes() {\n        const relationship = this.relationships[\"CHILD\"];\n        if (!Array.isArray(relationship)) {\n            throw new Error(\"Child object must be a an array of RelatedNodeInfo objects\");\n        }\n        return relationship;\n    }\n    getEmbedding() {\n        if (this.embedding === undefined) {\n            throw new Error(\"Embedding not set\");\n        }\n        return this.embedding;\n    }\n    asRelatedNodeInfo() {\n        return {\n            nodeId: this.id_,\n            metadata: this.metadata,\n            hash: this.hash\n        };\n    }\n    /**\n   * Called by built in JSON.stringify (see https://javascript.info/json)\n   * Properties are read-only as they are not deep-cloned (not necessary for stringification).\n   * @see toMutableJSON - use to return a mutable JSON instead\n   */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toJSON() {\n        return {\n            ...this,\n            type: this.type,\n            // hash is an accessor property, so it's not included in the rest operator\n            hash: this.hash\n        };\n    }\n    clone() {\n        return jsonToNode(this.toMutableJSON());\n    }\n    /**\n   * Converts the object to a JSON representation.\n   * Properties can be safely modified as a deep clone of the properties are created.\n   * @return {Record<string, any>} - The JSON representation of the object.\n   */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toMutableJSON() {\n        return structuredClone(this.toJSON());\n    }\n}\n/**\n * TextNode is the default node type for text. Most common node type in LlamaIndex.TS\n */ class TextNode extends BaseNode {\n    static{\n        ({ e: [_initProto1] } = _apply_decs_2203_r(this, [\n            [\n                chunkSizeCheck,\n                2,\n                \"getContent\"\n            ]\n        ], []));\n    }\n    constructor(init = {}){\n        super(init), _initProto1(this);\n        const { text, textTemplate, startCharIdx, endCharIdx, metadataSeparator } = init;\n        this.text = text ?? \"\";\n        this.textTemplate = textTemplate ?? \"\";\n        if (startCharIdx) {\n            this.startCharIdx = startCharIdx;\n        }\n        if (endCharIdx) {\n            this.endCharIdx = endCharIdx;\n        }\n        this.metadataSeparator = metadataSeparator ?? \"\\n\";\n    }\n    /**\n   * Generate a hash of the text node.\n   * The ID is not part of the hash as it can change independent of content.\n   * @returns\n   */ generateHash() {\n        const hashFunction = createSHA256();\n        hashFunction.update(`type=${this.type}`);\n        hashFunction.update(`startCharIdx=${this.startCharIdx} endCharIdx=${this.endCharIdx}`);\n        hashFunction.update(this.getContent(\"ALL\"));\n        return hashFunction.digest();\n    }\n    get type() {\n        return \"TEXT\";\n    }\n    getContent(metadataMode = \"NONE\") {\n        const metadataStr = this.getMetadataStr(metadataMode).trim();\n        return `${metadataStr}\\n\\n${this.text}`.trim();\n    }\n    getMetadataStr(metadataMode) {\n        if (metadataMode === \"NONE\") {\n            return \"\";\n        }\n        const usableMetadataKeys = new Set(Object.keys(this.metadata).sort());\n        if (metadataMode === \"LLM\") {\n            for (const key of this.excludedLlmMetadataKeys){\n                usableMetadataKeys.delete(key);\n            }\n        } else if (metadataMode === \"EMBED\") {\n            for (const key of this.excludedEmbedMetadataKeys){\n                usableMetadataKeys.delete(key);\n            }\n        }\n        return [\n            ...usableMetadataKeys\n        ].map((key)=>`${key}: ${this.metadata[key]}`).join(this.metadataSeparator);\n    }\n    setContent(value) {\n        this.text = value;\n        this.hash = this.generateHash();\n    }\n    getNodeInfo() {\n        return {\n            start: this.startCharIdx,\n            end: this.endCharIdx\n        };\n    }\n    getText() {\n        return this.getContent(\"NONE\");\n    }\n}\nclass IndexNode extends TextNode {\n    constructor(init){\n        super(init);\n        const { indexId } = init || {};\n        this.indexId = indexId ?? \"\";\n    }\n    get type() {\n        return \"INDEX\";\n    }\n}\n/**\n * A document is just a special text node with a docId.\n */ class Document extends TextNode {\n    constructor(init){\n        super(init);\n    }\n    get type() {\n        return \"DOCUMENT\";\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonToNode(json, type) {\n    if (!json.type && !type) {\n        throw new Error(\"Node type not found\");\n    }\n    const nodeType = type || json.type;\n    switch(nodeType){\n        case \"TEXT\":\n            return new TextNode(json);\n        case \"INDEX\":\n            return new IndexNode(json);\n        case \"DOCUMENT\":\n            return new Document(json);\n        case \"IMAGE_DOCUMENT\":\n            return new ImageDocument(json);\n        default:\n            throw new Error(`Invalid node type: ${nodeType}`);\n    }\n}\nclass ImageNode extends TextNode {\n    constructor(init){\n        super(init);\n        const { image } = init;\n        this.image = image;\n    }\n    get type() {\n        return \"IMAGE\";\n    }\n    getUrl() {\n        // id_ stores the relative path, convert it to the URL of the file\n        const absPath = path.resolve(this.id_);\n        return new URL(`file://${absPath}`);\n    }\n    // Calculates the image part of the hash\n    generateImageHash() {\n        const hashFunction = createSHA256();\n        if (this.image instanceof Blob) {\n            // TODO: ideally we should use the blob's content to calculate the hash:\n            // hashFunction.update(new Uint8Array(await this.image.arrayBuffer()));\n            // as this is async, we're using the node's ID for the time being\n            hashFunction.update(this.id_);\n        } else if (this.image instanceof URL) {\n            hashFunction.update(this.image.toString());\n        } else if (typeof this.image === \"string\") {\n            hashFunction.update(this.image);\n        } else {\n            throw new Error(`Unknown image type: ${typeof this.image}. Can't calculate hash`);\n        }\n        return hashFunction.digest();\n    }\n    generateHash() {\n        const hashFunction = createSHA256();\n        // calculates hash based on hash of both components (image and text)\n        hashFunction.update(super.generateHash());\n        hashFunction.update(this.generateImageHash());\n        return hashFunction.digest();\n    }\n}\nclass ImageDocument extends ImageNode {\n    constructor(init){\n        super(init);\n    }\n    get type() {\n        return \"IMAGE_DOCUMENT\";\n    }\n}\nvar ModalityType = /*#__PURE__*/ function(ModalityType) {\n    ModalityType[\"TEXT\"] = \"TEXT\";\n    ModalityType[\"IMAGE\"] = \"IMAGE\";\n    return ModalityType;\n}({});\nfunction splitNodesByType(nodes) {\n    const result = {};\n    for (const node of nodes){\n        let type;\n        if (node.type === \"IMAGE\" || node.type === \"IMAGE_DOCUMENT\") {\n            type = \"IMAGE\";\n        } else if (node.type === \"TEXT\" || node.type === \"DOCUMENT\" || node.type === \"INDEX\") {\n            type = \"TEXT\";\n        } else {\n            throw new Error(`Unknown node type: ${node.type}`);\n        }\n        if (type in result) {\n            result[type]?.push(node);\n        } else {\n            result[type] = [\n                node\n            ];\n        }\n    }\n    return result;\n}\nfunction buildNodeFromSplits(textSplits, doc, refDoc = doc, idGenerator = ()=>randomUUID()) {\n    const nodes = [];\n    const relationships = {\n        [\"SOURCE\"]: refDoc.asRelatedNodeInfo()\n    };\n    textSplits.forEach((textChunk, i)=>{\n        if (doc.type === \"IMAGE\" || doc.type === \"IMAGE_DOCUMENT\") {\n            const imageDoc = doc;\n            const imageNode = new ImageNode({\n                id_: idGenerator(i, imageDoc),\n                text: textChunk,\n                image: imageDoc.image,\n                embedding: imageDoc.embedding,\n                excludedEmbedMetadataKeys: [\n                    ...imageDoc.excludedEmbedMetadataKeys\n                ],\n                excludedLlmMetadataKeys: [\n                    ...imageDoc.excludedLlmMetadataKeys\n                ],\n                metadataSeparator: imageDoc.metadataSeparator,\n                textTemplate: imageDoc.textTemplate,\n                relationships: {\n                    ...relationships\n                }\n            });\n            nodes.push(imageNode);\n        } else if (doc.type === \"DOCUMENT\" || doc.type === \"TEXT\") {\n            const textDoc = doc;\n            const node = new TextNode({\n                id_: idGenerator(i, textDoc),\n                text: textChunk,\n                embedding: textDoc.embedding,\n                excludedEmbedMetadataKeys: [\n                    ...textDoc.excludedEmbedMetadataKeys\n                ],\n                excludedLlmMetadataKeys: [\n                    ...textDoc.excludedLlmMetadataKeys\n                ],\n                metadataSeparator: textDoc.metadataSeparator,\n                textTemplate: textDoc.textTemplate,\n                relationships: {\n                    ...relationships\n                }\n            });\n            nodes.push(node);\n        } else {\n            throw new Error(`Unknown document type: ${doc.type}`);\n        }\n    });\n    return nodes;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nclass TransformComponent {\n    constructor(transformFn){\n        Object.defineProperties(transformFn, Object.getOwnPropertyDescriptors(this.constructor.prototype));\n        const transform = function transform(...args) {\n            return transformFn(...args);\n        };\n        Reflect.setPrototypeOf(transform, new.target.prototype);\n        transform.id = randomUUID();\n        return transform;\n    }\n}\n/**\n * A FileReader takes file paths and imports data into Document objects.\n */ class FileReader {\n    async loadData(filePath) {\n        const fileContent = await fs.readFile(filePath);\n        const filename = path.basename(filePath);\n        const docs = await this.loadDataAsContent(fileContent, filename);\n        docs.forEach(FileReader.addMetaData(filePath));\n        return docs;\n    }\n    static addMetaData(filePath) {\n        return (doc, index)=>{\n            // generate id as loadDataAsContent is only responsible for the content\n            doc.id_ = `${filePath}_${index + 1}`;\n            doc.metadata[\"file_path\"] = path.resolve(filePath);\n            doc.metadata[\"file_name\"] = path.basename(filePath);\n        };\n    }\n}\n\nclass EngineResponse {\n    constructor(chatResponse, stream, sourceNodes){\n        this.metadata = {};\n        this.message = chatResponse.message;\n        this.raw = chatResponse.raw;\n        this.sourceNodes = sourceNodes;\n        this.stream = stream;\n    }\n    static fromResponse(response, stream, sourceNodes) {\n        return new EngineResponse(EngineResponse.toChatResponse(response), stream, sourceNodes);\n    }\n    static toChatResponse(response, raw = null) {\n        return {\n            message: {\n                content: response,\n                role: \"assistant\"\n            },\n            raw\n        };\n    }\n    static fromChatResponse(chatResponse, sourceNodes) {\n        return new EngineResponse(chatResponse, false, sourceNodes);\n    }\n    static fromChatResponseChunk(chunk, sourceNodes) {\n        return new EngineResponse(EngineResponse.toChatResponse(chunk.delta, chunk.raw), true, sourceNodes);\n    }\n    /**\n   * @deprecated Use `message` instead.\n   */ get response() {\n        return extractText(this.message.content);\n    }\n    get delta() {\n        if (!this.stream) {\n            console.warn(\"delta is only available for streaming responses. Consider using 'message' instead.\");\n        }\n        return extractText(this.message.content);\n    }\n    toString() {\n        return this.response ?? \"\";\n    }\n}\n\nconst anyFunctionSchema = z.function(z.tuple([]).rest(z.any()), z.any());\nconst toolMetadataSchema = z.object({\n    description: z.string(),\n    name: z.string(),\n    parameters: z.record(z.any())\n});\nconst baseToolSchema = z.object({\n    call: anyFunctionSchema.optional(),\n    metadata: toolMetadataSchema\n});\nconst baseToolWithCallSchema = baseToolSchema.extend({\n    call: z.function()\n});\nconst sentenceSplitterSchema = z.object({\n    chunkSize: z.number({\n        description: \"The token chunk size for each chunk.\"\n    }).gt(0).optional().default(()=>Settings.chunkSize ?? 1024),\n    chunkOverlap: z.number({\n        description: \"The token overlap of each chunk when splitting.\"\n    }).gte(0).optional().default(200),\n    separator: z.string({\n        description: \"Default separator for splitting into words\"\n    }).default(\" \"),\n    paragraphSeparator: z.string({\n        description: \"Separator between paragraphs.\"\n    }).optional().default(\"\\n\\n\\n\"),\n    secondaryChunkingRegex: z.string({\n        description: \"Backup regex for splitting into sentences.\"\n    }).optional().default(\"[^,.;。？！]+[,.;。？！]?\")\n}).refine((data)=>data.chunkOverlap < data.chunkSize, \"Chunk overlap must be less than chunk size.\");\nconst sentenceWindowNodeParserSchema = z.object({\n    windowSize: z.number({\n        description: \"The number of sentences on each side of a sentence to capture.\"\n    }).gt(0).default(3),\n    windowMetadataKey: z.string({\n        description: \"The metadata key to store the sentence window under.\"\n    }).default(\"window\"),\n    originalTextMetadataKey: z.string({\n        description: \"The metadata key to store the original sentence in.\"\n    }).default(\"originalText\")\n});\n\nexport { BaseNode, Document, EngineResponse, FileReader, ImageDocument, ImageNode, IndexNode, MetadataMode, ModalityType, NodeRelationship, ObjectType, TextNode, TransformComponent, anyFunctionSchema, baseToolSchema, baseToolWithCallSchema, buildNodeFromSplits, jsonToNode, sentenceSplitterSchema, sentenceWindowNodeParserSchema, splitNodesByType, toolMetadataSchema };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1624, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/vector-store/dist/index.js"],"sourcesContent":["import { Settings } from '../../global/dist/index.js';\nimport { jsonToNode, ObjectType } from '../../schema/dist/index.js';\n\nconst DEFAULT_TEXT_KEY = \"text\";\nfunction validateIsFlat(obj) {\n    for(const key in obj){\n        if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            throw new Error(`Value for metadata ${key} must not be another object`);\n        }\n    }\n}\nfunction nodeToMetadata(node, removeText = false, textField = DEFAULT_TEXT_KEY, flatMetadata = false) {\n    const { metadata, embedding, ...rest } = node.toMutableJSON();\n    if (flatMetadata) {\n        validateIsFlat(metadata);\n    }\n    if (removeText) {\n        rest[textField] = \"\";\n    }\n    metadata[\"_node_content\"] = JSON.stringify(rest);\n    metadata[\"_node_type\"] = node.constructor.name.replace(\"_\", \"\"); // remove leading underscore to be compatible with Python\n    metadata[\"document_id\"] = node.sourceNode?.nodeId || \"None\";\n    metadata[\"doc_id\"] = node.sourceNode?.nodeId || \"None\";\n    metadata[\"ref_doc_id\"] = node.sourceNode?.nodeId || \"None\";\n    return metadata;\n}\nfunction metadataDictToNode(metadata, options) {\n    const { _node_content: nodeContent, _node_type: nodeType, document_id, doc_id, ref_doc_id, ...rest } = metadata;\n    let nodeObj;\n    if (!nodeContent) {\n        if (options?.fallback) {\n            nodeObj = options?.fallback;\n        } else {\n            throw new Error(\"Node content not found in metadata.\");\n        }\n    } else {\n        nodeObj = JSON.parse(nodeContent);\n        nodeObj = {\n            ...rest,\n            ...options?.fallback,\n            ...nodeObj\n        };\n        nodeObj.metadata = {\n            ...options?.fallback && \"metadata\" in options.fallback && typeof options.fallback.metadata === \"object\" ? options?.fallback.metadata : {},\n            ...rest\n        };\n    }\n    // Note: we're using the name of the class stored in `_node_type`\n    // and not the type attribute to reconstruct\n    // the node. This way we're compatible with LlamaIndex Python\n    switch(nodeType){\n        case \"IndexNode\":\n            return jsonToNode(nodeObj, ObjectType.INDEX);\n        default:\n            return jsonToNode(nodeObj, ObjectType.TEXT);\n    }\n}\nconst escapeLikeString = (value)=>{\n    return value.replace(/[%_\\\\]/g, \"\\\\$&\");\n};\n\nvar VectorStoreQueryMode = /*#__PURE__*/ function(VectorStoreQueryMode) {\n    VectorStoreQueryMode[\"DEFAULT\"] = \"default\";\n    VectorStoreQueryMode[\"SPARSE\"] = \"sparse\";\n    VectorStoreQueryMode[\"HYBRID\"] = \"hybrid\";\n    // fit learners\n    VectorStoreQueryMode[\"SVM\"] = \"svm\";\n    VectorStoreQueryMode[\"LOGISTIC_REGRESSION\"] = \"logistic_regression\";\n    VectorStoreQueryMode[\"LINEAR_REGRESSION\"] = \"linear_regression\";\n    // maximum marginal relevance\n    VectorStoreQueryMode[\"MMR\"] = \"mmr\";\n    // for Azure AI Search\n    VectorStoreQueryMode[\"SEMANTIC_HYBRID\"] = \"semantic_hybrid\";\n    return VectorStoreQueryMode;\n}({});\nvar FilterOperator = /*#__PURE__*/ function(FilterOperator) {\n    FilterOperator[\"EQ\"] = \"==\";\n    FilterOperator[\"IN\"] = \"in\";\n    FilterOperator[\"GT\"] = \">\";\n    FilterOperator[\"LT\"] = \"<\";\n    FilterOperator[\"NE\"] = \"!=\";\n    FilterOperator[\"GTE\"] = \">=\";\n    FilterOperator[\"LTE\"] = \"<=\";\n    FilterOperator[\"NIN\"] = \"nin\";\n    FilterOperator[\"ANY\"] = \"any\";\n    FilterOperator[\"ALL\"] = \"all\";\n    FilterOperator[\"TEXT_MATCH\"] = \"text_match\";\n    FilterOperator[\"CONTAINS\"] = \"contains\";\n    FilterOperator[\"IS_EMPTY\"] = \"is_empty\";\n    return FilterOperator;\n}({});\nvar FilterCondition = /*#__PURE__*/ function(FilterCondition) {\n    FilterCondition[\"AND\"] = \"and\";\n    FilterCondition[\"OR\"] = \"or\";\n    return FilterCondition;\n}({});\nclass BaseVectorStore {\n    constructor(params){\n        this.embedModel = params?.embeddingModel ?? Settings.embedModel;\n    }\n}\nconst parsePrimitiveValue = (value)=>{\n    if (typeof value !== \"number\" && typeof value !== \"string\") {\n        throw new Error(\"Value must be a string or number\");\n    }\n    return value;\n};\nconst parseArrayValue = (value)=>{\n    const isPrimitiveArray = Array.isArray(value) && value.every((v)=>typeof v === \"string\" || typeof v === \"number\");\n    if (!isPrimitiveArray) {\n        throw new Error(\"Value must be an array of strings or numbers\");\n    }\n    return value;\n};\nconst parseNumberValue = (value)=>{\n    if (typeof value !== \"number\") throw new Error(\"Value must be a number\");\n    return value;\n};\n\nexport { BaseVectorStore, FilterCondition, FilterOperator, VectorStoreQueryMode, escapeLikeString, metadataDictToNode, nodeToMetadata, parseArrayValue, parseNumberValue, parsePrimitiveValue, validateIsFlat };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1762, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/storage/chat-store/dist/index.js"],"sourcesContent":["class BaseChatStore {\n}\n\nclass SimpleChatStore extends BaseChatStore {\n    #store;\n    setMessages(key, messages) {\n        this.#store.set(key, messages);\n    }\n    getMessages(key) {\n        return this.#store.get(key) ?? [];\n    }\n    addMessage(key, message, idx) {\n        const messages = this.#store.get(key) ?? [];\n        if (idx === undefined) {\n            messages.push(message);\n        } else {\n            messages.splice(idx, 0, message);\n        }\n        this.#store.set(key, messages);\n    }\n    deleteMessages(key) {\n        this.#store.delete(key);\n    }\n    deleteMessage(key, idx) {\n        const messages = this.#store.get(key) ?? [];\n        messages.splice(idx, 1);\n        this.#store.set(key, messages);\n    }\n    getKeys() {\n        return this.#store.keys();\n    }\n    constructor(...args){\n        super(...args), this.#store = new Map();\n    }\n}\n\nexport { BaseChatStore, SimpleChatStore };\n"],"names":[],"mappings":";;;;AAAA,MAAM;AACN;AAEA,MAAM,wBAAwB;IAC1B,CAAA,KAAM,CAAC;IACP,YAAY,GAAG,EAAE,QAAQ,EAAE;QACvB,IAAI,CAAC,CAAA,KAAM,CAAC,GAAG,CAAC,KAAK;IACzB;IACA,YAAY,GAAG,EAAE;QACb,OAAO,IAAI,CAAC,CAAA,KAAM,CAAC,GAAG,CAAC,QAAQ,EAAE;IACrC;IACA,WAAW,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;QAC1B,MAAM,WAAW,IAAI,CAAC,CAAA,KAAM,CAAC,GAAG,CAAC,QAAQ,EAAE;QAC3C,IAAI,QAAQ,WAAW;YACnB,SAAS,IAAI,CAAC;QAClB,OAAO;YACH,SAAS,MAAM,CAAC,KAAK,GAAG;QAC5B;QACA,IAAI,CAAC,CAAA,KAAM,CAAC,GAAG,CAAC,KAAK;IACzB;IACA,eAAe,GAAG,EAAE;QAChB,IAAI,CAAC,CAAA,KAAM,CAAC,MAAM,CAAC;IACvB;IACA,cAAc,GAAG,EAAE,GAAG,EAAE;QACpB,MAAM,WAAW,IAAI,CAAC,CAAA,KAAM,CAAC,GAAG,CAAC,QAAQ,EAAE;QAC3C,SAAS,MAAM,CAAC,KAAK;QACrB,IAAI,CAAC,CAAA,KAAM,CAAC,GAAG,CAAC,KAAK;IACzB;IACA,UAAU;QACN,OAAO,IAAI,CAAC,CAAA,KAAM,CAAC,IAAI;IAC3B;IACA,YAAY,GAAG,IAAI,CAAC;QAChB,KAAK,IAAI,OAAO,IAAI,CAAC,CAAA,KAAM,GAAG,IAAI;IACtC;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1807, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/prompts/dist/index.js"],"sourcesContent":["'use strict';\nimport { objectEntries } from '../../utils/dist/index.js';\nimport { z } from 'zod';\n\n/**\n * MIT License\n *\n * Copyright (c) 2019 jhonararipe\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */ \nfunction formatImpl(...args_) {\n    // Create variables\n    let self = this;\n    const __patterns__ = self.match(/({.*?})/g);\n    const { REF, FILL_CHAR, MASK_NUMBER, ALIGN_OP, CROP_SIZE, FRACTION, TYPE_VAR } = {\n        REF: 1,\n        FILL_CHAR: 2,\n        MASK_NUMBER: 3,\n        ALIGN_OP: 4,\n        CROP_SIZE: 5,\n        FRACTION: 7,\n        TYPE_VAR: 8\n    };\n    const DEFAULT_PLACE = 6;\n    const ALL_REGEXP = /{(\\w+)?:([^>\\^<\\d#]|0)?([#%,])?([>^<\\.])?(\\d+)?(\\.)?(\\d+)?([eEfFgGdxXobn#%])?}/g;\n    const regExpBasic = /{\\[?(\\w+)\\]?}/; // it's not best solution\n    const isObject = typeof args_[0] === \"object\";\n    // types/use logic\n    __patterns__?.map((pattern, patt_index)=>{\n        const kargs = ALL_REGEXP.exec(pattern) || ALL_REGEXP.exec(pattern);\n        const wargs = regExpBasic.exec(pattern);\n        // Insert values (one 2 one / array / object)\n        const INDEX_VAR = (wargs ? wargs[REF] : kargs ? kargs[REF] : patt_index) || patt_index;\n        // @ts-expect-error\n        const NATUAL_VALUE = isObject ? args_[0][INDEX_VAR] : args_[INDEX_VAR];\n        // @ts-expect-error\n        let ACTUAL_VALUE = isObject ? args_[0][INDEX_VAR] : args_[INDEX_VAR];\n        // Verify sintax/semantic\n        if (ACTUAL_VALUE === null || ACTUAL_VALUE === undefined) throw new Error(`Replacement index ${INDEX_VAR} out of range for positional args tuple`);\n        if (kargs) {\n            // If TYPE_VAR is not defined and the first argument is a number, pad a string should from left, so set TYPE_VAR to \"d\"\n            if (kargs[TYPE_VAR] === undefined && typeof ACTUAL_VALUE === \"number\") {\n                kargs[TYPE_VAR] = \"d\";\n            }\n            const LETTER = (!kargs[FILL_CHAR] ? false : !kargs[ALIGN_OP] && [\n                ...\"FfbefoxXn\"\n            ].includes(kargs[FILL_CHAR].toLowerCase()) ? kargs[FILL_CHAR] : kargs[TYPE_VAR]) || kargs[TYPE_VAR];\n            //  padronaze\n            if (LETTER) {\n                const floatSize = pattern.includes(\".\") ? Number(kargs[FRACTION] || kargs[CROP_SIZE]) : DEFAULT_PLACE;\n                switch(LETTER){\n                    case \"E\":\n                        ACTUAL_VALUE = ACTUAL_VALUE.toExponential(DEFAULT_PLACE).toUpperCase();\n                        break;\n                    case \"e\":\n                        ACTUAL_VALUE = ACTUAL_VALUE.toExponential(DEFAULT_PLACE);\n                        break;\n                    case \"X\":\n                        ACTUAL_VALUE = ACTUAL_VALUE.toString(16).toUpperCase();\n                        break;\n                    case \"x\":\n                        ACTUAL_VALUE = ACTUAL_VALUE.toString(16); // Hexadecimal\n                        break;\n                    case \"b\":\n                        ACTUAL_VALUE = ACTUAL_VALUE.toString(2); // Binary\n                        break;\n                    case \"f\":\n                    case \"F\":\n                        ACTUAL_VALUE = ACTUAL_VALUE.toFixed(floatSize);\n                        break;\n                    case \"o\":\n                        ACTUAL_VALUE = ACTUAL_VALUE.toString(8); // Octal\n                        break;\n                }\n                //  mask\n                switch(kargs[MASK_NUMBER]){\n                    case \"#\":\n                        const MASK = {\n                            x: \"0x\",\n                            X: \"0X\",\n                            o: \"0o\",\n                            b: \"0b\"\n                        }[LETTER];\n                        ACTUAL_VALUE = MASK + ACTUAL_VALUE;\n                        break;\n                }\n            }\n            // signal\n            if (// @ts-expect-error\n            [\n                ...\" +-,%\"\n            ].includes(kargs[FILL_CHAR]) && typeof NATUAL_VALUE === \"number\") {\n                ACTUAL_VALUE = ACTUAL_VALUE.toString().replace(\"-\", \"\");\n                if (NATUAL_VALUE >= 0) switch(kargs[FILL_CHAR]){\n                    case \"+\":\n                        ACTUAL_VALUE = \"+\" + ACTUAL_VALUE;\n                        break;\n                    case \" \":\n                        ACTUAL_VALUE = \" \" + ACTUAL_VALUE;\n                        break;\n                    case \",\":\n                        ACTUAL_VALUE = NATUAL_VALUE.toString().split(/(?=(?:...)*$)/).join(kargs[FILL_CHAR]);\n                        break;\n                    case \"%\":\n                        ACTUAL_VALUE = (NATUAL_VALUE * 100).toFixed(// @ts-expect-error\n                        kargs[FRACTION] || DEFAULT_PLACE) + \"%\";\n                        break;\n                }\n                else ACTUAL_VALUE = \"-\" + ACTUAL_VALUE;\n            }\n            // space / order / trim\n            if (kargs[CROP_SIZE]) {\n                ACTUAL_VALUE = ACTUAL_VALUE.toString();\n                const FILL_ELEMENT = kargs[FILL_CHAR] || \" \";\n                const SIZE_STRING = ACTUAL_VALUE.length;\n                const SIZE_ARG = kargs[CROP_SIZE];\n                const FILL_LENGTH = SIZE_STRING > SIZE_ARG ? SIZE_STRING : SIZE_ARG;\n                const FILL = FILL_ELEMENT.repeat(FILL_LENGTH);\n                switch(kargs[ALIGN_OP] || kargs[FILL_CHAR]){\n                    case \"<\":\n                        ACTUAL_VALUE = ACTUAL_VALUE.padEnd(FILL_LENGTH, FILL_ELEMENT);\n                        break;\n                    case \".\":\n                        if (!(LETTER && /[fF]/.test(LETTER))) ACTUAL_VALUE = ACTUAL_VALUE.slice(0, SIZE_ARG);\n                        break;\n                    case \">\":\n                        ACTUAL_VALUE = ACTUAL_VALUE.padStart(FILL_LENGTH, FILL_ELEMENT);\n                        break;\n                    case \"^\":\n                        const length_start = Math.floor((FILL_LENGTH - SIZE_STRING) / 2);\n                        const string_start = length_start > 0 ? FILL_ELEMENT.repeat(length_start) + ACTUAL_VALUE : ACTUAL_VALUE;\n                        ACTUAL_VALUE = FILL.replace(RegExp(`.{${string_start.length}}`), string_start);\n                        break;\n                    default:\n                        ACTUAL_VALUE = LETTER ? ACTUAL_VALUE.padStart(FILL_LENGTH, FILL_ELEMENT) : ACTUAL_VALUE.padEnd(FILL_LENGTH, FILL_ELEMENT);\n                        break;\n                }\n            }\n        }\n        // SET Definitive value\n        self = self.replace(pattern, ACTUAL_VALUE);\n    });\n    return self;\n}\nconst format = (inputString, ...param)=>formatImpl.apply(inputString, param);\n\nconst promptType = {\n    SUMMARY: \"summary\",\n    TREE_INSERT: \"insert\",\n    TREE_SELECT: \"tree_select\",\n    TREE_SELECT_MULTIPLE: \"tree_select_multiple\",\n    QUESTION_ANSWER: \"text_qa\",\n    REFINE: \"refine\",\n    KEYWORD_EXTRACT: \"keyword_extract\",\n    QUERY_KEYWORD_EXTRACT: \"query_keyword_extract\",\n    SCHEMA_EXTRACT: \"schema_extract\",\n    TEXT_TO_SQL: \"text_to_sql\",\n    TEXT_TO_GRAPH_QUERY: \"text_to_graph_query\",\n    TABLE_CONTEXT: \"table_context\",\n    KNOWLEDGE_TRIPLET_EXTRACT: \"knowledge_triplet_extract\",\n    SIMPLE_INPUT: \"simple_input\",\n    PANDAS: \"pandas\",\n    JSON_PATH: \"json_path\",\n    SINGLE_SELECT: \"single_select\",\n    MULTI_SELECT: \"multi_select\",\n    VECTOR_STORE_QUERY: \"vector_store_query\",\n    SUB_QUESTION: \"sub_question\",\n    SQL_RESPONSE_SYNTHESIS: \"sql_response_synthesis\",\n    SQL_RESPONSE_SYNTHESIS_V2: \"sql_response_synthesis_v2\",\n    CONVERSATION: \"conversation\",\n    DECOMPOSE: \"decompose\",\n    CHOICE_SELECT: \"choice_select\",\n    CUSTOM: \"custom\",\n    RANKGPT_RERANK: \"rankgpt_rerank\"\n};\nconst promptTypeSchema = z.enum([\n    promptType.SUMMARY,\n    promptType.TREE_INSERT,\n    promptType.TREE_SELECT,\n    promptType.TREE_SELECT_MULTIPLE,\n    promptType.QUESTION_ANSWER,\n    promptType.REFINE,\n    promptType.KEYWORD_EXTRACT,\n    promptType.QUERY_KEYWORD_EXTRACT,\n    promptType.SCHEMA_EXTRACT,\n    promptType.TEXT_TO_SQL,\n    promptType.TEXT_TO_GRAPH_QUERY,\n    promptType.TABLE_CONTEXT,\n    promptType.KNOWLEDGE_TRIPLET_EXTRACT,\n    promptType.SIMPLE_INPUT,\n    promptType.PANDAS,\n    promptType.JSON_PATH,\n    promptType.SINGLE_SELECT,\n    promptType.MULTI_SELECT,\n    promptType.VECTOR_STORE_QUERY,\n    promptType.SUB_QUESTION,\n    promptType.SQL_RESPONSE_SYNTHESIS,\n    promptType.SQL_RESPONSE_SYNTHESIS_V2,\n    promptType.CONVERSATION,\n    promptType.DECOMPOSE,\n    promptType.CHOICE_SELECT,\n    promptType.CUSTOM,\n    promptType.RANKGPT_RERANK\n]);\nconst PromptType = promptTypeSchema.enum;\n\nclass BasePromptTemplate {\n    constructor(options){\n        this.metadata = {};\n        /**\n   * Set of template variables used in the prompt template. Used for type hints only.\n   * To get the list of template variables used in the prompt at run-time, use the `vars` method.\n   */ this.templateVars = new Set();\n        this.options = {};\n        this.templateVarMappings = {};\n        this.functionMappings = {};\n        const { metadata, templateVars, outputParser, templateVarMappings, functionMappings } = options;\n        if (metadata) {\n            this.metadata = metadata;\n        }\n        if (templateVars) {\n            this.templateVars = new Set(templateVars);\n        }\n        if (options.options) {\n            this.options = options.options;\n        }\n        this.outputParser = outputParser;\n        if (templateVarMappings) {\n            this.templateVarMappings = templateVarMappings;\n        }\n        if (functionMappings) {\n            this.functionMappings = functionMappings;\n        }\n    }\n    mapTemplateVars(options) {\n        const templateVarMappings = this.templateVarMappings;\n        return Object.fromEntries(objectEntries(options).map(([k, v])=>[\n                templateVarMappings[k] || k,\n                v\n            ]));\n    }\n    mapFunctionVars(options) {\n        const functionMappings = this.functionMappings;\n        const newOptions = {};\n        for (const [k, v] of objectEntries(functionMappings)){\n            newOptions[k] = v(options);\n        }\n        for (const [k, v] of objectEntries(options)){\n            if (!(k in newOptions)) {\n                newOptions[k] = v;\n            }\n        }\n        return newOptions;\n    }\n    mapAllVars(options) {\n        const newOptions = this.mapFunctionVars(options);\n        return this.mapTemplateVars(newOptions);\n    }\n}\nclass PromptTemplate extends BasePromptTemplate {\n    #template;\n    constructor(options){\n        const { template, promptType, ...rest } = options;\n        super(rest);\n        this.#template = template;\n        this.promptType = promptType ?? PromptType.custom;\n    }\n    partialFormat(options) {\n        const prompt = new PromptTemplate({\n            template: this.template,\n            templateVars: [\n                ...this.templateVars\n            ],\n            options: this.options,\n            outputParser: this.outputParser,\n            templateVarMappings: this.templateVarMappings,\n            functionMappings: this.functionMappings,\n            metadata: this.metadata,\n            promptType: this.promptType\n        });\n        prompt.options = {\n            ...prompt.options,\n            ...options\n        };\n        return prompt;\n    }\n    format(options) {\n        const allOptions = {\n            ...this.options,\n            ...options\n        };\n        const mappedAllOptions = this.mapAllVars(allOptions);\n        const prompt = format(this.template, mappedAllOptions);\n        if (this.outputParser) {\n            return this.outputParser.format(prompt);\n        }\n        return prompt;\n    }\n    formatMessages(options) {\n        const prompt = this.format(options);\n        return [\n            {\n                role: \"user\",\n                content: prompt\n            }\n        ];\n    }\n    get template() {\n        return this.#template;\n    }\n    /**\n   * Returns all the template variables used in the prompt template.\n   */ vars() {\n        const template = this.template;\n        const matches = template.match(/\\{([^}]+)\\}/g) || [];\n        return [\n            ...new Set(matches.map((match)=>match.slice(1, -1)))\n        ];\n    }\n}\n\nclass PromptMixin {\n    validatePrompts(promptsDict, moduleDict) {\n        for (const key of Object.keys(promptsDict)){\n            if (key.includes(\":\")) {\n                throw new Error(`Prompt key ${key} cannot contain ':'.`);\n            }\n        }\n        for (const key of Object.keys(moduleDict)){\n            if (key.includes(\":\")) {\n                throw new Error(`Module key ${key} cannot contain ':'.`);\n            }\n        }\n    }\n    getPrompts() {\n        const promptsDict = this._getPrompts();\n        const moduleDict = this._getPromptModules();\n        this.validatePrompts(promptsDict, moduleDict);\n        const allPrompts = {\n            ...promptsDict\n        };\n        for (const [module_name, prompt_module] of objectEntries(moduleDict)){\n            for (const [key, prompt] of objectEntries(prompt_module.getPrompts())){\n                allPrompts[`${module_name}:${key}`] = prompt;\n            }\n        }\n        return allPrompts;\n    }\n    updatePrompts(prompts) {\n        const promptModules = this._getPromptModules();\n        this._updatePrompts(prompts);\n        const subPrompt = {};\n        for(const key in prompts){\n            if (key.includes(\":\")) {\n                const [moduleName, subKey] = key.split(\":\");\n                if (!subPrompt[moduleName]) {\n                    subPrompt[moduleName] = {};\n                }\n                subPrompt[moduleName][subKey] = prompts[key];\n            }\n        }\n        for (const [moduleName, subPromptDict] of Object.entries(subPrompt)){\n            if (!promptModules[moduleName]) {\n                throw new Error(`Module ${moduleName} not found.`);\n            }\n            const moduleToUpdate = promptModules[moduleName];\n            moduleToUpdate.updatePrompts(subPromptDict);\n        }\n    }\n}\n\nconst defaultTextQAPrompt = new PromptTemplate({\n    templateVars: [\n        \"context\",\n        \"query\"\n    ],\n    template: `Context information is below.\n---------------------\n{context}\n---------------------\nGiven the context information and not prior knowledge, answer the query.\nQuery: {query}\nAnswer:`\n});\nconst anthropicTextQaPrompt = new PromptTemplate({\n    templateVars: [\n        \"context\",\n        \"query\"\n    ],\n    template: `Context information:\n<context>\n{context}\n</context>\nGiven the context information and not prior knowledge, answer the query.\nQuery: {query}`\n});\nconst defaultSummaryPrompt = new PromptTemplate({\n    templateVars: [\n        \"context\"\n    ],\n    template: `Write a summary of the following. Try to use only the information provided. Try to include as many key details as possible.\n\n\n{context}\n\n\nSUMMARY:\"\"\"\n`\n});\nconst anthropicSummaryPrompt = new PromptTemplate({\n    templateVars: [\n        \"context\"\n    ],\n    template: `Summarize the following text. Try to use only the information provided. Try to include as many key details as possible.\n<original-text>\n{context}\n</original-text>\n\nSUMMARY:\n`\n});\nconst defaultRefinePrompt = new PromptTemplate({\n    templateVars: [\n        \"query\",\n        \"existingAnswer\",\n        \"context\"\n    ],\n    template: `The original query is as follows: {query}\nWe have provided an existing answer: {existingAnswer}\nWe have the opportunity to refine the existing answer\n(only if needed) with some more context below.\n------------\n{context}\n------------\nGiven the new context, refine the original answer to better answer the query.\nIf the context isn't useful, return the original answer.\nRefined Answer:`\n});\nconst defaultTreeSummarizePrompt = new PromptTemplate({\n    templateVars: [\n        \"context\",\n        \"query\"\n    ],\n    template: `Context information from multiple sources is below.\n---------------------\n{context}\n---------------------\nGiven the information from multiple sources and not prior knowledge, answer the query.\nQuery: {query}\nAnswer:`\n});\nconst defaultChoiceSelectPrompt = new PromptTemplate({\n    templateVars: [\n        \"context\",\n        \"query\"\n    ],\n    template: `A list of documents is shown below. Each document has a number next to it along \nwith a summary of the document. A question is also provided.\nRespond with the numbers of the documents\nyou should consult to answer the question, in order of relevance, as well\nas the relevance score. The relevance score is a number from 1-10 based on\nhow relevant you think the document is to the question.\nDo not include any documents that are not relevant to the question.\nExample format:\nDocument 1:\n<summary of document 1>\n\nDocument 2:\n<summary of document 2>\n\n...\n\nDocument 10:\\n<summary of document 10>\n\nQuestion: <question>\nAnswer:\nDoc: 9, Relevance: 7\nDoc: 3, Relevance: 4\nDoc: 7, Relevance: 3\n\nLet's try this now:\n\n{context}\nQuestion: {query}\nAnswer:`\n});\nfunction buildToolsText(tools) {\n    const toolsObj = tools.reduce((acc, tool)=>{\n        acc[tool.name] = tool.description;\n        return acc;\n    }, {});\n    return JSON.stringify(toolsObj, null, 4);\n}\nconst exampleTools = [\n    {\n        name: \"uber_10k\",\n        description: \"Provides information about Uber financials for year 2021\"\n    },\n    {\n        name: \"lyft_10k\",\n        description: \"Provides information about Lyft financials for year 2021\"\n    }\n];\nconst exampleQueryStr = `Compare and contrast the revenue growth and EBITDA of Uber and Lyft for year 2021`;\nconst exampleOutput = [\n    {\n        subQuestion: \"What is the revenue growth of Uber\",\n        toolName: \"uber_10k\"\n    },\n    {\n        subQuestion: \"What is the EBITDA of Uber\",\n        toolName: \"uber_10k\"\n    },\n    {\n        subQuestion: \"What is the revenue growth of Lyft\",\n        toolName: \"lyft_10k\"\n    },\n    {\n        subQuestion: \"What is the EBITDA of Lyft\",\n        toolName: \"lyft_10k\"\n    }\n];\nconst defaultSubQuestionPrompt = new PromptTemplate({\n    templateVars: [\n        \"toolsStr\",\n        \"queryStr\"\n    ],\n    template: `Given a user question, and a list of tools, output a list of relevant sub-questions that when composed can help answer the full user question:\n\n# Example 1\n<Tools>\n\\`\\`\\`json\n${buildToolsText(exampleTools)}\n\\`\\`\\`\n\n<User Question>\n${exampleQueryStr}\n\n<Output>\n\\`\\`\\`json\n${JSON.stringify(exampleOutput, null, 4)}\n\\`\\`\\`\n\n# Example 2\n<Tools>\n\\`\\`\\`json\n{toolsStr}\n\\`\\`\\`\n\n<User Question>\n{queryStr}\n\n<Output>\n`\n});\nconst defaultCondenseQuestionPrompt = new PromptTemplate({\n    templateVars: [\n        \"chatHistory\",\n        \"question\"\n    ],\n    template: `Given a conversation (between Human and Assistant) and a follow up message from Human, rewrite the message to be a standalone question that captures all relevant context from the conversation.\n\n<Chat History>\n{chatHistory}\n\n<Follow Up Message>\n{question}\n\n<Standalone question>\n`\n});\nconst defaultContextSystemPrompt = new PromptTemplate({\n    templateVars: [\n        \"context\"\n    ],\n    template: `Context information is below.\n---------------------\n{context}\n---------------------`\n});\nconst defaultKeywordExtractPrompt = new PromptTemplate({\n    templateVars: [\n        \"maxKeywords\",\n        \"context\"\n    ],\n    template: `\nSome text is provided below. Given the text, extract up to {maxKeywords} keywords from the text. Avoid stopwords.\n---------------------\n{context}\n---------------------\nProvide keywords in the following comma-separated format: 'KEYWORDS: <keywords>'\n`\n}).partialFormat({\n    maxKeywords: \"10\"\n});\nconst defaultQueryKeywordExtractPrompt = new PromptTemplate({\n    templateVars: [\n        \"maxKeywords\",\n        \"question\"\n    ],\n    template: `(\n  \"A question is provided below. Given the question, extract up to {maxKeywords} \"\n  \"keywords from the text. Focus on extracting the keywords that we can use \"\n  \"to best lookup answers to the question. Avoid stopwords.\"\n  \"---------------------\"\n  \"{question}\"\n  \"---------------------\"\n  \"Provide keywords in the following comma-separated format: 'KEYWORDS: <keywords>'\"\n)`\n}).partialFormat({\n    maxKeywords: \"10\"\n});\nconst defaultQuestionExtractPrompt = new PromptTemplate({\n    templateVars: [\n        \"numQuestions\",\n        \"context\"\n    ],\n    template: `(\n  \"Given the contextual informations below, generate {numQuestions} questions this context can provides specific answers to which are unlikely to be found else where. Higher-level summaries of surrounding context may be provided as well. \"\n  \"Try using these summaries to generate better questions that this context can answer.\"\n  \"---------------------\"\n  \"{context}\"\n  \"---------------------\"\n  \"Provide questions in the following format: 'QUESTIONS: <questions>'\"\n)`\n}).partialFormat({\n    numQuestions: \"5\"\n});\nconst defaultTitleExtractorPromptTemplate = new PromptTemplate({\n    templateVars: [\n        \"context\"\n    ],\n    template: `{context}\nGive a title that summarizes all of the unique entities, titles or themes found in the context. \nTitle: `\n});\nconst defaultTitleCombinePromptTemplate = new PromptTemplate({\n    templateVars: [\n        \"context\"\n    ],\n    template: `{context} \nBased on the above candidate titles and contents, what is the comprehensive title for this document? \nTitle: `\n});\nnew PromptTemplate({\n    templateVars: [\n        \"context\",\n        \"numKeywords\"\n    ],\n    template: `{context}\nGive {numKeywords} unique keywords for this document. \nFormat as comma separated. \nKeywords: `\n}).partialFormat({\n    keywordCount: \"5\"\n});\nconst defaultNodeTextTemplate = new PromptTemplate({\n    templateVars: [\n        \"metadataStr\",\n        \"content\"\n    ],\n    template: `[Excerpt from document]\n{metadataStr}\nExcerpt:\n-----\n{content}\n-----\n`\n}).partialFormat({\n    metadataStr: \"\",\n    content: \"\"\n});\n\nexport { BasePromptTemplate, PromptMixin, PromptTemplate, anthropicSummaryPrompt, anthropicTextQaPrompt, defaultChoiceSelectPrompt, defaultCondenseQuestionPrompt, defaultContextSystemPrompt, defaultKeywordExtractPrompt, defaultNodeTextTemplate, defaultQueryKeywordExtractPrompt, defaultQuestionExtractPrompt, defaultRefinePrompt, defaultSubQuestionPrompt, defaultSummaryPrompt, defaultTextQAPrompt, defaultTitleCombinePromptTemplate, defaultTitleExtractorPromptTemplate, defaultTreeSummarizePrompt };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2518, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/memory/dist/index.js"],"sourcesContent":["import { Settings } from '../../global/dist/index.js';\nimport { SimpleChatStore } from '../../storage/chat-store/dist/index.js';\nimport { extractText, messagesToHistory } from '../../utils/dist/index.js';\nimport { tokenizers } from '@llamaindex/env/tokenizers';\nimport { defaultSummaryPrompt } from '../../prompts/dist/index.js';\n\nconst DEFAULT_TOKEN_LIMIT_RATIO = 0.75;\nconst DEFAULT_CHAT_STORE_KEY = \"chat_history\";\n/**\n * A ChatMemory is used to keep the state of back and forth chat messages\n */ class BaseMemory {\n    _tokenCountForMessages(messages) {\n        if (messages.length === 0) {\n            return 0;\n        }\n        const tokenizer = Settings.tokenizer;\n        const str = messages.map((m)=>extractText(m.content)).join(\" \");\n        return tokenizer.encode(str).length;\n    }\n}\nclass BaseChatStoreMemory extends BaseMemory {\n    constructor(chatStore = new SimpleChatStore(), chatStoreKey = DEFAULT_CHAT_STORE_KEY){\n        super(), this.chatStore = chatStore, this.chatStoreKey = chatStoreKey;\n    }\n    getAllMessages() {\n        return this.chatStore.getMessages(this.chatStoreKey);\n    }\n    put(messages) {\n        this.chatStore.addMessage(this.chatStoreKey, messages);\n    }\n    set(messages) {\n        this.chatStore.setMessages(this.chatStoreKey, messages);\n    }\n    reset() {\n        this.chatStore.deleteMessages(this.chatStoreKey);\n    }\n}\n\nclass ChatMemoryBuffer extends BaseChatStoreMemory {\n    constructor(options){\n        super(options?.chatStore, options?.chatStoreKey);\n        const llm = options?.llm ?? Settings.llm;\n        const contextWindow = llm.metadata.contextWindow;\n        this.tokenLimit = options?.tokenLimit ?? Math.ceil(contextWindow * DEFAULT_TOKEN_LIMIT_RATIO);\n        if (options?.chatHistory) {\n            this.chatStore.setMessages(this.chatStoreKey, options.chatHistory);\n        }\n    }\n    async getMessages(transientMessages, initialTokenCount = 0) {\n        const messages = await this.getAllMessages();\n        if (initialTokenCount > this.tokenLimit) {\n            throw new Error(\"Initial token count exceeds token limit\");\n        }\n        // Add input messages as transient messages\n        const messagesWithInput = transientMessages ? [\n            ...transientMessages,\n            ...messages\n        ] : messages;\n        let messageCount = messagesWithInput.length;\n        let currentMessages = messagesWithInput.slice(-messageCount);\n        let tokenCount = this._tokenCountForMessages(messagesWithInput) + initialTokenCount;\n        while(tokenCount > this.tokenLimit && messageCount > 1){\n            messageCount -= 1;\n            if (messagesWithInput.at(-messageCount).role === \"assistant\") {\n                messageCount -= 1;\n            }\n            currentMessages = messagesWithInput.slice(-messageCount);\n            tokenCount = this._tokenCountForMessages(currentMessages) + initialTokenCount;\n        }\n        if (tokenCount > this.tokenLimit && messageCount <= 0) {\n            return [];\n        }\n        return messagesWithInput.slice(-messageCount);\n    }\n}\n\nclass ChatSummaryMemoryBuffer extends BaseMemory {\n    constructor(options){\n        super();\n        this.messages = options?.messages ?? [];\n        this.summaryPrompt = options?.summaryPrompt ?? defaultSummaryPrompt;\n        this.llm = options?.llm ?? Settings.llm;\n        if (!this.llm.metadata.maxTokens) {\n            throw new Error(\"LLM maxTokens is not set. Needed so the summarizer ensures the context window size of the LLM.\");\n        }\n        this.tokenizer = options?.tokenizer ?? tokenizers.tokenizer();\n        this.tokensToSummarize = this.llm.metadata.contextWindow - this.llm.metadata.maxTokens;\n        if (this.tokensToSummarize < this.llm.metadata.contextWindow * 0.25) {\n            throw new Error(\"The number of tokens that trigger the summarize process are less than 25% of the context window. Try lowering maxTokens or use a model with a larger context window.\");\n        }\n    }\n    async summarize() {\n        // get the conversation messages to create summary\n        const messagesToSummarize = this.calcConversationMessages();\n        let promptMessages;\n        do {\n            promptMessages = [\n                {\n                    content: this.summaryPrompt.format({\n                        context: messagesToHistory(messagesToSummarize)\n                    }),\n                    role: \"user\",\n                    options: {}\n                }\n            ];\n            // remove oldest message until the chat history is short enough for the context window\n            messagesToSummarize.shift();\n        }while (this.tokenizer.encode(promptMessages[0].content).length > this.tokensToSummarize)\n        const response = await this.llm.chat({\n            messages: promptMessages\n        });\n        return {\n            content: response.message.content,\n            role: \"memory\"\n        };\n    }\n    // Find last summary message\n    get lastSummaryIndex() {\n        const reversedMessages = this.messages.slice().reverse();\n        const index = reversedMessages.findIndex((message)=>message.role === \"memory\");\n        if (index === -1) {\n            return null;\n        }\n        return this.messages.length - 1 - index;\n    }\n    getLastSummary() {\n        const lastSummaryIndex = this.lastSummaryIndex;\n        return lastSummaryIndex ? this.messages[lastSummaryIndex] : null;\n    }\n    get systemMessages() {\n        // get array of all system messages\n        return this.messages.filter((message)=>message.role === \"system\");\n    }\n    get nonSystemMessages() {\n        // get array of all non-system messages\n        return this.messages.filter((message)=>message.role !== \"system\");\n    }\n    /**\n   * Calculates the messages that describe the conversation so far.\n   * If there's no memory, all non-system messages are used.\n   * If there's a memory, uses all messages after the last summary message.\n   */ calcConversationMessages(transformSummary) {\n        const lastSummaryIndex = this.lastSummaryIndex;\n        if (!lastSummaryIndex) {\n            // there's no memory, so just use all non-system messages\n            return this.nonSystemMessages;\n        } else {\n            // there's a memory, so use all messages after the last summary message\n            // and convert summary message so it can be send to the LLM\n            const summaryMessage = transformSummary ? {\n                content: `Summary of the conversation so far: ${this.messages[lastSummaryIndex].content}`,\n                role: \"system\"\n            } : this.messages[lastSummaryIndex];\n            return [\n                summaryMessage,\n                ...this.messages.slice(lastSummaryIndex + 1)\n            ];\n        }\n    }\n    calcCurrentRequestMessages(transientMessages) {\n        // currently, we're sending:\n        // system messages first, then transient messages and then the messages that describe the conversation so far\n        return [\n            ...this.systemMessages,\n            ...transientMessages ? transientMessages : [],\n            ...this.calcConversationMessages(true)\n        ];\n    }\n    reset() {\n        this.messages = [];\n    }\n    async getMessages(transientMessages) {\n        const requestMessages = this.calcCurrentRequestMessages(transientMessages);\n        // get tokens of current request messages and the transient messages\n        const tokens = requestMessages.reduce((count, message)=>count + this.tokenizer.encode(extractText(message.content)).length, 0);\n        if (tokens > this.tokensToSummarize) {\n            // if there are too many tokens for the next request, call summarize\n            const memoryMessage = await this.summarize();\n            const lastMessage = this.messages.at(-1);\n            if (lastMessage && lastMessage.role === \"user\") {\n                // if last message is a user message, ensure that it's sent after the new memory message\n                this.messages.pop();\n                this.messages.push(memoryMessage);\n                this.messages.push(lastMessage);\n            } else {\n                // otherwise just add the memory message\n                this.messages.push(memoryMessage);\n            }\n            // TODO: we still might have too many tokens\n            // e.g. too large system messages or transient messages\n            // how should we deal with that?\n            return this.calcCurrentRequestMessages(transientMessages);\n        }\n        return requestMessages;\n    }\n    async getAllMessages() {\n        return this.getMessages();\n    }\n    put(message) {\n        this.messages.push(message);\n    }\n}\n\nexport { BaseMemory, ChatMemoryBuffer, ChatSummaryMemoryBuffer };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2734, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/node-parser/dist/index.js"],"sourcesContent":["import { Settings, DEFAULT_CHUNK_OVERLAP, DEFAULT_CHUNK_SIZE } from '../../global/dist/index.js';\nimport { TransformComponent, MetadataMode, NodeRelationship, buildNodeFromSplits, sentenceSplitterSchema, sentenceWindowNodeParserSchema } from '../../schema/dist/index.js';\nimport { isPromise } from '../../utils/dist/index.js';\nimport { randomUUID } from '@llamaindex/env';\nimport { z } from 'zod';\n\nclass NodeParser extends TransformComponent {\n    constructor(){\n        super((nodes)=>{\n            // alex: should we fix `as` type?\n            return this.getNodesFromDocuments(nodes);\n        }), this.includeMetadata = true, this.includePrevNextRel = true;\n    }\n    postProcessParsedNodes(nodes, parentDocMap) {\n        nodes.forEach((node, i)=>{\n            const parentDoc = parentDocMap.get(node.sourceNode?.nodeId || \"\");\n            if (parentDoc) {\n                const startCharIdx = parentDoc.text.indexOf(node.getContent(MetadataMode.NONE));\n                if (startCharIdx >= 0) {\n                    node.startCharIdx = startCharIdx;\n                    node.endCharIdx = startCharIdx + node.getContent(MetadataMode.NONE).length;\n                }\n                if (this.includeMetadata && node.metadata && parentDoc.metadata) {\n                    node.metadata = {\n                        ...node.metadata,\n                        ...parentDoc.metadata\n                    };\n                }\n            }\n            if (this.includePrevNextRel && node.sourceNode) {\n                const previousNode = i > 0 ? nodes[i - 1] : null;\n                const nextNode = i < nodes.length - 1 ? nodes[i + 1] : null;\n                if (previousNode && previousNode.sourceNode && previousNode.sourceNode.nodeId === node.sourceNode.nodeId) {\n                    node.relationships = {\n                        ...node.relationships,\n                        [NodeRelationship.PREVIOUS]: previousNode.asRelatedNodeInfo()\n                    };\n                }\n                if (nextNode && nextNode.sourceNode && nextNode.sourceNode.nodeId === node.sourceNode.nodeId) {\n                    node.relationships = {\n                        ...node.relationships,\n                        [NodeRelationship.NEXT]: nextNode.asRelatedNodeInfo()\n                    };\n                }\n            }\n        });\n        return nodes;\n    }\n    getNodesFromDocuments(documents) {\n        const docsId = new Map(documents.map((doc)=>[\n                doc.id_,\n                doc\n            ]));\n        const callbackManager = Settings.callbackManager;\n        callbackManager.dispatchEvent(\"node-parsing-start\", {\n            documents\n        });\n        const parsedNodes = this.parseNodes(documents);\n        if (isPromise(parsedNodes)) {\n            return parsedNodes.then((parsedNodes)=>{\n                const nodes = this.postProcessParsedNodes(parsedNodes, docsId);\n                callbackManager.dispatchEvent(\"node-parsing-end\", {\n                    nodes\n                });\n                return nodes;\n            });\n        } else {\n            const nodes = this.postProcessParsedNodes(parsedNodes, docsId);\n            callbackManager.dispatchEvent(\"node-parsing-end\", {\n                nodes\n            });\n            return nodes;\n        }\n    }\n}\nclass TextSplitter extends NodeParser {\n    splitTexts(texts) {\n        return texts.flatMap((text)=>this.splitText(text));\n    }\n    parseNodes(nodes) {\n        return nodes.reduce((allNodes, node)=>{\n            const splits = this.splitText(node.getContent(MetadataMode.ALL));\n            const nodes = buildNodeFromSplits(splits, node);\n            return allNodes.concat(nodes);\n        }, []);\n    }\n}\nclass MetadataAwareTextSplitter extends TextSplitter {\n    splitTextsMetadataAware(texts, metadata) {\n        if (texts.length !== metadata.length) {\n            throw new TypeError(\"`texts` and `metadata` must have the same length\");\n        }\n        return texts.flatMap((text, i)=>this.splitTextMetadataAware(text, metadata[i]));\n    }\n    getMetadataString(node) {\n        const embedStr = node.getMetadataStr(MetadataMode.EMBED);\n        const llmStr = node.getMetadataStr(MetadataMode.LLM);\n        if (embedStr.length > llmStr.length) {\n            return embedStr;\n        } else {\n            return llmStr;\n        }\n    }\n    parseNodes(nodes) {\n        return nodes.reduce((allNodes, node)=>{\n            const metadataStr = this.getMetadataString(node);\n            const splits = this.splitTextMetadataAware(node.getContent(MetadataMode.NONE), metadataStr);\n            return allNodes.concat(buildNodeFromSplits(splits, node));\n        }, []);\n    }\n}\n\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __commonJS = (cb, mod)=>function __require() {\n        return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = {\n            exports: {}\n        }).exports, mod), mod.exports;\n    };\n// lib/natural/tokenizers/tokenizer.js\nvar require_tokenizer = __commonJS({\n    \"lib/natural/tokenizers/tokenizer.js\" (exports, module) {\n        var Tokenizer = class {\n            trim(array) {\n                while(array[array.length - 1] === \"\"){\n                    array.pop();\n                }\n                while(array[0] === \"\"){\n                    array.shift();\n                }\n                return array;\n            }\n        };\n        module.exports = Tokenizer;\n    }\n});\n// lib/natural/tokenizers/sentence_tokenizer.js\nvar require_sentence_tokenizer = __commonJS({\n    \"lib/natural/tokenizers/sentence_tokenizer.js\" (exports, module) {\n        var Tokenizer = require_tokenizer();\n        var NUM = \"NUMBER\";\n        var DELIM = \"DELIM\";\n        var URI = \"URI\";\n        var ABBREV = \"ABBREV\";\n        function generateUniqueCode(base, index) {\n            return `{{${base}_${index}}}`;\n        }\n        function escapeRegExp(string) {\n            return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n        }\n        var SentenceTokenizer = class extends Tokenizer {\n            constructor(abbreviations){\n                super();\n                if (abbreviations) {\n                    this.abbreviations = abbreviations;\n                } else {\n                    this.abbreviations = [];\n                }\n                this.replacementMap = null;\n                this.replacementCounter = 0;\n            }\n            replaceUrisWithPlaceholders(text) {\n                const urlPattern = /(https?:\\/\\/\\S+|www\\.\\S+|ftp:\\/\\/\\S+|(mailto:)?[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}|file:\\/\\/\\S+)/gi;\n                const modifiedText = text.replace(urlPattern, (match)=>{\n                    const placeholder = generateUniqueCode(URI, this.replacementCounter++);\n                    this.replacementMap.set(placeholder, match);\n                    return placeholder;\n                });\n                return modifiedText;\n            }\n            replaceAbbreviations(text) {\n                if (this.abbreviations.length === 0) {\n                    return text;\n                }\n                const pattern = new RegExp(`(${this.abbreviations.map((abbrev)=>escapeRegExp(abbrev)).join(\"|\")})`, \"gi\");\n                const replacedText = text.replace(pattern, (match)=>{\n                    const code = generateUniqueCode(ABBREV, this.replacementCounter++);\n                    this.replacementMap.set(code, match);\n                    return code;\n                });\n                return replacedText;\n            }\n            replaceDelimitersWithPlaceholders(text) {\n                const delimiterPattern = /([.?!… ]*)([.?!…])([\"'”’)}\\]]?)/g;\n                const modifiedText = text.replace(delimiterPattern, (match, p1, p2, p3)=>{\n                    const placeholder = generateUniqueCode(DELIM, this.replacementCounter++);\n                    this.delimiterMap.set(placeholder, p1 + p2 + p3);\n                    return placeholder;\n                });\n                return modifiedText;\n            }\n            splitOnPlaceholders(text, placeholders) {\n                if (this.delimiterMap.size === 0) {\n                    return [\n                        text\n                    ];\n                }\n                const keys = Array.from(this.delimiterMap.keys());\n                const pattern = new RegExp(`(${keys.map(escapeRegExp).join(\"|\")})`);\n                const parts = text.split(pattern);\n                const sentences = [];\n                for(let i = 0; i < parts.length; i += 2){\n                    const sentence = parts[i];\n                    const placeholder = parts[i + 1] || \"\";\n                    sentences.push(sentence + placeholder);\n                }\n                return sentences;\n            }\n            replaceNumbersWithCode(text) {\n                const numberPattern = /\\b\\d{1,3}(?:,\\d{3})*(?:\\.\\d+)?\\b/g;\n                const replacedText = text.replace(numberPattern, (match)=>{\n                    const code = generateUniqueCode(NUM, this.replacementCounter++);\n                    this.replacementMap.set(code, match);\n                    return code;\n                });\n                return replacedText;\n            }\n            revertReplacements(text) {\n                let originalText = text;\n                for (const [placeholder, replacement] of this.replacementMap.entries()){\n                    const pattern = new RegExp(escapeRegExp(placeholder), \"g\");\n                    originalText = originalText.replace(pattern, replacement);\n                }\n                return originalText;\n            }\n            revertDelimiters(text) {\n                let originalText = text;\n                for (const [placeholder, replacement] of this.delimiterMap.entries()){\n                    const pattern = new RegExp(escapeRegExp(placeholder), \"g\");\n                    originalText = originalText.replace(pattern, replacement);\n                }\n                return originalText;\n            }\n            tokenize(text) {\n                this.replacementCounter = 0;\n                this.replacementMap = /* @__PURE__ */ new Map();\n                this.delimiterMap = /* @__PURE__ */ new Map();\n                const result1 = this.replaceAbbreviations(text);\n                const result2 = this.replaceUrisWithPlaceholders(result1);\n                const result3 = this.replaceNumbersWithCode(result2);\n                const result4 = this.replaceDelimitersWithPlaceholders(result3);\n                const sentences = this.splitOnPlaceholders(result4);\n                const newSentences = sentences.map((s)=>{\n                    const s1 = this.revertReplacements(s);\n                    return this.revertDelimiters(s1);\n                });\n                const trimmedSentences = this.trim(newSentences);\n                const trimmedSentences2 = trimmedSentences.map((sent)=>sent.trim());\n                return trimmedSentences2;\n            }\n        };\n        module.exports = SentenceTokenizer;\n    }\n});\nvar SentenceTokenizer = require_sentence_tokenizer();\n\nconst truncateText = (text, textSplitter)=>{\n    const chunks = textSplitter.splitText(text);\n    return chunks[0] ?? text;\n};\nconst splitTextKeepSeparator = (text, separator)=>{\n    const parts = text.split(separator);\n    const result = parts.map((part, index)=>index > 0 ? separator + part : part);\n    return result.filter((s)=>s);\n};\nconst splitBySep = (sep, keepSep = true)=>{\n    if (keepSep) {\n        return (text)=>splitTextKeepSeparator(text, sep);\n    } else {\n        return (text)=>text.split(sep);\n    }\n};\nconst splitByChar = ()=>{\n    return (text)=>text.split(\"\");\n};\nlet sentenceTokenizer = null;\nconst splitBySentenceTokenizer = ()=>{\n    if (!sentenceTokenizer) {\n        sentenceTokenizer = new SentenceTokenizer([\n            \"i.e.\",\n            \"etc.\",\n            \"vs.\",\n            \"Inc.\",\n            \"A.S.A.P.\"\n        ]);\n    }\n    const tokenizer = sentenceTokenizer;\n    return (text)=>{\n        try {\n            return tokenizer.tokenize(text);\n        } catch  {\n            return [\n                text\n            ];\n        }\n    };\n};\nconst splitByRegex = (regex)=>{\n    return (text)=>text.match(new RegExp(regex, \"g\")) || [];\n};\nconst splitByPhraseRegex = ()=>{\n    const regex = \"[^,.;]+[,.;]?\";\n    return splitByRegex(regex);\n};\n\n/**\n * Parse text with a preference for complete sentences.\n */ class SentenceSplitter extends MetadataAwareTextSplitter {\n    #chunkingTokenizerFn;\n    #splitFns;\n    #subSentenceSplitFns;\n    #tokenizer;\n    constructor(params){\n        super(), /**\n   * The token chunk size for each chunk.\n   */ this.chunkSize = 1024, /**\n   * The token overlap of each chunk when splitting.\n   */ this.chunkOverlap = 200, /**\n   * Default separator for splitting into words\n   */ this.separator = \" \", /**\n   * Separator between paragraphs.\n   */ this.paragraphSeparator = \"\\n\\n\\n\", /**\n   * Backup regex for splitting into sentences.\n   */ this.secondaryChunkingRegex = \"[^,.;。？！]+[,.;。？！]?\", this.#chunkingTokenizerFn = splitBySentenceTokenizer(), this.#splitFns = new Set(), this.#subSentenceSplitFns = new Set(), this.tokenSize = (text)=>this.#tokenizer.encode(text).length;\n        if (params) {\n            const parsedParams = sentenceSplitterSchema.parse(params);\n            this.chunkSize = parsedParams.chunkSize;\n            this.chunkOverlap = parsedParams.chunkOverlap;\n            this.separator = parsedParams.separator;\n            this.paragraphSeparator = parsedParams.paragraphSeparator;\n            this.secondaryChunkingRegex = parsedParams.secondaryChunkingRegex;\n        }\n        this.#tokenizer = params?.tokenizer ?? Settings.tokenizer;\n        this.#splitFns.add(splitBySep(this.paragraphSeparator));\n        this.#splitFns.add(this.#chunkingTokenizerFn);\n        this.#subSentenceSplitFns.add(splitByRegex(this.secondaryChunkingRegex));\n        this.#subSentenceSplitFns.add(splitBySep(this.separator));\n        this.#subSentenceSplitFns.add(splitByChar());\n    }\n    splitTextMetadataAware(text, metadata) {\n        const metadataLength = this.tokenSize(metadata);\n        const effectiveChunkSize = this.chunkSize - metadataLength;\n        if (effectiveChunkSize <= 0) {\n            throw new Error(`Metadata length (${metadataLength}) is longer than chunk size (${this.chunkSize}). Consider increasing the chunk size or decreasing the size of your metadata to avoid this.`);\n        } else if (effectiveChunkSize < 50) {\n            console.log(`Metadata length (${metadataLength}) is close to chunk size (${this.chunkSize}). Resulting chunks are less than 50 tokens. Consider increasing the chunk size or decreasing the size of your metadata to avoid this.`);\n        }\n        return this._splitText(text, effectiveChunkSize);\n    }\n    splitText(text) {\n        return this._splitText(text, this.chunkSize);\n    }\n    _splitText(text, chunkSize) {\n        if (text === \"\") return [\n            text\n        ];\n        const callbackManager = Settings.callbackManager;\n        callbackManager.dispatchEvent(\"chunking-start\", {\n            text: [\n                text\n            ]\n        });\n        const splits = this.#split(text, chunkSize);\n        const chunks = this.#merge(splits, chunkSize);\n        callbackManager.dispatchEvent(\"chunking-end\", {\n            chunks\n        });\n        return chunks;\n    }\n    #split(text, chunkSize) {\n        const tokenSize = this.tokenSize(text);\n        if (tokenSize <= chunkSize) {\n            return [\n                {\n                    text,\n                    isSentence: true,\n                    tokenSize\n                }\n            ];\n        }\n        const [textSplitsByFns, isSentence] = this.#getSplitsByFns(text);\n        const textSplits = [];\n        for (const textSplit of textSplitsByFns){\n            const tokenSize = this.tokenSize(textSplit);\n            if (tokenSize <= chunkSize) {\n                textSplits.push({\n                    text: textSplit,\n                    isSentence,\n                    tokenSize\n                });\n            } else {\n                const recursiveTextSplits = this.#split(textSplit, chunkSize);\n                textSplits.push(...recursiveTextSplits);\n            }\n        }\n        return textSplits;\n    }\n    #getSplitsByFns(text) {\n        for (const splitFn of this.#splitFns){\n            const splits = splitFn(text);\n            if (splits.length > 1) {\n                return [\n                    splits,\n                    true\n                ];\n            }\n        }\n        for (const splitFn of this.#subSentenceSplitFns){\n            const splits = splitFn(text);\n            if (splits.length > 1) {\n                return [\n                    splits,\n                    false\n                ];\n            }\n        }\n        return [\n            [\n                text\n            ],\n            true\n        ];\n    }\n    #merge(splits, chunkSize) {\n        const chunks = [];\n        let currentChunk = [];\n        let lastChunk = [];\n        let currentChunkLength = 0;\n        let newChunk = true;\n        const closeChunk = ()=>{\n            chunks.push(currentChunk.map(([text])=>text).join(\"\"));\n            lastChunk = currentChunk;\n            currentChunk = [];\n            currentChunkLength = 0;\n            newChunk = true;\n            let lastIndex = lastChunk.length - 1;\n            while(lastIndex >= 0 && currentChunkLength + lastChunk[lastIndex][1] <= this.chunkOverlap){\n                const [text, length] = lastChunk[lastIndex];\n                currentChunkLength += length;\n                currentChunk.unshift([\n                    text,\n                    length\n                ]);\n                lastIndex -= 1;\n            }\n        };\n        while(splits.length > 0){\n            const curSplit = splits[0];\n            if (curSplit.tokenSize > chunkSize) {\n                throw new Error(\"Single token exceeded chunk size\");\n            }\n            if (currentChunkLength + curSplit.tokenSize > chunkSize && !newChunk) {\n                closeChunk();\n            } else {\n                if (curSplit.isSentence || currentChunkLength + curSplit.tokenSize <= chunkSize || newChunk) {\n                    currentChunkLength += curSplit.tokenSize;\n                    currentChunk.push([\n                        curSplit.text,\n                        curSplit.tokenSize\n                    ]);\n                    splits.shift();\n                    newChunk = false;\n                } else {\n                    closeChunk();\n                }\n            }\n        }\n        // Handle the last chunk\n        if (!newChunk) {\n            chunks.push(currentChunk.map(([text])=>text).join(\"\"));\n        }\n        return this.#postprocessChunks(chunks);\n    }\n    /**\n   * Remove whitespace only chunks and remove leading and trailing whitespace.\n   */ #postprocessChunks(chunks) {\n        const newChunks = [];\n        for (const chunk of chunks){\n            const trimmedChunk = chunk.trim();\n            if (trimmedChunk !== \"\") {\n                newChunks.push(trimmedChunk);\n            }\n        }\n        return newChunks;\n    }\n}\n\nclass MarkdownNodeParser extends NodeParser {\n    parseNodes(nodes, showProgress) {\n        return nodes.reduce((allNodes, node)=>{\n            const markdownNodes = this.getNodesFromNode(node);\n            return allNodes.concat(markdownNodes);\n        }, []);\n    }\n    getNodesFromNode(node) {\n        const text = node.getContent(MetadataMode.NONE);\n        const markdownNodes = [];\n        const lines = text.split(\"\\n\");\n        let metadata = {};\n        let codeBlock = false;\n        let currentSection = \"\";\n        for (const line of lines){\n            if (line.trim().startsWith(\"```\")) {\n                codeBlock = !codeBlock;\n            }\n            const headerMatch = /^(#+)\\s(.*)/.exec(line);\n            if (headerMatch && !codeBlock) {\n                if (currentSection !== \"\") {\n                    markdownNodes.push(this.buildNodeFromSplit(currentSection.trim(), node, metadata));\n                }\n                metadata = this.updateMetadata(metadata, headerMatch[2], headerMatch[1].trim().length);\n                currentSection = `${headerMatch[2]}\\n`;\n            } else {\n                currentSection += line + \"\\n\";\n            }\n        }\n        if (currentSection !== \"\") {\n            markdownNodes.push(this.buildNodeFromSplit(currentSection.trim(), node, metadata));\n        }\n        return markdownNodes;\n    }\n    updateMetadata(headersMetadata, newHeader, newHeaderLevel) {\n        const updatedHeaders = {};\n        for(let i = 1; i < newHeaderLevel; i++){\n            const key = `Header_${i}`;\n            if (key in headersMetadata) {\n                updatedHeaders[key] = headersMetadata[key];\n            }\n        }\n        updatedHeaders[`Header_${newHeaderLevel}`] = newHeader;\n        return updatedHeaders;\n    }\n    buildNodeFromSplit(textSplit, node, metadata) {\n        const newNode = buildNodeFromSplits([\n            textSplit\n        ], node, undefined)[0];\n        if (this.includeMetadata) {\n            newNode.metadata = {\n                ...newNode.metadata,\n                ...metadata\n            };\n        }\n        return newNode;\n    }\n}\n\nclass SentenceWindowNodeParser extends NodeParser {\n    static{\n        this.DEFAULT_WINDOW_SIZE = 3;\n    }\n    static{\n        this.DEFAULT_WINDOW_METADATA_KEY = \"window\";\n    }\n    static{\n        this.DEFAULT_ORIGINAL_TEXT_METADATA_KEY = \"originalText\";\n    }\n    constructor(params){\n        super(), this.sentenceSplitter = splitBySentenceTokenizer(), this.idGenerator = ()=>randomUUID();\n        if (params) {\n            const parsedParams = sentenceWindowNodeParserSchema.parse(params);\n            this.windowSize = parsedParams.windowSize;\n            this.windowMetadataKey = parsedParams.windowMetadataKey;\n            this.originalTextMetadataKey = parsedParams.originalTextMetadataKey;\n        } else {\n            this.windowSize = SentenceWindowNodeParser.DEFAULT_WINDOW_SIZE;\n            this.windowMetadataKey = SentenceWindowNodeParser.DEFAULT_WINDOW_METADATA_KEY;\n            this.originalTextMetadataKey = SentenceWindowNodeParser.DEFAULT_ORIGINAL_TEXT_METADATA_KEY;\n        }\n    }\n    parseNodes(nodes, showProgress) {\n        return nodes.reduce((allNodes, node)=>{\n            const nodes = this.buildWindowNodesFromDocuments([\n                node\n            ]);\n            return allNodes.concat(nodes);\n        }, []);\n    }\n    buildWindowNodesFromDocuments(documents) {\n        const allNodes = [];\n        for (const doc of documents){\n            const text = doc.text;\n            const textSplits = this.sentenceSplitter(text);\n            const nodes = buildNodeFromSplits(textSplits, doc, undefined, this.idGenerator);\n            nodes.forEach((node, i)=>{\n                const windowNodes = nodes.slice(Math.max(0, i - this.windowSize), Math.min(i + this.windowSize + 1, nodes.length));\n                node.metadata[this.windowMetadataKey] = windowNodes.map((n)=>n.text).join(\" \");\n                node.metadata[this.originalTextMetadataKey] = node.text;\n                node.excludedEmbedMetadataKeys.push(this.windowMetadataKey, this.originalTextMetadataKey);\n                node.excludedLlmMetadataKeys.push(this.windowMetadataKey, this.originalTextMetadataKey);\n            });\n            allNodes.push(...nodes);\n        }\n        return allNodes;\n    }\n}\n\nconst DEFAULT_METADATA_FORMAT_LEN = 2;\nconst tokenTextSplitterSchema = z.object({\n    chunkSize: z.number().positive().default(DEFAULT_CHUNK_SIZE),\n    chunkOverlap: z.number().nonnegative().default(DEFAULT_CHUNK_OVERLAP),\n    separator: z.string().default(\" \"),\n    backupSeparators: z.array(z.string()).default([\n        \"\\n\"\n    ])\n});\nclass TokenTextSplitter extends MetadataAwareTextSplitter {\n    #tokenizer;\n    #splitFns;\n    constructor(params){\n        super(), this.chunkSize = DEFAULT_CHUNK_SIZE, this.chunkOverlap = DEFAULT_CHUNK_OVERLAP, this.separator = \" \", this.backupSeparators = [\n            \"\\n\"\n        ], this.#splitFns = [];\n        if (params) {\n            const parsedParams = tokenTextSplitterSchema.parse(params);\n            this.chunkSize = parsedParams.chunkSize;\n            this.chunkOverlap = parsedParams.chunkOverlap;\n            this.separator = parsedParams.separator;\n            this.backupSeparators = parsedParams.backupSeparators;\n        }\n        if (this.chunkOverlap > this.chunkSize) {\n            throw new Error(`Got a larger chunk overlap (${this.chunkOverlap}) than chunk size (${this.chunkSize}), should be smaller.`);\n        }\n        this.#tokenizer = params?.tokenizer ?? Settings.tokenizer;\n        const allSeparators = [\n            this.separator,\n            ...this.backupSeparators\n        ];\n        this.#splitFns = allSeparators.map((sep)=>splitBySep(sep));\n        this.#splitFns.push(splitByChar());\n    }\n    /**\n   * Split text into chunks, reserving space required for metadata string.\n   * @param text The text to split.\n   * @param metadata The metadata string.\n   * @returns An array of text chunks.\n   */ splitTextMetadataAware(text, metadata) {\n        const metadataLength = this.tokenSize(metadata) + DEFAULT_METADATA_FORMAT_LEN;\n        const effectiveChunkSize = this.chunkSize - metadataLength;\n        if (effectiveChunkSize <= 0) {\n            throw new Error(`Metadata length (${metadataLength}) is longer than chunk size (${this.chunkSize}). ` + `Consider increasing the chunk size or decreasing the size of your metadata to avoid this.`);\n        } else if (effectiveChunkSize < 50) {\n            console.warn(`Metadata length (${metadataLength}) is close to chunk size (${this.chunkSize}). ` + `Resulting chunks are less than 50 tokens. Consider increasing the chunk size or decreasing the size of your metadata to avoid this.`);\n        }\n        return this._splitText(text, effectiveChunkSize);\n    }\n    /**\n   * Split text into chunks.\n   * @param text The text to split.\n   * @returns An array of text chunks.\n   */ splitText(text) {\n        return this._splitText(text, this.chunkSize);\n    }\n    /**\n   * Internal method to split text into chunks up to a specified size.\n   * @param text The text to split.\n   * @param chunkSize The maximum size of each chunk.\n   * @returns An array of text chunks.\n   */ _splitText(text, chunkSize) {\n        if (text === \"\") return [\n            text\n        ];\n        // Dispatch chunking start event\n        Settings.callbackManager.dispatchEvent(\"chunking-start\", {\n            text: [\n                text\n            ]\n        });\n        const splits = this._split(text, chunkSize);\n        const chunks = this._merge(splits, chunkSize);\n        Settings.callbackManager.dispatchEvent(\"chunking-end\", {\n            chunks\n        });\n        return chunks;\n    }\n    /**\n   * Break text into splits that are smaller than the chunk size.\n   * @param text The text to split.\n   * @param chunkSize The maximum size of each split.\n   * @returns An array of text splits.\n   */ _split(text, chunkSize) {\n        if (this.tokenSize(text) <= chunkSize) {\n            return [\n                text\n            ];\n        }\n        for (const splitFn of this.#splitFns){\n            const splits = splitFn(text);\n            if (splits.length > 1) {\n                const newSplits = [];\n                for (const split of splits){\n                    const splitLen = this.tokenSize(split);\n                    if (splitLen <= chunkSize) {\n                        newSplits.push(split);\n                    } else {\n                        newSplits.push(...this._split(split, chunkSize));\n                    }\n                }\n                return newSplits;\n            }\n        }\n        return [\n            text\n        ];\n    }\n    /**\n   * Merge splits into chunks with overlap.\n   * @param splits The array of text splits.\n   * @param chunkSize The maximum size of each chunk.\n   * @returns An array of merged text chunks.\n   */ _merge(splits, chunkSize) {\n        const chunks = [];\n        let currentChunk = [];\n        let currentLength = 0;\n        for (const split of splits){\n            const splitLength = this.tokenSize(split);\n            if (splitLength > chunkSize) {\n                console.warn(`Got a split of size ${splitLength}, larger than chunk size ${chunkSize}.`);\n            }\n            if (currentLength + splitLength > chunkSize) {\n                const chunk = currentChunk.join(\"\").trim();\n                if (chunk) {\n                    chunks.push(chunk);\n                }\n                currentChunk = [];\n                currentLength = 0;\n                const overlapTokens = this.chunkOverlap;\n                const overlapSplits = [];\n                let overlapLength = 0;\n                while(overlapSplits.length < splits.length && overlapLength < overlapTokens){\n                    const overlapSplit = currentChunk.shift();\n                    if (!overlapSplit) break;\n                    overlapSplits.push(overlapSplit);\n                    overlapLength += this.tokenSize(overlapSplit);\n                }\n                for (const overlapSplit of overlapSplits.reverse()){\n                    currentChunk.push(overlapSplit);\n                    currentLength += this.tokenSize(overlapSplit);\n                    if (currentLength >= overlapTokens) break;\n                }\n            }\n            currentChunk.push(split);\n            currentLength += splitLength;\n        }\n        const finalChunk = currentChunk.join(\"\").trim();\n        if (finalChunk) {\n            chunks.push(finalChunk);\n        }\n        return chunks;\n    }\n    /**\n   * Calculate the number of tokens in the text using the tokenizer.\n   * @param text The text to tokenize.\n   * @returns The number of tokens.\n   */ tokenSize(text) {\n        return this.#tokenizer.encode(text).length;\n    }\n}\n\n/**\n * @deprecated Use `SentenceSplitter` instead\n */ const SimpleNodeParser = SentenceSplitter;\n\nexport { MarkdownNodeParser, MetadataAwareTextSplitter, NodeParser, SentenceSplitter, SentenceWindowNodeParser, SimpleNodeParser, TextSplitter, TokenTextSplitter, splitByChar, splitByPhraseRegex, splitByRegex, splitBySentenceTokenizer, splitBySep, truncateText };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3515, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/indices/dist/index.js"],"sourcesContent":["import { DEFAULT_CONTEXT_WINDOW, DEFAULT_NUM_OUTPUTS, DEFAULT_CHUNK_OVERLAP_RATIO, Settings, DEFAULT_PADDING } from '../../global/dist/index.js';\nimport { TokenTextSplitter, truncateText } from '../../node-parser/dist/index.js';\nimport { PromptTemplate } from '../../prompts/dist/index.js';\n\n/**\n * Get the empty prompt text given a prompt.\n */ function getEmptyPromptTxt(prompt) {\n    return prompt.format(Object.fromEntries([\n        ...prompt.templateVars.keys()\n    ].map((key)=>[\n            key,\n            \"\"\n        ])));\n}\n/**\n * Get biggest empty prompt size from a list of prompts.\n * Used to calculate the maximum size of inputs to the LLM.\n */ function getBiggestPrompt(prompts) {\n    const emptyPromptTexts = prompts.map(getEmptyPromptTxt);\n    const emptyPromptLengths = emptyPromptTexts.map((text)=>text.length);\n    const maxEmptyPromptLength = Math.max(...emptyPromptLengths);\n    const maxEmptyPromptIndex = emptyPromptLengths.indexOf(maxEmptyPromptLength);\n    return prompts[maxEmptyPromptIndex];\n}\n/**\n * A collection of helper functions for working with prompts.\n */ class PromptHelper {\n    constructor(options = {}){\n        const { contextWindow = DEFAULT_CONTEXT_WINDOW, numOutput = DEFAULT_NUM_OUTPUTS, chunkOverlapRatio = DEFAULT_CHUNK_OVERLAP_RATIO, chunkSizeLimit, tokenizer, separator = \" \" } = options;\n        this.contextWindow = contextWindow;\n        this.numOutput = numOutput;\n        this.chunkOverlapRatio = chunkOverlapRatio;\n        this.chunkSizeLimit = chunkSizeLimit;\n        this.tokenizer = tokenizer ?? Settings.tokenizer;\n        this.separator = separator;\n    }\n    /**\n   * Calculate the available context size based on the number of prompt tokens.\n   */ #getAvailableContextSize(numPromptTokens) {\n        const contextSizeTokens = this.contextWindow - numPromptTokens - this.numOutput;\n        if (contextSizeTokens < 0) {\n            throw new Error(`Calculated available context size ${contextSizeTokens} is not non-negative.`);\n        }\n        return contextSizeTokens;\n    }\n    /**\n   * Calculate the available chunk size based on the prompt and other parameters.\n   */ #getAvailableChunkSize(prompt, numChunks = 1, padding = 5) {\n        let numPromptTokens = 0;\n        if (prompt instanceof PromptTemplate) {\n            numPromptTokens = this.tokenizer.encode(getEmptyPromptTxt(prompt)).length;\n        }\n        const availableContextSize = this.#getAvailableContextSize(numPromptTokens);\n        let result = Math.floor(availableContextSize / numChunks) - padding;\n        if (this.chunkSizeLimit !== undefined) {\n            result = Math.min(this.chunkSizeLimit, result);\n        }\n        return result;\n    }\n    /**\n   * Creates a text splitter configured to maximally pack the available context window.\n   */ getTextSplitterGivenPrompt(prompt, numChunks = 1, padding = DEFAULT_PADDING) {\n        const chunkSize = this.#getAvailableChunkSize(prompt, numChunks, padding);\n        if (chunkSize <= 0) {\n            throw new TypeError(`Chunk size ${chunkSize} is not positive.`);\n        }\n        const chunkOverlap = Math.floor(this.chunkOverlapRatio * chunkSize);\n        return new TokenTextSplitter({\n            separator: this.separator,\n            chunkSize,\n            chunkOverlap,\n            tokenizer: this.tokenizer\n        });\n    }\n    /**\n   * Truncate text chunks to fit within the available context window.\n   */ truncate(prompt, textChunks, padding = DEFAULT_PADDING) {\n        const textSplitter = this.getTextSplitterGivenPrompt(prompt, textChunks.length, padding);\n        return textChunks.map((chunk)=>truncateText(chunk, textSplitter));\n    }\n    /**\n   * Repack text chunks to better utilize the available context window.\n   */ repack(prompt, textChunks, padding = DEFAULT_PADDING) {\n        const textSplitter = this.getTextSplitterGivenPrompt(prompt, 1, padding);\n        const combinedStr = textChunks.map((c)=>c.trim()).filter((c)=>c.length > 0).join(\"\\n\\n\");\n        return textSplitter.splitText(combinedStr);\n    }\n    static fromLLMMetadata(metadata, options) {\n        const { chunkOverlapRatio = DEFAULT_CHUNK_OVERLAP_RATIO, chunkSizeLimit = undefined, tokenizer = Settings.tokenizer, separator = \" \" } = options ?? {};\n        return new PromptHelper({\n            contextWindow: metadata.contextWindow,\n            // fixme: numOutput is not in LLMMetadata\n            numOutput: DEFAULT_NUM_OUTPUTS,\n            chunkOverlapRatio,\n            chunkSizeLimit,\n            tokenizer,\n            separator\n        });\n    }\n}\n\nexport { PromptHelper, getBiggestPrompt };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3628, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/response-synthesizers/dist/index.js"],"sourcesContent":["import { randomUUID } from '@llamaindex/env';\nimport { Settings } from '../../global/dist/index.js';\nimport { PromptHelper, getBiggestPrompt } from '../../indices/dist/index.js';\nimport { PromptMixin, defaultTextQAPrompt, defaultTreeSummarizePrompt, defaultRefinePrompt } from '../../prompts/dist/index.js';\nimport { EngineResponse, MetadataMode, splitNodesByType, ModalityType, TextNode } from '../../schema/dist/index.js';\nimport { z } from 'zod';\nimport { imageToDataUrl, extractText, streamConverter } from '../../utils/dist/index.js';\n\nclass BaseSynthesizer extends PromptMixin {\n    constructor(options){\n        super();\n        this.llm = options.llm ?? Settings.llm;\n        this.promptHelper = options.promptHelper ?? PromptHelper.fromLLMMetadata(this.llm.metadata);\n    }\n    async synthesize(query, stream = false) {\n        const callbackManager = Settings.callbackManager;\n        const id = randomUUID();\n        callbackManager.dispatchEvent(\"synthesize-start\", {\n            id,\n            query\n        });\n        let response;\n        if (query.nodes.length === 0) {\n            if (stream) {\n                response = EngineResponse.fromResponse(\"Empty Response\", true, []);\n            } else {\n                response = EngineResponse.fromResponse(\"Empty Response\", false, []);\n            }\n        } else {\n            const queryMessage = typeof query.query === \"string\" ? query.query : query.query.query;\n            response = await this.getResponse(queryMessage, query.nodes, stream);\n        }\n        callbackManager.dispatchEvent(\"synthesize-end\", {\n            id,\n            query,\n            response\n        });\n        return response;\n    }\n}\n\nasync function createContentPerModality(prompt, type, nodes, extraParams, metadataMode) {\n    switch(type){\n        case ModalityType.TEXT:\n            return [\n                {\n                    type: \"text\",\n                    text: prompt.format({\n                        ...extraParams,\n                        context: nodes.map((r)=>r.getContent(metadataMode)).join(\"\\n\\n\")\n                    })\n                }\n            ];\n        case ModalityType.IMAGE:\n            return Promise.all(nodes.map(async (node)=>{\n                return {\n                    type: \"image_url\",\n                    image_url: {\n                        url: await imageToDataUrl(node.image)\n                    }\n                };\n            }));\n        default:\n            return [];\n    }\n}\nasync function createMessageContent(prompt, nodes, extraParams = {}, metadataMode = MetadataMode.NONE) {\n    const content = [];\n    const nodeMap = splitNodesByType(nodes);\n    for(const type in nodeMap){\n        // for each retrieved modality type, create message content\n        const nodes = nodeMap[type];\n        if (nodes) {\n            content.push(...await createContentPerModality(prompt, type, nodes, extraParams, metadataMode));\n        }\n    }\n    return content;\n}\n\nz.enum([\n    \"refine\",\n    \"compact\",\n    \"tree_summarize\",\n    \"multi_modal\"\n]);\n/**\n * A response builder that uses the query to ask the LLM generate a better response using multiple text chunks.\n */ class Refine extends BaseSynthesizer {\n    constructor(options){\n        super(options);\n        this.textQATemplate = options.textQATemplate ?? defaultTextQAPrompt;\n        this.refineTemplate = options.refineTemplate ?? defaultRefinePrompt;\n    }\n    _getPromptModules() {\n        return {};\n    }\n    _getPrompts() {\n        return {\n            textQATemplate: this.textQATemplate,\n            refineTemplate: this.refineTemplate\n        };\n    }\n    _updatePrompts(prompts) {\n        if (prompts.textQATemplate) {\n            this.textQATemplate = prompts.textQATemplate;\n        }\n        if (prompts.refineTemplate) {\n            this.refineTemplate = prompts.refineTemplate;\n        }\n    }\n    async getResponse(query, nodes, stream) {\n        let response = undefined;\n        const textChunks = nodes.map(({ node })=>node.getContent(MetadataMode.LLM));\n        for(let i = 0; i < textChunks.length; i++){\n            const text = textChunks[i];\n            const lastChunk = i === textChunks.length - 1;\n            if (!response) {\n                response = await this.giveResponseSingle(query, text, !!stream && lastChunk);\n            } else {\n                response = await this.refineResponseSingle(response, query, text, !!stream && lastChunk);\n            }\n        }\n        if (response === undefined) {\n            response = stream ? async function*() {\n                yield \"\";\n            }() : \"\";\n        }\n        if (typeof response === \"string\") {\n            return EngineResponse.fromResponse(response, false, nodes);\n        } else {\n            return streamConverter(response, (text)=>EngineResponse.fromResponse(text, true, nodes));\n        }\n    }\n    async giveResponseSingle(query, textChunk, stream) {\n        const textQATemplate = this.textQATemplate.partialFormat({\n            query: extractText(query)\n        });\n        const textChunks = this.promptHelper.repack(textQATemplate, [\n            textChunk\n        ]);\n        let response = undefined;\n        for(let i = 0; i < textChunks.length; i++){\n            const chunk = textChunks[i];\n            const lastChunk = i === textChunks.length - 1;\n            if (!response) {\n                response = await this.complete({\n                    prompt: textQATemplate.format({\n                        context: chunk\n                    }),\n                    stream: stream && lastChunk\n                });\n            } else {\n                response = await this.refineResponseSingle(response, query, chunk, stream && lastChunk);\n            }\n        }\n        return response;\n    }\n    async refineResponseSingle(initialReponse, query, textChunk, stream) {\n        const refineTemplate = this.refineTemplate.partialFormat({\n            query: extractText(query)\n        });\n        const textChunks = this.promptHelper.repack(refineTemplate, [\n            textChunk\n        ]);\n        let response = initialReponse;\n        for(let i = 0; i < textChunks.length; i++){\n            const chunk = textChunks[i];\n            const lastChunk = i === textChunks.length - 1;\n            response = await this.complete({\n                prompt: refineTemplate.format({\n                    context: chunk,\n                    existingAnswer: response\n                }),\n                stream: stream && lastChunk\n            });\n        }\n        return response;\n    }\n    async complete(params) {\n        if (params.stream) {\n            const response = await this.llm.complete({\n                ...params,\n                stream: true\n            });\n            return streamConverter(response, (chunk)=>chunk.text);\n        } else {\n            const response = await this.llm.complete({\n                ...params,\n                stream: false\n            });\n            return response.text;\n        }\n    }\n}\n/**\n * CompactAndRefine is a slight variation of Refine that first compacts the text chunks into the smallest possible number of chunks.\n */ class CompactAndRefine extends Refine {\n    async getResponse(query, nodes, stream) {\n        const textQATemplate = this.textQATemplate.partialFormat({\n            query: extractText(query)\n        });\n        const refineTemplate = this.refineTemplate.partialFormat({\n            query: extractText(query)\n        });\n        const textChunks = nodes.map(({ node })=>node.getContent(MetadataMode.LLM));\n        const maxPrompt = getBiggestPrompt([\n            textQATemplate,\n            refineTemplate\n        ]);\n        const newTexts = this.promptHelper.repack(maxPrompt, textChunks);\n        const newNodes = newTexts.map((text)=>new TextNode({\n                text\n            }));\n        if (stream) {\n            const streamResponse = await super.getResponse(query, newNodes.map((node)=>({\n                    node\n                })), true);\n            return streamConverter(streamResponse, (chunk)=>{\n                chunk.sourceNodes = nodes;\n                return chunk;\n            });\n        }\n        const originalResponse = await super.getResponse(query, newNodes.map((node)=>({\n                node\n            })), false);\n        originalResponse.sourceNodes = nodes;\n        return originalResponse;\n    }\n}\n/**\n * TreeSummarize repacks the text chunks into the smallest possible number of chunks and then summarizes them, then recursively does so until there's one chunk left.\n */ class TreeSummarize extends BaseSynthesizer {\n    constructor(options){\n        super(options);\n        this.summaryTemplate = options.summaryTemplate ?? defaultTreeSummarizePrompt;\n    }\n    _getPromptModules() {\n        return {};\n    }\n    _getPrompts() {\n        return {\n            summaryTemplate: this.summaryTemplate\n        };\n    }\n    _updatePrompts(prompts) {\n        if (prompts.summaryTemplate) {\n            this.summaryTemplate = prompts.summaryTemplate;\n        }\n    }\n    async getResponse(query, nodes, stream) {\n        const textChunks = nodes.map(({ node })=>node.getContent(MetadataMode.LLM));\n        if (!textChunks || textChunks.length === 0) {\n            throw new Error(\"Must have at least one text chunk\");\n        }\n        // Should we send the query here too?\n        const packedTextChunks = this.promptHelper.repack(this.summaryTemplate, textChunks);\n        if (packedTextChunks.length === 1) {\n            const params = {\n                prompt: this.summaryTemplate.format({\n                    context: packedTextChunks[0],\n                    query: extractText(query)\n                })\n            };\n            if (stream) {\n                const response = await this.llm.complete({\n                    ...params,\n                    stream\n                });\n                return streamConverter(response, (chunk)=>EngineResponse.fromResponse(chunk.text, true, nodes));\n            }\n            return EngineResponse.fromResponse((await this.llm.complete(params)).text, false, nodes);\n        } else {\n            const summaries = await Promise.all(packedTextChunks.map((chunk)=>this.llm.complete({\n                    prompt: this.summaryTemplate.format({\n                        context: chunk,\n                        query: extractText(query)\n                    })\n                })));\n            if (stream) {\n                return this.getResponse(query, summaries.map((s)=>({\n                        node: new TextNode({\n                            text: s.text\n                        })\n                    })), true);\n            }\n            return this.getResponse(query, summaries.map((s)=>({\n                    node: new TextNode({\n                        text: s.text\n                    })\n                })), false);\n        }\n    }\n}\nclass MultiModal extends BaseSynthesizer {\n    constructor({ textQATemplate, metadataMode, ...options } = {}){\n        super(options);\n        this.metadataMode = metadataMode ?? MetadataMode.NONE;\n        this.textQATemplate = textQATemplate ?? defaultTextQAPrompt;\n    }\n    _getPromptModules() {\n        return {};\n    }\n    _getPrompts() {\n        return {\n            textQATemplate: this.textQATemplate\n        };\n    }\n    _updatePrompts(promptsDict) {\n        if (promptsDict.textQATemplate) {\n            this.textQATemplate = promptsDict.textQATemplate;\n        }\n    }\n    async getResponse(query, nodes, stream) {\n        const prompt = await createMessageContent(this.textQATemplate, nodes.map(({ node })=>node), // this might not be good as this remove the image information\n        {\n            query: extractText(query)\n        }, this.metadataMode);\n        const llm = this.llm;\n        if (stream) {\n            const response = await llm.complete({\n                prompt,\n                stream\n            });\n            return streamConverter(response, ({ text })=>EngineResponse.fromResponse(text, true, nodes));\n        }\n        const response = await llm.complete({\n            prompt\n        });\n        return EngineResponse.fromResponse(response.text, false, nodes);\n    }\n}\nconst modeToSynthesizer = {\n    compact: CompactAndRefine,\n    refine: Refine,\n    tree_summarize: TreeSummarize,\n    multi_modal: MultiModal\n};\nfunction getResponseSynthesizer(mode, options = {}) {\n    const Synthesizer = modeToSynthesizer[mode];\n    if (!Synthesizer) {\n        throw new Error(`Invalid response mode: ${mode}`);\n    }\n    return new Synthesizer(options);\n}\n\nexport { BaseSynthesizer, createMessageContent, getResponseSynthesizer };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3988, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/chat-engine/dist/index.js"],"sourcesContent":["import { wrapEventCaller } from '../../decorator/dist/index.js';\nimport { Settings } from '../../global/dist/index.js';\nimport { ChatMemoryBuffer, BaseMemory } from '../../memory/dist/index.js';\nimport { PromptMixin, defaultContextSystemPrompt } from '../../prompts/dist/index.js';\nimport { MetadataMode, EngineResponse } from '../../schema/dist/index.js';\nimport { streamConverter, streamReducer, extractText } from '../../utils/dist/index.js';\nimport { createMessageContent } from '../../response-synthesizers/dist/index.js';\n\nclass BaseChatEngine {\n}\n\nclass DefaultContextGenerator extends PromptMixin {\n    constructor(init){\n        super();\n        this.retriever = init.retriever;\n        this.contextSystemPrompt = init?.contextSystemPrompt ?? defaultContextSystemPrompt;\n        this.nodePostprocessors = init.nodePostprocessors || [];\n        this.contextRole = init.contextRole ?? \"system\";\n        this.metadataMode = init.metadataMode ?? MetadataMode.NONE;\n    }\n    _getPromptModules() {\n        return {};\n    }\n    _getPrompts() {\n        return {\n            contextSystemPrompt: this.contextSystemPrompt\n        };\n    }\n    _updatePrompts(promptsDict) {\n        if (promptsDict.contextSystemPrompt) {\n            this.contextSystemPrompt = promptsDict.contextSystemPrompt;\n        }\n    }\n    async applyNodePostprocessors(nodes, query) {\n        let nodesWithScore = nodes;\n        for (const postprocessor of this.nodePostprocessors){\n            nodesWithScore = await postprocessor.postprocessNodes(nodesWithScore, query);\n        }\n        return nodesWithScore;\n    }\n    async generate(message) {\n        const sourceNodesWithScore = await this.retriever.retrieve({\n            query: message\n        });\n        const nodes = await this.applyNodePostprocessors(sourceNodesWithScore, message);\n        const content = await createMessageContent(this.contextSystemPrompt, nodes.map((r)=>r.node), undefined, this.metadataMode);\n        return {\n            message: {\n                content,\n                role: this.contextRole\n            },\n            nodes\n        };\n    }\n}\n\nfunction applyDecs2203RFactory$1() {\n    function createAddInitializerMethod(initializers, decoratorFinishedRef) {\n        return function addInitializer(initializer) {\n            assertNotFinished(decoratorFinishedRef, \"addInitializer\");\n            assertCallable(initializer, \"An initializer\");\n            initializers.push(initializer);\n        };\n    }\n    function memberDec(dec, name, desc, initializers, kind, isStatic, isPrivate, metadata, value) {\n        var kindStr;\n        switch(kind){\n            case 1:\n                kindStr = \"accessor\";\n                break;\n            case 2:\n                kindStr = \"method\";\n                break;\n            case 3:\n                kindStr = \"getter\";\n                break;\n            case 4:\n                kindStr = \"setter\";\n                break;\n            default:\n                kindStr = \"field\";\n        }\n        var ctx = {\n            kind: kindStr,\n            name: isPrivate ? \"#\" + name : name,\n            static: isStatic,\n            private: isPrivate,\n            metadata: metadata\n        };\n        var decoratorFinishedRef = {\n            v: false\n        };\n        ctx.addInitializer = createAddInitializerMethod(initializers, decoratorFinishedRef);\n        var get, set;\n        if (kind === 0) {\n            if (isPrivate) {\n                get = desc.get;\n                set = desc.set;\n            } else {\n                get = function() {\n                    return this[name];\n                };\n                set = function(v) {\n                    this[name] = v;\n                };\n            }\n        } else if (kind === 2) {\n            get = function() {\n                return desc.value;\n            };\n        } else {\n            if (kind === 1 || kind === 3) {\n                get = function() {\n                    return desc.get.call(this);\n                };\n            }\n            if (kind === 1 || kind === 4) {\n                set = function(v) {\n                    desc.set.call(this, v);\n                };\n            }\n        }\n        ctx.access = get && set ? {\n            get: get,\n            set: set\n        } : get ? {\n            get: get\n        } : {\n            set: set\n        };\n        try {\n            return dec(value, ctx);\n        } finally{\n            decoratorFinishedRef.v = true;\n        }\n    }\n    function assertNotFinished(decoratorFinishedRef, fnName) {\n        if (decoratorFinishedRef.v) {\n            throw new Error(\"attempted to call \" + fnName + \" after decoration was finished\");\n        }\n    }\n    function assertCallable(fn, hint) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(hint + \" must be a function\");\n        }\n    }\n    function assertValidReturnValue(kind, value) {\n        var type = typeof value;\n        if (kind === 1) {\n            if (type !== \"object\" || value === null) {\n                throw new TypeError(\"accessor decorators must return an object with get, set, or init properties or void 0\");\n            }\n            if (value.get !== undefined) {\n                assertCallable(value.get, \"accessor.get\");\n            }\n            if (value.set !== undefined) {\n                assertCallable(value.set, \"accessor.set\");\n            }\n            if (value.init !== undefined) {\n                assertCallable(value.init, \"accessor.init\");\n            }\n        } else if (type !== \"function\") {\n            var hint;\n            if (kind === 0) {\n                hint = \"field\";\n            } else if (kind === 10) {\n                hint = \"class\";\n            } else {\n                hint = \"method\";\n            }\n            throw new TypeError(hint + \" decorators must return a function or void 0\");\n        }\n    }\n    function applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers, metadata) {\n        var decs = decInfo[0];\n        var desc, init, value;\n        if (isPrivate) {\n            if (kind === 0 || kind === 1) {\n                desc = {\n                    get: decInfo[3],\n                    set: decInfo[4]\n                };\n            } else if (kind === 3) {\n                desc = {\n                    get: decInfo[3]\n                };\n            } else if (kind === 4) {\n                desc = {\n                    set: decInfo[3]\n                };\n            } else {\n                desc = {\n                    value: decInfo[3]\n                };\n            }\n        } else if (kind !== 0) {\n            desc = Object.getOwnPropertyDescriptor(base, name);\n        }\n        if (kind === 1) {\n            value = {\n                get: desc.get,\n                set: desc.set\n            };\n        } else if (kind === 2) {\n            value = desc.value;\n        } else if (kind === 3) {\n            value = desc.get;\n        } else if (kind === 4) {\n            value = desc.set;\n        }\n        var newValue, get, set;\n        if (typeof decs === \"function\") {\n            newValue = memberDec(decs, name, desc, initializers, kind, isStatic, isPrivate, metadata, value);\n            if (newValue !== void 0) {\n                assertValidReturnValue(kind, newValue);\n                if (kind === 0) {\n                    init = newValue;\n                } else if (kind === 1) {\n                    init = newValue.init;\n                    get = newValue.get || value.get;\n                    set = newValue.set || value.set;\n                    value = {\n                        get: get,\n                        set: set\n                    };\n                } else {\n                    value = newValue;\n                }\n            }\n        } else {\n            for(var i = decs.length - 1; i >= 0; i--){\n                var dec = decs[i];\n                newValue = memberDec(dec, name, desc, initializers, kind, isStatic, isPrivate, metadata, value);\n                if (newValue !== void 0) {\n                    assertValidReturnValue(kind, newValue);\n                    var newInit;\n                    if (kind === 0) {\n                        newInit = newValue;\n                    } else if (kind === 1) {\n                        newInit = newValue.init;\n                        get = newValue.get || value.get;\n                        set = newValue.set || value.set;\n                        value = {\n                            get: get,\n                            set: set\n                        };\n                    } else {\n                        value = newValue;\n                    }\n                    if (newInit !== void 0) {\n                        if (init === void 0) {\n                            init = newInit;\n                        } else if (typeof init === \"function\") {\n                            init = [\n                                init,\n                                newInit\n                            ];\n                        } else {\n                            init.push(newInit);\n                        }\n                    }\n                }\n            }\n        }\n        if (kind === 0 || kind === 1) {\n            if (init === void 0) {\n                init = function(instance, init) {\n                    return init;\n                };\n            } else if (typeof init !== \"function\") {\n                var ownInitializers = init;\n                init = function(instance, init) {\n                    var value = init;\n                    for(var i = 0; i < ownInitializers.length; i++){\n                        value = ownInitializers[i].call(instance, value);\n                    }\n                    return value;\n                };\n            } else {\n                var originalInitializer = init;\n                init = function(instance, init) {\n                    return originalInitializer.call(instance, init);\n                };\n            }\n            ret.push(init);\n        }\n        if (kind !== 0) {\n            if (kind === 1) {\n                desc.get = value.get;\n                desc.set = value.set;\n            } else if (kind === 2) {\n                desc.value = value;\n            } else if (kind === 3) {\n                desc.get = value;\n            } else if (kind === 4) {\n                desc.set = value;\n            }\n            if (isPrivate) {\n                if (kind === 1) {\n                    ret.push(function(instance, args) {\n                        return value.get.call(instance, args);\n                    });\n                    ret.push(function(instance, args) {\n                        return value.set.call(instance, args);\n                    });\n                } else if (kind === 2) {\n                    ret.push(value);\n                } else {\n                    ret.push(function(instance, args) {\n                        return value.call(instance, args);\n                    });\n                }\n            } else {\n                Object.defineProperty(base, name, desc);\n            }\n        }\n    }\n    function applyMemberDecs(Class, decInfos, metadata) {\n        var ret = [];\n        var protoInitializers;\n        var staticInitializers;\n        var existingProtoNonFields = new Map();\n        var existingStaticNonFields = new Map();\n        for(var i = 0; i < decInfos.length; i++){\n            var decInfo = decInfos[i];\n            if (!Array.isArray(decInfo)) continue;\n            var kind = decInfo[1];\n            var name = decInfo[2];\n            var isPrivate = decInfo.length > 3;\n            var isStatic = kind >= 5;\n            var base;\n            var initializers;\n            if (isStatic) {\n                base = Class;\n                kind = kind - 5;\n                staticInitializers = staticInitializers || [];\n                initializers = staticInitializers;\n            } else {\n                base = Class.prototype;\n                protoInitializers = protoInitializers || [];\n                initializers = protoInitializers;\n            }\n            if (kind !== 0 && !isPrivate) {\n                var existingNonFields = isStatic ? existingStaticNonFields : existingProtoNonFields;\n                var existingKind = existingNonFields.get(name) || 0;\n                if (existingKind === true || existingKind === 3 && kind !== 4 || existingKind === 4 && kind !== 3) {\n                    throw new Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \" + name);\n                } else if (!existingKind && kind > 2) {\n                    existingNonFields.set(name, kind);\n                } else {\n                    existingNonFields.set(name, true);\n                }\n            }\n            applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers, metadata);\n        }\n        pushInitializers(ret, protoInitializers);\n        pushInitializers(ret, staticInitializers);\n        return ret;\n    }\n    function pushInitializers(ret, initializers) {\n        if (initializers) {\n            ret.push(function(instance) {\n                for(var i = 0; i < initializers.length; i++){\n                    initializers[i].call(instance);\n                }\n                return instance;\n            });\n        }\n    }\n    function applyClassDecs(targetClass, classDecs, metadata) {\n        if (classDecs.length > 0) {\n            var initializers = [];\n            var newClass = targetClass;\n            var name = targetClass.name;\n            for(var i = classDecs.length - 1; i >= 0; i--){\n                var decoratorFinishedRef = {\n                    v: false\n                };\n                try {\n                    var nextNewClass = classDecs[i](newClass, {\n                        kind: \"class\",\n                        name: name,\n                        addInitializer: createAddInitializerMethod(initializers, decoratorFinishedRef),\n                        metadata\n                    });\n                } finally{\n                    decoratorFinishedRef.v = true;\n                }\n                if (nextNewClass !== undefined) {\n                    assertValidReturnValue(10, nextNewClass);\n                    newClass = nextNewClass;\n                }\n            }\n            return [\n                defineMetadata(newClass, metadata),\n                function() {\n                    for(var i = 0; i < initializers.length; i++){\n                        initializers[i].call(newClass);\n                    }\n                }\n            ];\n        }\n    }\n    function defineMetadata(Class, metadata) {\n        return Object.defineProperty(Class, Symbol.metadata || Symbol.for(\"Symbol.metadata\"), {\n            configurable: true,\n            enumerable: true,\n            value: metadata\n        });\n    }\n    return function applyDecs2203R(targetClass, memberDecs, classDecs, parentClass) {\n        if (parentClass !== void 0) {\n            var parentMetadata = parentClass[Symbol.metadata || Symbol.for(\"Symbol.metadata\")];\n        }\n        var metadata = Object.create(parentMetadata === void 0 ? null : parentMetadata);\n        var e = applyMemberDecs(targetClass, memberDecs, metadata);\n        if (!classDecs.length) defineMetadata(targetClass, metadata);\n        return {\n            e: e,\n            get c () {\n                return applyClassDecs(targetClass, classDecs, metadata);\n            }\n        };\n    };\n}\nfunction _apply_decs_2203_r$1(targetClass, memberDecs, classDecs, parentClass) {\n    return (_apply_decs_2203_r$1 = applyDecs2203RFactory$1())(targetClass, memberDecs, classDecs, parentClass);\n}\nvar _initProto$1;\n/**\n * ContextChatEngine uses the Index to get the appropriate context for each query.\n * The context is stored in the system prompt, and the chat history is chunk,\n * allowing the appropriate context to be surfaced for each query.\n */ class ContextChatEngine extends PromptMixin {\n    static{\n        ({ e: [_initProto$1] } = _apply_decs_2203_r$1(this, [\n            [\n                wrapEventCaller,\n                2,\n                \"chat\"\n            ]\n        ], []));\n    }\n    get chatHistory() {\n        return this.memory.getMessages();\n    }\n    constructor(init){\n        super(), _initProto$1(this);\n        this.chatModel = init.chatModel ?? Settings.llm;\n        this.memory = new ChatMemoryBuffer({\n            chatHistory: init?.chatHistory\n        });\n        this.contextGenerator = new DefaultContextGenerator({\n            retriever: init.retriever,\n            contextSystemPrompt: init?.contextSystemPrompt,\n            nodePostprocessors: init?.nodePostprocessors,\n            contextRole: init?.contextRole,\n            metadataMode: MetadataMode.LLM\n        });\n        this.systemPrompt = init.systemPrompt;\n    }\n    _getPrompts() {\n        return {\n            ...this.contextGenerator.getPrompts()\n        };\n    }\n    _updatePrompts(prompts) {\n        this.contextGenerator.updatePrompts(prompts);\n    }\n    _getPromptModules() {\n        return {\n            contextGenerator: this.contextGenerator\n        };\n    }\n    async chat(params) {\n        const { message, stream } = params;\n        const chatHistory = params.chatHistory ? new ChatMemoryBuffer({\n            chatHistory: params.chatHistory instanceof BaseMemory ? await params.chatHistory.getMessages() : params.chatHistory\n        }) : this.memory;\n        const requestMessages = await this.prepareRequestMessages(message, chatHistory);\n        if (stream) {\n            const stream = await this.chatModel.chat({\n                messages: requestMessages.messages,\n                stream: true\n            });\n            return streamConverter(streamReducer({\n                stream,\n                initialValue: \"\",\n                reducer: (accumulator, part)=>accumulator += part.delta,\n                finished: (accumulator)=>{\n                    chatHistory.put({\n                        content: accumulator,\n                        role: \"assistant\"\n                    });\n                }\n            }), (r)=>EngineResponse.fromChatResponseChunk(r, requestMessages.nodes));\n        }\n        const response = await this.chatModel.chat({\n            messages: requestMessages.messages\n        });\n        chatHistory.put(response.message);\n        return EngineResponse.fromChatResponse(response, requestMessages.nodes);\n    }\n    reset() {\n        this.memory.reset();\n    }\n    async prepareRequestMessages(message, chatHistory) {\n        chatHistory.put({\n            content: message,\n            role: \"user\"\n        });\n        const textOnly = extractText(message);\n        const context = await this.contextGenerator.generate(textOnly);\n        const systemMessage = this.prependSystemPrompt(context.message);\n        const messages = await chatHistory.getMessages([\n            systemMessage\n        ]);\n        return {\n            nodes: context.nodes,\n            messages\n        };\n    }\n    prependSystemPrompt(message) {\n        if (!this.systemPrompt) return message;\n        return {\n            ...message,\n            content: this.systemPrompt.trim() + \"\\n\" + extractText(message.content)\n        };\n    }\n}\n\nfunction applyDecs2203RFactory() {\n    function createAddInitializerMethod(initializers, decoratorFinishedRef) {\n        return function addInitializer(initializer) {\n            assertNotFinished(decoratorFinishedRef, \"addInitializer\");\n            assertCallable(initializer, \"An initializer\");\n            initializers.push(initializer);\n        };\n    }\n    function memberDec(dec, name, desc, initializers, kind, isStatic, isPrivate, metadata, value) {\n        var kindStr;\n        switch(kind){\n            case 1:\n                kindStr = \"accessor\";\n                break;\n            case 2:\n                kindStr = \"method\";\n                break;\n            case 3:\n                kindStr = \"getter\";\n                break;\n            case 4:\n                kindStr = \"setter\";\n                break;\n            default:\n                kindStr = \"field\";\n        }\n        var ctx = {\n            kind: kindStr,\n            name: isPrivate ? \"#\" + name : name,\n            static: isStatic,\n            private: isPrivate,\n            metadata: metadata\n        };\n        var decoratorFinishedRef = {\n            v: false\n        };\n        ctx.addInitializer = createAddInitializerMethod(initializers, decoratorFinishedRef);\n        var get, set;\n        if (kind === 0) {\n            if (isPrivate) {\n                get = desc.get;\n                set = desc.set;\n            } else {\n                get = function() {\n                    return this[name];\n                };\n                set = function(v) {\n                    this[name] = v;\n                };\n            }\n        } else if (kind === 2) {\n            get = function() {\n                return desc.value;\n            };\n        } else {\n            if (kind === 1 || kind === 3) {\n                get = function() {\n                    return desc.get.call(this);\n                };\n            }\n            if (kind === 1 || kind === 4) {\n                set = function(v) {\n                    desc.set.call(this, v);\n                };\n            }\n        }\n        ctx.access = get && set ? {\n            get: get,\n            set: set\n        } : get ? {\n            get: get\n        } : {\n            set: set\n        };\n        try {\n            return dec(value, ctx);\n        } finally{\n            decoratorFinishedRef.v = true;\n        }\n    }\n    function assertNotFinished(decoratorFinishedRef, fnName) {\n        if (decoratorFinishedRef.v) {\n            throw new Error(\"attempted to call \" + fnName + \" after decoration was finished\");\n        }\n    }\n    function assertCallable(fn, hint) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(hint + \" must be a function\");\n        }\n    }\n    function assertValidReturnValue(kind, value) {\n        var type = typeof value;\n        if (kind === 1) {\n            if (type !== \"object\" || value === null) {\n                throw new TypeError(\"accessor decorators must return an object with get, set, or init properties or void 0\");\n            }\n            if (value.get !== undefined) {\n                assertCallable(value.get, \"accessor.get\");\n            }\n            if (value.set !== undefined) {\n                assertCallable(value.set, \"accessor.set\");\n            }\n            if (value.init !== undefined) {\n                assertCallable(value.init, \"accessor.init\");\n            }\n        } else if (type !== \"function\") {\n            var hint;\n            if (kind === 0) {\n                hint = \"field\";\n            } else if (kind === 10) {\n                hint = \"class\";\n            } else {\n                hint = \"method\";\n            }\n            throw new TypeError(hint + \" decorators must return a function or void 0\");\n        }\n    }\n    function applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers, metadata) {\n        var decs = decInfo[0];\n        var desc, init, value;\n        if (isPrivate) {\n            if (kind === 0 || kind === 1) {\n                desc = {\n                    get: decInfo[3],\n                    set: decInfo[4]\n                };\n            } else if (kind === 3) {\n                desc = {\n                    get: decInfo[3]\n                };\n            } else if (kind === 4) {\n                desc = {\n                    set: decInfo[3]\n                };\n            } else {\n                desc = {\n                    value: decInfo[3]\n                };\n            }\n        } else if (kind !== 0) {\n            desc = Object.getOwnPropertyDescriptor(base, name);\n        }\n        if (kind === 1) {\n            value = {\n                get: desc.get,\n                set: desc.set\n            };\n        } else if (kind === 2) {\n            value = desc.value;\n        } else if (kind === 3) {\n            value = desc.get;\n        } else if (kind === 4) {\n            value = desc.set;\n        }\n        var newValue, get, set;\n        if (typeof decs === \"function\") {\n            newValue = memberDec(decs, name, desc, initializers, kind, isStatic, isPrivate, metadata, value);\n            if (newValue !== void 0) {\n                assertValidReturnValue(kind, newValue);\n                if (kind === 0) {\n                    init = newValue;\n                } else if (kind === 1) {\n                    init = newValue.init;\n                    get = newValue.get || value.get;\n                    set = newValue.set || value.set;\n                    value = {\n                        get: get,\n                        set: set\n                    };\n                } else {\n                    value = newValue;\n                }\n            }\n        } else {\n            for(var i = decs.length - 1; i >= 0; i--){\n                var dec = decs[i];\n                newValue = memberDec(dec, name, desc, initializers, kind, isStatic, isPrivate, metadata, value);\n                if (newValue !== void 0) {\n                    assertValidReturnValue(kind, newValue);\n                    var newInit;\n                    if (kind === 0) {\n                        newInit = newValue;\n                    } else if (kind === 1) {\n                        newInit = newValue.init;\n                        get = newValue.get || value.get;\n                        set = newValue.set || value.set;\n                        value = {\n                            get: get,\n                            set: set\n                        };\n                    } else {\n                        value = newValue;\n                    }\n                    if (newInit !== void 0) {\n                        if (init === void 0) {\n                            init = newInit;\n                        } else if (typeof init === \"function\") {\n                            init = [\n                                init,\n                                newInit\n                            ];\n                        } else {\n                            init.push(newInit);\n                        }\n                    }\n                }\n            }\n        }\n        if (kind === 0 || kind === 1) {\n            if (init === void 0) {\n                init = function(instance, init) {\n                    return init;\n                };\n            } else if (typeof init !== \"function\") {\n                var ownInitializers = init;\n                init = function(instance, init) {\n                    var value = init;\n                    for(var i = 0; i < ownInitializers.length; i++){\n                        value = ownInitializers[i].call(instance, value);\n                    }\n                    return value;\n                };\n            } else {\n                var originalInitializer = init;\n                init = function(instance, init) {\n                    return originalInitializer.call(instance, init);\n                };\n            }\n            ret.push(init);\n        }\n        if (kind !== 0) {\n            if (kind === 1) {\n                desc.get = value.get;\n                desc.set = value.set;\n            } else if (kind === 2) {\n                desc.value = value;\n            } else if (kind === 3) {\n                desc.get = value;\n            } else if (kind === 4) {\n                desc.set = value;\n            }\n            if (isPrivate) {\n                if (kind === 1) {\n                    ret.push(function(instance, args) {\n                        return value.get.call(instance, args);\n                    });\n                    ret.push(function(instance, args) {\n                        return value.set.call(instance, args);\n                    });\n                } else if (kind === 2) {\n                    ret.push(value);\n                } else {\n                    ret.push(function(instance, args) {\n                        return value.call(instance, args);\n                    });\n                }\n            } else {\n                Object.defineProperty(base, name, desc);\n            }\n        }\n    }\n    function applyMemberDecs(Class, decInfos, metadata) {\n        var ret = [];\n        var protoInitializers;\n        var staticInitializers;\n        var existingProtoNonFields = new Map();\n        var existingStaticNonFields = new Map();\n        for(var i = 0; i < decInfos.length; i++){\n            var decInfo = decInfos[i];\n            if (!Array.isArray(decInfo)) continue;\n            var kind = decInfo[1];\n            var name = decInfo[2];\n            var isPrivate = decInfo.length > 3;\n            var isStatic = kind >= 5;\n            var base;\n            var initializers;\n            if (isStatic) {\n                base = Class;\n                kind = kind - 5;\n                staticInitializers = staticInitializers || [];\n                initializers = staticInitializers;\n            } else {\n                base = Class.prototype;\n                protoInitializers = protoInitializers || [];\n                initializers = protoInitializers;\n            }\n            if (kind !== 0 && !isPrivate) {\n                var existingNonFields = isStatic ? existingStaticNonFields : existingProtoNonFields;\n                var existingKind = existingNonFields.get(name) || 0;\n                if (existingKind === true || existingKind === 3 && kind !== 4 || existingKind === 4 && kind !== 3) {\n                    throw new Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \" + name);\n                } else if (!existingKind && kind > 2) {\n                    existingNonFields.set(name, kind);\n                } else {\n                    existingNonFields.set(name, true);\n                }\n            }\n            applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers, metadata);\n        }\n        pushInitializers(ret, protoInitializers);\n        pushInitializers(ret, staticInitializers);\n        return ret;\n    }\n    function pushInitializers(ret, initializers) {\n        if (initializers) {\n            ret.push(function(instance) {\n                for(var i = 0; i < initializers.length; i++){\n                    initializers[i].call(instance);\n                }\n                return instance;\n            });\n        }\n    }\n    function applyClassDecs(targetClass, classDecs, metadata) {\n        if (classDecs.length > 0) {\n            var initializers = [];\n            var newClass = targetClass;\n            var name = targetClass.name;\n            for(var i = classDecs.length - 1; i >= 0; i--){\n                var decoratorFinishedRef = {\n                    v: false\n                };\n                try {\n                    var nextNewClass = classDecs[i](newClass, {\n                        kind: \"class\",\n                        name: name,\n                        addInitializer: createAddInitializerMethod(initializers, decoratorFinishedRef),\n                        metadata\n                    });\n                } finally{\n                    decoratorFinishedRef.v = true;\n                }\n                if (nextNewClass !== undefined) {\n                    assertValidReturnValue(10, nextNewClass);\n                    newClass = nextNewClass;\n                }\n            }\n            return [\n                defineMetadata(newClass, metadata),\n                function() {\n                    for(var i = 0; i < initializers.length; i++){\n                        initializers[i].call(newClass);\n                    }\n                }\n            ];\n        }\n    }\n    function defineMetadata(Class, metadata) {\n        return Object.defineProperty(Class, Symbol.metadata || Symbol.for(\"Symbol.metadata\"), {\n            configurable: true,\n            enumerable: true,\n            value: metadata\n        });\n    }\n    return function applyDecs2203R(targetClass, memberDecs, classDecs, parentClass) {\n        if (parentClass !== void 0) {\n            var parentMetadata = parentClass[Symbol.metadata || Symbol.for(\"Symbol.metadata\")];\n        }\n        var metadata = Object.create(parentMetadata === void 0 ? null : parentMetadata);\n        var e = applyMemberDecs(targetClass, memberDecs, metadata);\n        if (!classDecs.length) defineMetadata(targetClass, metadata);\n        return {\n            e: e,\n            get c () {\n                return applyClassDecs(targetClass, classDecs, metadata);\n            }\n        };\n    };\n}\nfunction _apply_decs_2203_r(targetClass, memberDecs, classDecs, parentClass) {\n    return (_apply_decs_2203_r = applyDecs2203RFactory())(targetClass, memberDecs, classDecs, parentClass);\n}\nvar _initProto;\n/**\n * SimpleChatEngine is the simplest possible chat engine. Useful for using your own custom prompts.\n */ class SimpleChatEngine {\n    static{\n        ({ e: [_initProto] } = _apply_decs_2203_r(this, [\n            [\n                wrapEventCaller,\n                2,\n                \"chat\"\n            ]\n        ], []));\n    }\n    get chatHistory() {\n        return this.memory.getMessages();\n    }\n    constructor(init){\n        _initProto(this);\n        this.memory = init?.memory ?? new ChatMemoryBuffer();\n        this.llm = init?.llm ?? Settings.llm;\n    }\n    async chat(params) {\n        const { message, stream } = params;\n        const chatHistory = params.chatHistory ? new ChatMemoryBuffer({\n            chatHistory: params.chatHistory instanceof BaseMemory ? await params.chatHistory.getMessages() : params.chatHistory\n        }) : this.memory;\n        chatHistory.put({\n            content: message,\n            role: \"user\"\n        });\n        if (stream) {\n            const stream = await this.llm.chat({\n                messages: await chatHistory.getMessages(),\n                stream: true\n            });\n            return streamConverter(streamReducer({\n                stream,\n                initialValue: \"\",\n                reducer: (accumulator, part)=>accumulator + part.delta,\n                finished: (accumulator)=>{\n                    chatHistory.put({\n                        content: accumulator,\n                        role: \"assistant\"\n                    });\n                }\n            }), EngineResponse.fromChatResponseChunk);\n        }\n        const response = await this.llm.chat({\n            stream: false,\n            messages: await chatHistory.getMessages()\n        });\n        chatHistory.put(response.message);\n        return EngineResponse.fromChatResponse(response);\n    }\n    reset() {\n        this.memory.reset();\n    }\n}\n\nexport { BaseChatEngine, ContextChatEngine, DefaultContextGenerator, SimpleChatEngine };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4965, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/agent/dist/index.js"],"sourcesContent":["import { emptyLogger, consoleLogger, randomUUID } from '@llamaindex/env';\nimport { BaseChatEngine } from '../../chat-engine/dist/index.js';\nimport { wrapEventCaller } from '../../decorator/dist/index.js';\nimport { Settings } from '../../global/dist/index.js';\nimport { BaseMemory } from '../../memory/dist/index.js';\nimport { baseToolWithCallSchema, EngineResponse } from '../../schema/dist/index.js';\nimport { z } from 'zod';\nimport { stringifyJSONToMessageContent, prettifyError, isAsyncIterable } from '../../utils/dist/index.js';\n\n// #TODO stepTools and stepToolsStreaming should be moved to a better abstraction\nasync function stepToolsStreaming({ response, tools, step, enqueueOutput }) {\n    const responseChunkStream = new ReadableStream({\n        async start (controller) {\n            for await (const chunk of response){\n                controller.enqueue(chunk);\n            }\n            controller.close();\n        }\n    });\n    const [pipStream, finalStream] = responseChunkStream.tee();\n    const reader = pipStream.getReader();\n    const { value } = await reader.read();\n    reader.releaseLock();\n    if (value === undefined) {\n        throw new Error(\"first chunk value is undefined, this should not happen\");\n    }\n    // check if first chunk has tool calls, if so, this is a function call\n    // otherwise, it's a regular message\n    const hasToolCall = !!(value.options && \"toolCall\" in value.options);\n    enqueueOutput({\n        taskStep: step,\n        output: finalStream,\n        isLast: !hasToolCall\n    });\n    if (hasToolCall) {\n        // you need to consume the response to get the full toolCalls\n        const toolCalls = new Map();\n        for await (const chunk of pipStream){\n            if (chunk.options && \"toolCall\" in chunk.options) {\n                const toolCall = chunk.options.toolCall;\n                toolCall.forEach((toolCall)=>{\n                    toolCalls.set(toolCall.id, toolCall);\n                });\n            }\n        }\n        // If there are toolCalls, but they didn't get read into the stream, used for Gemini\n        if (!toolCalls.size && value.options && \"toolCall\" in value.options) {\n            value.options.toolCall.forEach((toolCall)=>{\n                toolCalls.set(toolCall.id, toolCall);\n            });\n        }\n        step.context.store.messages = [\n            ...step.context.store.messages,\n            {\n                role: \"assistant\",\n                content: \"\",\n                options: {\n                    toolCall: [\n                        ...toolCalls.values()\n                    ]\n                }\n            }\n        ];\n        for (const toolCall of toolCalls.values()){\n            const targetTool = tools.find((tool)=>tool.metadata.name === toolCall.name);\n            const toolOutput = await callTool(targetTool, toolCall, step.context.logger);\n            step.context.store.messages = [\n                ...step.context.store.messages,\n                {\n                    role: \"user\",\n                    content: stringifyJSONToMessageContent(toolOutput.output),\n                    options: {\n                        toolResult: {\n                            result: toolOutput.output,\n                            isError: toolOutput.isError,\n                            id: toolCall.id\n                        }\n                    }\n                }\n            ];\n            step.context.store.toolOutputs.push(toolOutput);\n        }\n    }\n}\nasync function stepTools({ response, tools, step, enqueueOutput }) {\n    step.context.store.messages = [\n        ...step.context.store.messages,\n        response.message\n    ];\n    const options = response.message.options ?? {};\n    enqueueOutput({\n        taskStep: step,\n        output: response,\n        isLast: !(\"toolCall\" in options)\n    });\n    if (\"toolCall\" in options) {\n        const { toolCall } = options;\n        for (const call of toolCall){\n            const targetTool = tools.find((tool)=>tool.metadata.name === call.name);\n            const toolOutput = await callTool(targetTool, call, step.context.logger);\n            step.context.store.toolOutputs.push(toolOutput);\n            step.context.store.messages = [\n                ...step.context.store.messages,\n                {\n                    content: stringifyJSONToMessageContent(toolOutput.output),\n                    role: \"user\",\n                    options: {\n                        toolResult: {\n                            result: toolOutput.output,\n                            isError: toolOutput.isError,\n                            id: call.id\n                        }\n                    }\n                }\n            ];\n        }\n    }\n}\nasync function callTool(tool, toolCall, logger) {\n    let input;\n    if (typeof toolCall.input === \"string\") {\n        try {\n            input = JSON.parse(toolCall.input);\n        } catch (e) {\n            const output = `Tool ${toolCall.name} can't be called. Input is not a valid JSON object.`;\n            logger.error(`${output} Try increasing the maxTokens parameter of your LLM. Invalid Input: ${toolCall.input}`);\n            return {\n                tool,\n                input: {},\n                output,\n                isError: true\n            };\n        }\n    } else {\n        input = toolCall.input;\n    }\n    if (!tool) {\n        logger.error(`Tool ${toolCall.name} does not exist.`);\n        const output = `Tool ${toolCall.name} does not exist.`;\n        return {\n            tool,\n            input,\n            output,\n            isError: true\n        };\n    }\n    const call = tool.call;\n    let output;\n    if (!call) {\n        logger.error(`Tool ${tool.metadata.name} (remote:${toolCall.name}) does not have a implementation.`);\n        output = `Tool ${tool.metadata.name} (remote:${toolCall.name}) does not have a implementation.`;\n        return {\n            tool,\n            input,\n            output,\n            isError: true\n        };\n    }\n    try {\n        Settings.callbackManager.dispatchEvent(\"llm-tool-call\", {\n            toolCall: {\n                ...toolCall,\n                input\n            }\n        });\n        output = await call.call(tool, input);\n        logger.log(`Tool ${tool.metadata.name} (remote:${toolCall.name}) succeeded.`);\n        logger.log(`Output: ${JSON.stringify(output)}`);\n        const toolOutput = {\n            tool,\n            input,\n            output,\n            isError: false\n        };\n        Settings.callbackManager.dispatchEvent(\"llm-tool-result\", {\n            toolCall: {\n                ...toolCall,\n                input\n            },\n            toolResult: {\n                ...toolOutput\n            }\n        });\n        return toolOutput;\n    } catch (e) {\n        output = prettifyError(e);\n        logger.error(`Tool ${tool.metadata.name} (remote:${toolCall.name}) failed: ${output}`);\n    }\n    return {\n        tool,\n        input,\n        output,\n        isError: true\n    };\n}\nasync function consumeAsyncIterable(input, previousContent = \"\") {\n    if (isAsyncIterable(input)) {\n        const result = {\n            content: previousContent,\n            // only assistant will give streaming response\n            role: \"assistant\",\n            options: {}\n        };\n        for await (const chunk of input){\n            result.content += chunk.delta;\n            if (chunk.options) {\n                result.options = {\n                    ...result.options,\n                    ...chunk.options\n                };\n            }\n        }\n        return result;\n    } else {\n        return input;\n    }\n}\nfunction createReadableStream(asyncIterable) {\n    return new ReadableStream({\n        async start (controller) {\n            for await (const chunk of asyncIterable){\n                controller.enqueue(chunk);\n            }\n            controller.close();\n        }\n    });\n}\nfunction validateAgentParams(params) {\n    if (\"tools\" in params) {\n        z.array(baseToolWithCallSchema).parse(params.tools);\n    }\n}\n\nfunction applyDecs2203RFactory() {\n    function createAddInitializerMethod(initializers, decoratorFinishedRef) {\n        return function addInitializer(initializer) {\n            assertNotFinished(decoratorFinishedRef, \"addInitializer\");\n            assertCallable(initializer, \"An initializer\");\n            initializers.push(initializer);\n        };\n    }\n    function memberDec(dec, name, desc, initializers, kind, isStatic, isPrivate, metadata, value) {\n        var kindStr;\n        switch(kind){\n            case 1:\n                kindStr = \"accessor\";\n                break;\n            case 2:\n                kindStr = \"method\";\n                break;\n            case 3:\n                kindStr = \"getter\";\n                break;\n            case 4:\n                kindStr = \"setter\";\n                break;\n            default:\n                kindStr = \"field\";\n        }\n        var ctx = {\n            kind: kindStr,\n            name: isPrivate ? \"#\" + name : name,\n            static: isStatic,\n            private: isPrivate,\n            metadata: metadata\n        };\n        var decoratorFinishedRef = {\n            v: false\n        };\n        ctx.addInitializer = createAddInitializerMethod(initializers, decoratorFinishedRef);\n        var get, set;\n        if (kind === 0) {\n            if (isPrivate) {\n                get = desc.get;\n                set = desc.set;\n            } else {\n                get = function() {\n                    return this[name];\n                };\n                set = function(v) {\n                    this[name] = v;\n                };\n            }\n        } else if (kind === 2) {\n            get = function() {\n                return desc.value;\n            };\n        } else {\n            if (kind === 1 || kind === 3) {\n                get = function() {\n                    return desc.get.call(this);\n                };\n            }\n            if (kind === 1 || kind === 4) {\n                set = function(v) {\n                    desc.set.call(this, v);\n                };\n            }\n        }\n        ctx.access = get && set ? {\n            get: get,\n            set: set\n        } : get ? {\n            get: get\n        } : {\n            set: set\n        };\n        try {\n            return dec(value, ctx);\n        } finally{\n            decoratorFinishedRef.v = true;\n        }\n    }\n    function assertNotFinished(decoratorFinishedRef, fnName) {\n        if (decoratorFinishedRef.v) {\n            throw new Error(\"attempted to call \" + fnName + \" after decoration was finished\");\n        }\n    }\n    function assertCallable(fn, hint) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(hint + \" must be a function\");\n        }\n    }\n    function assertValidReturnValue(kind, value) {\n        var type = typeof value;\n        if (kind === 1) {\n            if (type !== \"object\" || value === null) {\n                throw new TypeError(\"accessor decorators must return an object with get, set, or init properties or void 0\");\n            }\n            if (value.get !== undefined) {\n                assertCallable(value.get, \"accessor.get\");\n            }\n            if (value.set !== undefined) {\n                assertCallable(value.set, \"accessor.set\");\n            }\n            if (value.init !== undefined) {\n                assertCallable(value.init, \"accessor.init\");\n            }\n        } else if (type !== \"function\") {\n            var hint;\n            if (kind === 0) {\n                hint = \"field\";\n            } else if (kind === 10) {\n                hint = \"class\";\n            } else {\n                hint = \"method\";\n            }\n            throw new TypeError(hint + \" decorators must return a function or void 0\");\n        }\n    }\n    function applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers, metadata) {\n        var decs = decInfo[0];\n        var desc, init, value;\n        if (isPrivate) {\n            if (kind === 0 || kind === 1) {\n                desc = {\n                    get: decInfo[3],\n                    set: decInfo[4]\n                };\n            } else if (kind === 3) {\n                desc = {\n                    get: decInfo[3]\n                };\n            } else if (kind === 4) {\n                desc = {\n                    set: decInfo[3]\n                };\n            } else {\n                desc = {\n                    value: decInfo[3]\n                };\n            }\n        } else if (kind !== 0) {\n            desc = Object.getOwnPropertyDescriptor(base, name);\n        }\n        if (kind === 1) {\n            value = {\n                get: desc.get,\n                set: desc.set\n            };\n        } else if (kind === 2) {\n            value = desc.value;\n        } else if (kind === 3) {\n            value = desc.get;\n        } else if (kind === 4) {\n            value = desc.set;\n        }\n        var newValue, get, set;\n        if (typeof decs === \"function\") {\n            newValue = memberDec(decs, name, desc, initializers, kind, isStatic, isPrivate, metadata, value);\n            if (newValue !== void 0) {\n                assertValidReturnValue(kind, newValue);\n                if (kind === 0) {\n                    init = newValue;\n                } else if (kind === 1) {\n                    init = newValue.init;\n                    get = newValue.get || value.get;\n                    set = newValue.set || value.set;\n                    value = {\n                        get: get,\n                        set: set\n                    };\n                } else {\n                    value = newValue;\n                }\n            }\n        } else {\n            for(var i = decs.length - 1; i >= 0; i--){\n                var dec = decs[i];\n                newValue = memberDec(dec, name, desc, initializers, kind, isStatic, isPrivate, metadata, value);\n                if (newValue !== void 0) {\n                    assertValidReturnValue(kind, newValue);\n                    var newInit;\n                    if (kind === 0) {\n                        newInit = newValue;\n                    } else if (kind === 1) {\n                        newInit = newValue.init;\n                        get = newValue.get || value.get;\n                        set = newValue.set || value.set;\n                        value = {\n                            get: get,\n                            set: set\n                        };\n                    } else {\n                        value = newValue;\n                    }\n                    if (newInit !== void 0) {\n                        if (init === void 0) {\n                            init = newInit;\n                        } else if (typeof init === \"function\") {\n                            init = [\n                                init,\n                                newInit\n                            ];\n                        } else {\n                            init.push(newInit);\n                        }\n                    }\n                }\n            }\n        }\n        if (kind === 0 || kind === 1) {\n            if (init === void 0) {\n                init = function(instance, init) {\n                    return init;\n                };\n            } else if (typeof init !== \"function\") {\n                var ownInitializers = init;\n                init = function(instance, init) {\n                    var value = init;\n                    for(var i = 0; i < ownInitializers.length; i++){\n                        value = ownInitializers[i].call(instance, value);\n                    }\n                    return value;\n                };\n            } else {\n                var originalInitializer = init;\n                init = function(instance, init) {\n                    return originalInitializer.call(instance, init);\n                };\n            }\n            ret.push(init);\n        }\n        if (kind !== 0) {\n            if (kind === 1) {\n                desc.get = value.get;\n                desc.set = value.set;\n            } else if (kind === 2) {\n                desc.value = value;\n            } else if (kind === 3) {\n                desc.get = value;\n            } else if (kind === 4) {\n                desc.set = value;\n            }\n            if (isPrivate) {\n                if (kind === 1) {\n                    ret.push(function(instance, args) {\n                        return value.get.call(instance, args);\n                    });\n                    ret.push(function(instance, args) {\n                        return value.set.call(instance, args);\n                    });\n                } else if (kind === 2) {\n                    ret.push(value);\n                } else {\n                    ret.push(function(instance, args) {\n                        return value.call(instance, args);\n                    });\n                }\n            } else {\n                Object.defineProperty(base, name, desc);\n            }\n        }\n    }\n    function applyMemberDecs(Class, decInfos, metadata) {\n        var ret = [];\n        var protoInitializers;\n        var staticInitializers;\n        var existingProtoNonFields = new Map();\n        var existingStaticNonFields = new Map();\n        for(var i = 0; i < decInfos.length; i++){\n            var decInfo = decInfos[i];\n            if (!Array.isArray(decInfo)) continue;\n            var kind = decInfo[1];\n            var name = decInfo[2];\n            var isPrivate = decInfo.length > 3;\n            var isStatic = kind >= 5;\n            var base;\n            var initializers;\n            if (isStatic) {\n                base = Class;\n                kind = kind - 5;\n                staticInitializers = staticInitializers || [];\n                initializers = staticInitializers;\n            } else {\n                base = Class.prototype;\n                protoInitializers = protoInitializers || [];\n                initializers = protoInitializers;\n            }\n            if (kind !== 0 && !isPrivate) {\n                var existingNonFields = isStatic ? existingStaticNonFields : existingProtoNonFields;\n                var existingKind = existingNonFields.get(name) || 0;\n                if (existingKind === true || existingKind === 3 && kind !== 4 || existingKind === 4 && kind !== 3) {\n                    throw new Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \" + name);\n                } else if (!existingKind && kind > 2) {\n                    existingNonFields.set(name, kind);\n                } else {\n                    existingNonFields.set(name, true);\n                }\n            }\n            applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers, metadata);\n        }\n        pushInitializers(ret, protoInitializers);\n        pushInitializers(ret, staticInitializers);\n        return ret;\n    }\n    function pushInitializers(ret, initializers) {\n        if (initializers) {\n            ret.push(function(instance) {\n                for(var i = 0; i < initializers.length; i++){\n                    initializers[i].call(instance);\n                }\n                return instance;\n            });\n        }\n    }\n    function applyClassDecs(targetClass, classDecs, metadata) {\n        if (classDecs.length > 0) {\n            var initializers = [];\n            var newClass = targetClass;\n            var name = targetClass.name;\n            for(var i = classDecs.length - 1; i >= 0; i--){\n                var decoratorFinishedRef = {\n                    v: false\n                };\n                try {\n                    var nextNewClass = classDecs[i](newClass, {\n                        kind: \"class\",\n                        name: name,\n                        addInitializer: createAddInitializerMethod(initializers, decoratorFinishedRef),\n                        metadata\n                    });\n                } finally{\n                    decoratorFinishedRef.v = true;\n                }\n                if (nextNewClass !== undefined) {\n                    assertValidReturnValue(10, nextNewClass);\n                    newClass = nextNewClass;\n                }\n            }\n            return [\n                defineMetadata(newClass, metadata),\n                function() {\n                    for(var i = 0; i < initializers.length; i++){\n                        initializers[i].call(newClass);\n                    }\n                }\n            ];\n        }\n    }\n    function defineMetadata(Class, metadata) {\n        return Object.defineProperty(Class, Symbol.metadata || Symbol.for(\"Symbol.metadata\"), {\n            configurable: true,\n            enumerable: true,\n            value: metadata\n        });\n    }\n    return function applyDecs2203R(targetClass, memberDecs, classDecs, parentClass) {\n        if (parentClass !== void 0) {\n            var parentMetadata = parentClass[Symbol.metadata || Symbol.for(\"Symbol.metadata\")];\n        }\n        var metadata = Object.create(parentMetadata === void 0 ? null : parentMetadata);\n        var e = applyMemberDecs(targetClass, memberDecs, metadata);\n        if (!classDecs.length) defineMetadata(targetClass, metadata);\n        return {\n            e: e,\n            get c () {\n                return applyClassDecs(targetClass, classDecs, metadata);\n            }\n        };\n    };\n}\nfunction _apply_decs_2203_r(targetClass, memberDecs, classDecs, parentClass) {\n    return (_apply_decs_2203_r = applyDecs2203RFactory())(targetClass, memberDecs, classDecs, parentClass);\n}\nvar _computedKey, _initProto;\nconst MAX_TOOL_CALLS = 10;\nfunction createTaskOutputStream(handler, context) {\n    const steps = [];\n    return new ReadableStream({\n        pull: async (controller)=>{\n            const step = {\n                id: randomUUID(),\n                context,\n                prevStep: null,\n                nextSteps: new Set()\n            };\n            if (steps.length > 0) {\n                step.prevStep = steps[steps.length - 1];\n            }\n            const taskOutputs = [];\n            steps.push(step);\n            const enqueueOutput = (output)=>{\n                context.logger.log(\"Enqueueing output for step(id, %s).\", step.id);\n                taskOutputs.push(output);\n                controller.enqueue(output);\n            };\n            Settings.callbackManager.dispatchEvent(\"agent-start\", {\n                startStep: step\n            });\n            context.logger.log(\"Starting step(id, %s).\", step.id);\n            await handler(step, enqueueOutput);\n            context.logger.log(\"Finished step(id, %s).\", step.id);\n            // fixme: support multi-thread when there are multiple outputs\n            // todo: for now we pretend there is only one task output\n            const { isLast, taskStep } = taskOutputs[0];\n            context = {\n                ...taskStep.context,\n                store: {\n                    ...taskStep.context.store\n                },\n                toolCallCount: 1\n            };\n            if (isLast) {\n                context.logger.log(\"Final step(id, %s) reached, closing task.\", step.id);\n                Settings.callbackManager.dispatchEvent(\"agent-end\", {\n                    endStep: step\n                });\n                controller.close();\n            }\n        }\n    });\n}\n_computedKey = Symbol.toStringTag;\n/**\n * Worker will schedule tasks and handle the task execution\n */ class AgentWorker {\n    #taskSet;\n    createTask(query, context) {\n        context.store.messages.push({\n            role: \"user\",\n            content: query\n        });\n        const taskOutputStream = createTaskOutputStream(this.taskHandler, context);\n        return new ReadableStream({\n            pull: async (controller)=>{\n                for await (const stepOutput of taskOutputStream){\n                    this.#taskSet.add(stepOutput.taskStep);\n                    if (stepOutput.isLast) {\n                        let currentStep = stepOutput.taskStep;\n                        while(currentStep){\n                            this.#taskSet.delete(currentStep);\n                            currentStep = currentStep.prevStep;\n                        }\n                        const { output, taskStep } = stepOutput;\n                        if (output instanceof ReadableStream) {\n                            let content = \"\";\n                            let options = undefined;\n                            const transformedStream = output.pipeThrough(new TransformStream({\n                                transform (chunk, controller) {\n                                    content += chunk.delta;\n                                    if (!options && chunk.options) {\n                                        options = chunk.options;\n                                    }\n                                    controller.enqueue(chunk); // Pass the chunk through unchanged\n                                },\n                                // When stream finishes, store the accumulated message in context\n                                flush () {\n                                    taskStep.context.store.messages = [\n                                        ...taskStep.context.store.messages,\n                                        {\n                                            role: \"assistant\",\n                                            content,\n                                            options\n                                        }\n                                    ];\n                                }\n                            }));\n                            stepOutput.output = transformedStream;\n                        }\n                        controller.enqueue(stepOutput);\n                        controller.close();\n                    } else {\n                        controller.enqueue(stepOutput);\n                    }\n                }\n            }\n        });\n    }\n    constructor(){\n        this.#taskSet = new Set();\n        this[_computedKey] = \"AgentWorker\";\n    }\n}\n/**\n * Runner will manage the task execution and provide a high-level API for the user\n */ class AgentRunner extends BaseChatEngine {\n    static{\n        ({ e: [_initProto] } = _apply_decs_2203_r(this, [\n            [\n                wrapEventCaller,\n                2,\n                \"chat\"\n            ]\n        ], []));\n    }\n    #llm;\n    #tools;\n    #systemPrompt;\n    #chatHistory;\n    #runner;\n    #verbose;\n    static defaultCreateStore() {\n        return Object.create(null);\n    }\n    static{\n        this.defaultTaskHandler = async (step, enqueueOutput)=>{\n            const { llm, getTools, stream, additionalChatOptions } = step.context;\n            const lastMessage = step.context.store.messages.at(-1).content;\n            const tools = await getTools(lastMessage);\n            if (!stream) {\n                const response = await llm.chat({\n                    stream,\n                    tools,\n                    messages: [\n                        ...step.context.store.messages\n                    ],\n                    additionalChatOptions\n                });\n                await stepTools({\n                    response,\n                    tools,\n                    step,\n                    enqueueOutput\n                });\n            } else {\n                const response = await llm.chat({\n                    stream,\n                    tools,\n                    messages: [\n                        ...step.context.store.messages\n                    ],\n                    additionalChatOptions\n                });\n                await stepToolsStreaming({\n                    response,\n                    tools,\n                    step,\n                    enqueueOutput\n                });\n            }\n        };\n    }\n    constructor(params){\n        super(), this.#systemPrompt = (_initProto(this), null);\n        const { llm, chatHistory, systemPrompt, runner, tools, verbose } = params;\n        this.#llm = llm;\n        this.#chatHistory = chatHistory;\n        this.#runner = runner;\n        if (systemPrompt) {\n            this.#systemPrompt = systemPrompt;\n        }\n        this.#tools = tools;\n        this.#verbose = verbose;\n    }\n    get llm() {\n        return this.#llm;\n    }\n    get chatHistory() {\n        return this.#chatHistory;\n    }\n    get verbose() {\n        return Settings.debug || this.#verbose;\n    }\n    reset() {\n        this.#chatHistory = [];\n    }\n    getTools(query) {\n        return typeof this.#tools === \"function\" ? this.#tools(query) : this.#tools;\n    }\n    static shouldContinue(task) {\n        return task.context.toolCallCount < MAX_TOOL_CALLS;\n    }\n    createTask(message, stream = false, verbose = undefined, chatHistory, additionalChatOptions) {\n        const initialMessages = [\n            ...chatHistory ?? this.#chatHistory\n        ];\n        if (this.#systemPrompt !== null) {\n            const systemPrompt = this.#systemPrompt;\n            const alreadyHasSystemPrompt = initialMessages.filter((msg)=>msg.role === \"system\").some((msg)=>Object.is(msg.content, systemPrompt));\n            if (!alreadyHasSystemPrompt) {\n                initialMessages.push({\n                    content: systemPrompt,\n                    role: \"system\"\n                });\n            }\n        }\n        return this.#runner.createTask(message, {\n            stream,\n            toolCallCount: 0,\n            llm: this.#llm,\n            additionalChatOptions: additionalChatOptions ?? {},\n            getTools: (message)=>this.getTools(message),\n            store: {\n                ...this.createStore(),\n                messages: initialMessages,\n                toolOutputs: []\n            },\n            shouldContinue: AgentRunner.shouldContinue,\n            logger: // disable verbose if explicitly set to false\n            verbose === false ? emptyLogger : verbose || this.verbose ? consoleLogger : emptyLogger\n        });\n    }\n    async chat(params) {\n        let chatHistory = [];\n        if (params.chatHistory instanceof BaseMemory) {\n            chatHistory = await params.chatHistory.getMessages();\n        } else {\n            chatHistory = params.chatHistory;\n        }\n        const task = this.createTask(params.message, !!params.stream, false, chatHistory, params.chatOptions);\n        for await (const stepOutput of task){\n            // update chat history for each round\n            this.#chatHistory = [\n                ...stepOutput.taskStep.context.store.messages\n            ];\n            if (stepOutput.isLast) {\n                const { output } = stepOutput;\n                if (output instanceof ReadableStream) {\n                    return output.pipeThrough(new TransformStream({\n                        transform (chunk, controller) {\n                            controller.enqueue(EngineResponse.fromChatResponseChunk(chunk));\n                        }\n                    }));\n                } else {\n                    return EngineResponse.fromChatResponse(output);\n                }\n            }\n        }\n        throw new Error(\"Task ended without a last step.\");\n    }\n}\n\nclass LLMAgentWorker extends AgentWorker {\n    constructor(...args){\n        super(...args), this.taskHandler = AgentRunner.defaultTaskHandler;\n    }\n}\nclass LLMAgent extends AgentRunner {\n    constructor(params){\n        validateAgentParams(params);\n        const llm = params.llm ?? (Settings.llm ? Settings.llm : null);\n        if (!llm) throw new Error(\"llm must be provided for either in params or Settings.llm\");\n        super({\n            llm,\n            chatHistory: params.chatHistory ?? [],\n            systemPrompt: params.systemPrompt ?? null,\n            runner: new LLMAgentWorker(),\n            tools: \"tools\" in params ? params.tools : params.toolRetriever.retrieve.bind(params.toolRetriever),\n            verbose: params.verbose ?? false\n        }), this.createStore = AgentRunner.defaultCreateStore, this.taskHandler = AgentRunner.defaultTaskHandler;\n    }\n}\n\nexport { AgentRunner, AgentWorker, LLMAgent, LLMAgentWorker, callTool, consumeAsyncIterable, createReadableStream, stepTools, stepToolsStreaming, validateAgentParams };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5873, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/llms/dist/index.js"],"sourcesContent":["import { streamConverter, extractText } from '../../utils/dist/index.js';\n\nclass BaseLLM {\n    async complete(params) {\n        const { prompt, stream } = params;\n        if (stream) {\n            const stream = await this.chat({\n                messages: [\n                    {\n                        content: prompt,\n                        role: \"user\"\n                    }\n                ],\n                stream: true\n            });\n            return streamConverter(stream, (chunk)=>{\n                return {\n                    raw: null,\n                    text: chunk.delta\n                };\n            });\n        }\n        const chatResponse = await this.chat({\n            messages: [\n                {\n                    content: prompt,\n                    role: \"user\"\n                }\n            ]\n        });\n        return {\n            text: extractText(chatResponse.message.content),\n            raw: chatResponse.raw\n        };\n    }\n}\nclass ToolCallLLM extends BaseLLM {\n}\n\nexport { BaseLLM, ToolCallLLM };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;IACF,MAAM,SAAS,MAAM,EAAE;QACnB,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG;QAC3B,IAAI,QAAQ;YACR,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC;gBAC3B,UAAU;oBACN;wBACI,SAAS;wBACT,MAAM;oBACV;iBACH;gBACD,QAAQ;YACZ;YACA,OAAO,CAAA,GAAA,gKAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,CAAC;gBAC5B,OAAO;oBACH,KAAK;oBACL,MAAM,MAAM,KAAK;gBACrB;YACJ;QACJ;QACA,MAAM,eAAe,MAAM,IAAI,CAAC,IAAI,CAAC;YACjC,UAAU;gBACN;oBACI,SAAS;oBACT,MAAM;gBACV;aACH;QACL;QACA,OAAO;YACH,MAAM,CAAA,GAAA,gKAAA,CAAA,cAAW,AAAD,EAAE,aAAa,OAAO,CAAC,OAAO;YAC9C,KAAK,aAAa,GAAG;QACzB;IACJ;AACJ;AACA,MAAM,oBAAoB;AAC1B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5922, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/embeddings/dist/index.js"],"sourcesContent":["import { TransformComponent, MetadataMode, splitNodesByType, ModalityType } from '../../schema/dist/index.js';\nimport { extractSingleText, extractImage } from '../../utils/dist/index.js';\nimport { tokenizers } from '@llamaindex/env/tokenizers';\n\nfunction truncateMaxTokens(tokenizer, value, maxTokens) {\n    // the maximum number of tokens per one character is 2 (e.g. 爨)\n    if (value.length * 2 < maxTokens) return value;\n    const t = tokenizers.tokenizer(tokenizer);\n    let tokens = t.encode(value);\n    if (tokens.length > maxTokens) {\n        // truncate tokens\n        tokens = tokens.slice(0, maxTokens);\n        value = t.decode(tokens);\n        // if we truncate at an UTF-8 boundary (some characters have more than one token), tiktoken returns a � character - remove it\n        return value.replace(\"�\", \"\");\n    }\n    return value;\n}\n\nconst DEFAULT_SIMILARITY_TOP_K = 2;\n/**\n * Similarity type\n * Default is cosine similarity. Dot product and negative Euclidean distance are also supported.\n */ var SimilarityType = /*#__PURE__*/ function(SimilarityType) {\n    SimilarityType[\"DEFAULT\"] = \"cosine\";\n    SimilarityType[\"DOT_PRODUCT\"] = \"dot_product\";\n    SimilarityType[\"EUCLIDEAN\"] = \"euclidean\";\n    return SimilarityType;\n}({});\n/**\n * The similarity between two embeddings.\n * @param embedding1\n * @param embedding2\n * @param mode\n * @returns similarity score with higher numbers meaning the two embeddings are more similar\n */ function similarity(embedding1, embedding2, mode = \"cosine\") {\n    if (embedding1.length !== embedding2.length) {\n        throw new Error(\"Embedding length mismatch\");\n    }\n    // NOTE I've taken enough Kahan to know that we should probably leave the\n    // numeric programming to numeric programmers. The naive approach here\n    // will probably cause some avoidable loss of floating point precision\n    // ml-distance is worth watching although they currently also use the naive\n    // formulas\n    function norm(x) {\n        let result = 0;\n        for(let i = 0; i < x.length; i++){\n            result += x[i] * x[i];\n        }\n        return Math.sqrt(result);\n    }\n    switch(mode){\n        case \"euclidean\":\n            {\n                const difference = embedding1.map((x, i)=>x - embedding2[i]);\n                return -norm(difference);\n            }\n        case \"dot_product\":\n            {\n                let result = 0;\n                for(let i = 0; i < embedding1.length; i++){\n                    result += embedding1[i] * embedding2[i];\n                }\n                return result;\n            }\n        case \"cosine\":\n            {\n                return similarity(embedding1, embedding2, \"dot_product\") / (norm(embedding1) * norm(embedding2));\n            }\n        default:\n            throw new Error(\"Not implemented yet\");\n    }\n}\n/**\n * Get the top K embeddings from a list of embeddings ordered by similarity to the query.\n * @param queryEmbedding\n * @param embeddings list of embeddings to consider\n * @param similarityTopK max number of embeddings to return, default 2\n * @param embeddingIds ids of embeddings in the embeddings list\n * @param similarityCutoff minimum similarity score\n * @returns\n */ function getTopKEmbeddings(queryEmbedding, embeddings, similarityTopK = 2, // eslint-disable-next-line @typescript-eslint/no-explicit-any\nembeddingIds = null, similarityCutoff = null) {\n    if (embeddingIds == null) {\n        embeddingIds = Array(embeddings.length).map((_, i)=>i);\n    }\n    if (embeddingIds.length !== embeddings.length) {\n        throw new Error(\"getTopKEmbeddings: embeddings and embeddingIds length mismatch\");\n    }\n    const similarities = [];\n    for(let i = 0; i < embeddings.length; i++){\n        const sim = similarity(queryEmbedding, embeddings[i]);\n        if (similarityCutoff == null || sim > similarityCutoff) {\n            similarities.push({\n                similarity: sim,\n                id: embeddingIds[i]\n            });\n        }\n    }\n    similarities.sort((a, b)=>b.similarity - a.similarity); // Reverse sort\n    const resultSimilarities = [];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const resultIds = [];\n    for(let i = 0; i < similarityTopK; i++){\n        if (i >= similarities.length) {\n            break;\n        }\n        resultSimilarities.push(similarities[i].similarity);\n        resultIds.push(similarities[i].id);\n    }\n    return [\n        resultSimilarities,\n        resultIds\n    ];\n}\nfunction getTopKMMREmbeddings(queryEmbedding, embeddings, similarityFn = null, similarityTopK = null, // eslint-disable-next-line @typescript-eslint/no-explicit-any\nembeddingIds = null, _similarityCutoff = null, mmrThreshold = null) {\n    const threshold = mmrThreshold || 0.5;\n    similarityFn = similarityFn || similarity;\n    if (embeddingIds === null || embeddingIds.length === 0) {\n        embeddingIds = Array.from({\n            length: embeddings.length\n        }, (_, i)=>i);\n    }\n    const fullEmbedMap = new Map(embeddingIds.map((value, i)=>[\n            value,\n            i\n        ]));\n    const embedMap = new Map(fullEmbedMap);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const embedSimilarity = new Map();\n    let score = Number.NEGATIVE_INFINITY;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let highScoreId = null;\n    for(let i = 0; i < embeddings.length; i++){\n        const emb = embeddings[i];\n        const similarity = similarityFn(queryEmbedding, emb);\n        embedSimilarity.set(embeddingIds[i], similarity);\n        if (similarity * threshold > score) {\n            highScoreId = embeddingIds[i];\n            score = similarity * threshold;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const results = [];\n    const embeddingLength = embeddings.length;\n    const similarityTopKCount = similarityTopK || embeddingLength;\n    while(results.length < Math.min(similarityTopKCount, embeddingLength)){\n        results.push([\n            score,\n            highScoreId\n        ]);\n        embedMap.delete(highScoreId);\n        const recentEmbeddingId = highScoreId;\n        score = Number.NEGATIVE_INFINITY;\n        for (const embedId of Array.from(embedMap.keys())){\n            const overlapWithRecent = similarityFn(embeddings[embedMap.get(embedId)], embeddings[fullEmbedMap.get(recentEmbeddingId)]);\n            if (threshold * embedSimilarity.get(embedId) - (1 - threshold) * overlapWithRecent > score) {\n                score = threshold * embedSimilarity.get(embedId) - (1 - threshold) * overlapWithRecent;\n                highScoreId = embedId;\n            }\n        }\n    }\n    const resultSimilarities = results.map(([s, _])=>s);\n    const resultIds = results.map(([_, n])=>n);\n    return [\n        resultSimilarities,\n        resultIds\n    ];\n}\n\nconst DEFAULT_EMBED_BATCH_SIZE = 10;\nclass BaseEmbedding extends TransformComponent {\n    constructor(transformFn){\n        if (transformFn) {\n            super(transformFn), this.embedBatchSize = DEFAULT_EMBED_BATCH_SIZE, /**\n   * Optionally override this method to retrieve multiple embeddings in a single request\n   * @param texts\n   */ this.getTextEmbeddings = async (texts)=>{\n                const embeddings = [];\n                for (const text of texts){\n                    const embedding = await this.getTextEmbedding(text);\n                    embeddings.push(embedding);\n                }\n                return embeddings;\n            };\n        } else {\n            super(async (nodes, options)=>{\n                const texts = nodes.map((node)=>node.getContent(MetadataMode.EMBED));\n                const embeddings = await this.getTextEmbeddingsBatch(texts, options);\n                for(let i = 0; i < nodes.length; i++){\n                    nodes[i].embedding = embeddings[i];\n                }\n                return nodes;\n            }), this.embedBatchSize = DEFAULT_EMBED_BATCH_SIZE, this.getTextEmbeddings = async (texts)=>{\n                const embeddings = [];\n                for (const text of texts){\n                    const embedding = await this.getTextEmbedding(text);\n                    embeddings.push(embedding);\n                }\n                return embeddings;\n            };\n        }\n    }\n    similarity(embedding1, embedding2, mode = SimilarityType.DEFAULT) {\n        return similarity(embedding1, embedding2, mode);\n    }\n    async getQueryEmbedding(query) {\n        const text = extractSingleText(query);\n        if (text) {\n            return await this.getTextEmbedding(text);\n        }\n        return null;\n    }\n    /**\n   * Get embeddings for a batch of texts\n   * @param texts\n   * @param options\n   */ async getTextEmbeddingsBatch(texts, options) {\n        return await batchEmbeddings(texts, this.getTextEmbeddings, this.embedBatchSize, options);\n    }\n    truncateMaxTokens(input) {\n        return input.map((s)=>{\n            // truncate to max tokens\n            if (!(this.embedInfo?.tokenizer && this.embedInfo?.maxTokens)) return s;\n            return truncateMaxTokens(this.embedInfo.tokenizer, s, this.embedInfo.maxTokens);\n        });\n    }\n}\nasync function batchEmbeddings(values, embedFunc, chunkSize, options) {\n    const resultEmbeddings = [];\n    const queue = values;\n    const curBatch = [];\n    for(let i = 0; i < queue.length; i++){\n        curBatch.push(queue[i]);\n        if (i == queue.length - 1 || curBatch.length == chunkSize) {\n            const embeddings = await embedFunc(curBatch);\n            resultEmbeddings.push(...embeddings);\n            if (options?.logProgress) {\n                console.log(`getting embedding progress: ${i} / ${queue.length}`);\n            }\n            curBatch.length = 0;\n        }\n    }\n    return resultEmbeddings;\n}\n\n/*\n * Base class for Multi Modal embeddings.\n */ class MultiModalEmbedding extends BaseEmbedding {\n    constructor(){\n        super(async (nodes, options)=>{\n            const nodeMap = splitNodesByType(nodes);\n            const imageNodes = nodeMap[ModalityType.IMAGE] ?? [];\n            const textNodes = nodeMap[ModalityType.TEXT] ?? [];\n            const embeddings = await batchEmbeddings(textNodes.map((node)=>node.getContent(MetadataMode.EMBED)), this.getTextEmbeddings.bind(this), this.embedBatchSize, options);\n            for(let i = 0; i < textNodes.length; i++){\n                textNodes[i].embedding = embeddings[i];\n            }\n            const imageEmbeddings = await batchEmbeddings(imageNodes.map((n)=>n.image), this.getImageEmbeddings.bind(this), this.embedBatchSize, options);\n            for(let i = 0; i < imageNodes.length; i++){\n                imageNodes[i].embedding = imageEmbeddings[i];\n            }\n            return nodes;\n        });\n    }\n    /**\n   * Optionally override this method to retrieve multiple image embeddings in a single request\n   * @param images\n   */ async getImageEmbeddings(images) {\n        return Promise.all(images.map((imgFilePath)=>this.getImageEmbedding(imgFilePath)));\n    }\n    async getQueryEmbedding(query) {\n        const image = extractImage(query);\n        if (image) {\n            return await this.getImageEmbedding(image);\n        }\n        const text = extractSingleText(query);\n        if (text) {\n            return await this.getTextEmbedding(text);\n        }\n        return null;\n    }\n}\n\nexport { BaseEmbedding, DEFAULT_SIMILARITY_TOP_K, MultiModalEmbedding, SimilarityType, batchEmbeddings, getTopKEmbeddings, getTopKMMREmbeddings, similarity, truncateMaxTokens };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6221, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/data-structs/dist/index.js"],"sourcesContent":["import { randomUUID } from '@llamaindex/env';\nimport { jsonToNode } from '../../schema/dist/index.js';\n\nconst IndexStructType = {\n    NODE: \"node\",\n    TREE: \"tree\",\n    LIST: \"list\",\n    KEYWORD_TABLE: \"keyword_table\",\n    DICT: \"dict\",\n    SIMPLE_DICT: \"simple_dict\",\n    WEAVIATE: \"weaviate\",\n    PINECONE: \"pinecone\",\n    QDRANT: \"qdrant\",\n    LANCEDB: \"lancedb\",\n    MILVUS: \"milvus\",\n    CHROMA: \"chroma\",\n    MYSCALE: \"myscale\",\n    CLICKHOUSE: \"clickhouse\",\n    VECTOR_STORE: \"vector_store\",\n    OPENSEARCH: \"opensearch\",\n    DASHVECTOR: \"dashvector\",\n    CHATGPT_RETRIEVAL_PLUGIN: \"chatgpt_retrieval_plugin\",\n    DEEPLAKE: \"deeplake\",\n    EPSILLA: \"epsilla\",\n    MULTIMODAL_VECTOR_STORE: \"multimodal\",\n    SQL: \"sql\",\n    KG: \"kg\",\n    SIMPLE_KG: \"simple_kg\",\n    SIMPLE_LPG: \"simple_lpg\",\n    NEBULAGRAPH: \"nebulagraph\",\n    FALKORDB: \"falkordb\",\n    EMPTY: \"empty\",\n    COMPOSITE: \"composite\",\n    PANDAS: \"pandas\",\n    DOCUMENT_SUMMARY: \"document_summary\",\n    VECTARA: \"vectara\",\n    ZILLIZ_CLOUD_PIPELINE: \"zilliz_cloud_pipeline\",\n    POSTGRESML: \"postgresml\"\n};\n\nclass IndexStruct {\n    constructor(indexId = randomUUID(), summary = undefined){\n        this.indexId = indexId;\n        this.summary = summary;\n    }\n    toJson() {\n        return {\n            indexId: this.indexId,\n            summary: this.summary\n        };\n    }\n    getSummary() {\n        if (this.summary === undefined) {\n            throw new Error(\"summary field of the index struct is not set\");\n        }\n        return this.summary;\n    }\n}\n// A table of keywords mapping keywords to text chunks.\nclass KeywordTable extends IndexStruct {\n    addNode(keywords, nodeId) {\n        keywords.forEach((keyword)=>{\n            if (!this.table.has(keyword)) {\n                this.table.set(keyword, new Set());\n            }\n            this.table.get(keyword).add(nodeId);\n        });\n    }\n    deleteNode(keywords, nodeId) {\n        keywords.forEach((keyword)=>{\n            if (this.table.has(keyword)) {\n                this.table.get(keyword).delete(nodeId);\n            }\n        });\n    }\n    toJson() {\n        return {\n            ...super.toJson(),\n            table: Array.from(this.table.entries()).reduce((acc, [keyword, nodeIds])=>{\n                acc[keyword] = Array.from(nodeIds);\n                return acc;\n            }, {}),\n            type: this.type\n        };\n    }\n    constructor(...args){\n        super(...args), this.table = new Map(), this.type = IndexStructType.KEYWORD_TABLE;\n    }\n}\nclass IndexDict extends IndexStruct {\n    addNode(node, textId) {\n        const vectorId = textId ?? node.id_;\n        this.nodesDict[vectorId] = node;\n    }\n    toJson() {\n        const nodesDict = {};\n        for (const [key, node] of Object.entries(this.nodesDict)){\n            nodesDict[key] = node.toJSON();\n        }\n        return {\n            ...super.toJson(),\n            nodesDict,\n            type: this.type\n        };\n    }\n    delete(nodeId) {\n        delete this.nodesDict[nodeId];\n    }\n    constructor(...args){\n        super(...args), this.nodesDict = {}, this.type = IndexStructType.SIMPLE_DICT;\n    }\n}\nclass IndexList extends IndexStruct {\n    addNode(node) {\n        this.nodes.push(node.id_);\n    }\n    toJson() {\n        return {\n            ...super.toJson(),\n            nodes: this.nodes,\n            type: this.type\n        };\n    }\n    constructor(...args){\n        super(...args), this.nodes = [], this.type = IndexStructType.LIST;\n    }\n}\n\nfunction jsonToIndexStruct(// eslint-disable-next-line @typescript-eslint/no-explicit-any\njson) {\n    if (json.type === IndexStructType.LIST) {\n        const indexList = new IndexList(json.indexId, json.summary);\n        indexList.nodes = json.nodes;\n        return indexList;\n    } else if (json.type === IndexStructType.SIMPLE_DICT) {\n        const indexDict = new IndexDict(json.indexId, json.summary);\n        indexDict.nodesDict = Object.entries(json.nodesDict).reduce((acc, [key, value])=>{\n            acc[key] = jsonToNode(value);\n            return acc;\n        }, {});\n        return indexDict;\n    } else {\n        throw new Error(`Unknown index struct type: ${json.type}`);\n    }\n}\n\nexport { IndexDict, IndexList, IndexStruct, IndexStructType, KeywordTable, jsonToIndexStruct };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6387, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/query-engine/dist/index.js"],"sourcesContent":["import { randomUUID } from '@llamaindex/env';\nimport { wrapEventCaller } from '../../decorator/dist/index.js';\nimport { Settings } from '../../global/dist/index.js';\nimport { PromptMixin } from '../../prompts/dist/index.js';\nimport { getResponseSynthesizer } from '../../response-synthesizers/dist/index.js';\nimport { extractText } from '../../utils/dist/index.js';\n\nfunction applyDecs2203RFactory() {\n    function createAddInitializerMethod(initializers, decoratorFinishedRef) {\n        return function addInitializer(initializer) {\n            assertNotFinished(decoratorFinishedRef, \"addInitializer\");\n            assertCallable(initializer, \"An initializer\");\n            initializers.push(initializer);\n        };\n    }\n    function memberDec(dec, name, desc, initializers, kind, isStatic, isPrivate, metadata, value) {\n        var kindStr;\n        switch(kind){\n            case 1:\n                kindStr = \"accessor\";\n                break;\n            case 2:\n                kindStr = \"method\";\n                break;\n            case 3:\n                kindStr = \"getter\";\n                break;\n            case 4:\n                kindStr = \"setter\";\n                break;\n            default:\n                kindStr = \"field\";\n        }\n        var ctx = {\n            kind: kindStr,\n            name: isPrivate ? \"#\" + name : name,\n            static: isStatic,\n            private: isPrivate,\n            metadata: metadata\n        };\n        var decoratorFinishedRef = {\n            v: false\n        };\n        ctx.addInitializer = createAddInitializerMethod(initializers, decoratorFinishedRef);\n        var get, set;\n        if (kind === 0) {\n            if (isPrivate) {\n                get = desc.get;\n                set = desc.set;\n            } else {\n                get = function() {\n                    return this[name];\n                };\n                set = function(v) {\n                    this[name] = v;\n                };\n            }\n        } else if (kind === 2) {\n            get = function() {\n                return desc.value;\n            };\n        } else {\n            if (kind === 1 || kind === 3) {\n                get = function() {\n                    return desc.get.call(this);\n                };\n            }\n            if (kind === 1 || kind === 4) {\n                set = function(v) {\n                    desc.set.call(this, v);\n                };\n            }\n        }\n        ctx.access = get && set ? {\n            get: get,\n            set: set\n        } : get ? {\n            get: get\n        } : {\n            set: set\n        };\n        try {\n            return dec(value, ctx);\n        } finally{\n            decoratorFinishedRef.v = true;\n        }\n    }\n    function assertNotFinished(decoratorFinishedRef, fnName) {\n        if (decoratorFinishedRef.v) {\n            throw new Error(\"attempted to call \" + fnName + \" after decoration was finished\");\n        }\n    }\n    function assertCallable(fn, hint) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(hint + \" must be a function\");\n        }\n    }\n    function assertValidReturnValue(kind, value) {\n        var type = typeof value;\n        if (kind === 1) {\n            if (type !== \"object\" || value === null) {\n                throw new TypeError(\"accessor decorators must return an object with get, set, or init properties or void 0\");\n            }\n            if (value.get !== undefined) {\n                assertCallable(value.get, \"accessor.get\");\n            }\n            if (value.set !== undefined) {\n                assertCallable(value.set, \"accessor.set\");\n            }\n            if (value.init !== undefined) {\n                assertCallable(value.init, \"accessor.init\");\n            }\n        } else if (type !== \"function\") {\n            var hint;\n            if (kind === 0) {\n                hint = \"field\";\n            } else if (kind === 10) {\n                hint = \"class\";\n            } else {\n                hint = \"method\";\n            }\n            throw new TypeError(hint + \" decorators must return a function or void 0\");\n        }\n    }\n    function applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers, metadata) {\n        var decs = decInfo[0];\n        var desc, init, value;\n        if (isPrivate) {\n            if (kind === 0 || kind === 1) {\n                desc = {\n                    get: decInfo[3],\n                    set: decInfo[4]\n                };\n            } else if (kind === 3) {\n                desc = {\n                    get: decInfo[3]\n                };\n            } else if (kind === 4) {\n                desc = {\n                    set: decInfo[3]\n                };\n            } else {\n                desc = {\n                    value: decInfo[3]\n                };\n            }\n        } else if (kind !== 0) {\n            desc = Object.getOwnPropertyDescriptor(base, name);\n        }\n        if (kind === 1) {\n            value = {\n                get: desc.get,\n                set: desc.set\n            };\n        } else if (kind === 2) {\n            value = desc.value;\n        } else if (kind === 3) {\n            value = desc.get;\n        } else if (kind === 4) {\n            value = desc.set;\n        }\n        var newValue, get, set;\n        if (typeof decs === \"function\") {\n            newValue = memberDec(decs, name, desc, initializers, kind, isStatic, isPrivate, metadata, value);\n            if (newValue !== void 0) {\n                assertValidReturnValue(kind, newValue);\n                if (kind === 0) {\n                    init = newValue;\n                } else if (kind === 1) {\n                    init = newValue.init;\n                    get = newValue.get || value.get;\n                    set = newValue.set || value.set;\n                    value = {\n                        get: get,\n                        set: set\n                    };\n                } else {\n                    value = newValue;\n                }\n            }\n        } else {\n            for(var i = decs.length - 1; i >= 0; i--){\n                var dec = decs[i];\n                newValue = memberDec(dec, name, desc, initializers, kind, isStatic, isPrivate, metadata, value);\n                if (newValue !== void 0) {\n                    assertValidReturnValue(kind, newValue);\n                    var newInit;\n                    if (kind === 0) {\n                        newInit = newValue;\n                    } else if (kind === 1) {\n                        newInit = newValue.init;\n                        get = newValue.get || value.get;\n                        set = newValue.set || value.set;\n                        value = {\n                            get: get,\n                            set: set\n                        };\n                    } else {\n                        value = newValue;\n                    }\n                    if (newInit !== void 0) {\n                        if (init === void 0) {\n                            init = newInit;\n                        } else if (typeof init === \"function\") {\n                            init = [\n                                init,\n                                newInit\n                            ];\n                        } else {\n                            init.push(newInit);\n                        }\n                    }\n                }\n            }\n        }\n        if (kind === 0 || kind === 1) {\n            if (init === void 0) {\n                init = function(instance, init) {\n                    return init;\n                };\n            } else if (typeof init !== \"function\") {\n                var ownInitializers = init;\n                init = function(instance, init) {\n                    var value = init;\n                    for(var i = 0; i < ownInitializers.length; i++){\n                        value = ownInitializers[i].call(instance, value);\n                    }\n                    return value;\n                };\n            } else {\n                var originalInitializer = init;\n                init = function(instance, init) {\n                    return originalInitializer.call(instance, init);\n                };\n            }\n            ret.push(init);\n        }\n        if (kind !== 0) {\n            if (kind === 1) {\n                desc.get = value.get;\n                desc.set = value.set;\n            } else if (kind === 2) {\n                desc.value = value;\n            } else if (kind === 3) {\n                desc.get = value;\n            } else if (kind === 4) {\n                desc.set = value;\n            }\n            if (isPrivate) {\n                if (kind === 1) {\n                    ret.push(function(instance, args) {\n                        return value.get.call(instance, args);\n                    });\n                    ret.push(function(instance, args) {\n                        return value.set.call(instance, args);\n                    });\n                } else if (kind === 2) {\n                    ret.push(value);\n                } else {\n                    ret.push(function(instance, args) {\n                        return value.call(instance, args);\n                    });\n                }\n            } else {\n                Object.defineProperty(base, name, desc);\n            }\n        }\n    }\n    function applyMemberDecs(Class, decInfos, metadata) {\n        var ret = [];\n        var protoInitializers;\n        var staticInitializers;\n        var existingProtoNonFields = new Map();\n        var existingStaticNonFields = new Map();\n        for(var i = 0; i < decInfos.length; i++){\n            var decInfo = decInfos[i];\n            if (!Array.isArray(decInfo)) continue;\n            var kind = decInfo[1];\n            var name = decInfo[2];\n            var isPrivate = decInfo.length > 3;\n            var isStatic = kind >= 5;\n            var base;\n            var initializers;\n            if (isStatic) {\n                base = Class;\n                kind = kind - 5;\n                staticInitializers = staticInitializers || [];\n                initializers = staticInitializers;\n            } else {\n                base = Class.prototype;\n                protoInitializers = protoInitializers || [];\n                initializers = protoInitializers;\n            }\n            if (kind !== 0 && !isPrivate) {\n                var existingNonFields = isStatic ? existingStaticNonFields : existingProtoNonFields;\n                var existingKind = existingNonFields.get(name) || 0;\n                if (existingKind === true || existingKind === 3 && kind !== 4 || existingKind === 4 && kind !== 3) {\n                    throw new Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \" + name);\n                } else if (!existingKind && kind > 2) {\n                    existingNonFields.set(name, kind);\n                } else {\n                    existingNonFields.set(name, true);\n                }\n            }\n            applyMemberDec(ret, base, decInfo, name, kind, isStatic, isPrivate, initializers, metadata);\n        }\n        pushInitializers(ret, protoInitializers);\n        pushInitializers(ret, staticInitializers);\n        return ret;\n    }\n    function pushInitializers(ret, initializers) {\n        if (initializers) {\n            ret.push(function(instance) {\n                for(var i = 0; i < initializers.length; i++){\n                    initializers[i].call(instance);\n                }\n                return instance;\n            });\n        }\n    }\n    function applyClassDecs(targetClass, classDecs, metadata) {\n        if (classDecs.length > 0) {\n            var initializers = [];\n            var newClass = targetClass;\n            var name = targetClass.name;\n            for(var i = classDecs.length - 1; i >= 0; i--){\n                var decoratorFinishedRef = {\n                    v: false\n                };\n                try {\n                    var nextNewClass = classDecs[i](newClass, {\n                        kind: \"class\",\n                        name: name,\n                        addInitializer: createAddInitializerMethod(initializers, decoratorFinishedRef),\n                        metadata\n                    });\n                } finally{\n                    decoratorFinishedRef.v = true;\n                }\n                if (nextNewClass !== undefined) {\n                    assertValidReturnValue(10, nextNewClass);\n                    newClass = nextNewClass;\n                }\n            }\n            return [\n                defineMetadata(newClass, metadata),\n                function() {\n                    for(var i = 0; i < initializers.length; i++){\n                        initializers[i].call(newClass);\n                    }\n                }\n            ];\n        }\n    }\n    function defineMetadata(Class, metadata) {\n        return Object.defineProperty(Class, Symbol.metadata || Symbol.for(\"Symbol.metadata\"), {\n            configurable: true,\n            enumerable: true,\n            value: metadata\n        });\n    }\n    return function applyDecs2203R(targetClass, memberDecs, classDecs, parentClass) {\n        if (parentClass !== void 0) {\n            var parentMetadata = parentClass[Symbol.metadata || Symbol.for(\"Symbol.metadata\")];\n        }\n        var metadata = Object.create(parentMetadata === void 0 ? null : parentMetadata);\n        var e = applyMemberDecs(targetClass, memberDecs, metadata);\n        if (!classDecs.length) defineMetadata(targetClass, metadata);\n        return {\n            e: e,\n            get c () {\n                return applyClassDecs(targetClass, classDecs, metadata);\n            }\n        };\n    };\n}\nfunction _apply_decs_2203_r(targetClass, memberDecs, classDecs, parentClass) {\n    return (_apply_decs_2203_r = applyDecs2203RFactory())(targetClass, memberDecs, classDecs, parentClass);\n}\nvar _initProto;\nclass BaseQueryEngine extends PromptMixin {\n    static{\n        ({ e: [_initProto] } = _apply_decs_2203_r(this, [\n            [\n                wrapEventCaller,\n                2,\n                \"query\"\n            ]\n        ], []));\n    }\n    constructor(...args){\n        super(...args), _initProto(this);\n    }\n    async retrieve(params) {\n        throw new Error(\"This query engine does not support retrieve, use query directly\");\n    }\n    async query(params) {\n        const { stream, query } = params;\n        const id = randomUUID();\n        const callbackManager = Settings.callbackManager;\n        callbackManager.dispatchEvent(\"query-start\", {\n            id,\n            query\n        });\n        const response = await this._query(query, stream);\n        callbackManager.dispatchEvent(\"query-end\", {\n            id,\n            response\n        });\n        return response;\n    }\n}\n\nclass RetrieverQueryEngine extends BaseQueryEngine {\n    constructor(retriever, responseSynthesizer, nodePostprocessors){\n        super();\n        this.retriever = retriever;\n        this.responseSynthesizer = responseSynthesizer || getResponseSynthesizer(\"compact\");\n        this.nodePostprocessors = nodePostprocessors || [];\n    }\n    async _query(strOrQueryBundle, stream) {\n        const nodesWithScore = await this.retrieve(typeof strOrQueryBundle === \"string\" ? strOrQueryBundle : extractText(strOrQueryBundle));\n        if (stream) {\n            return this.responseSynthesizer.synthesize({\n                query: typeof strOrQueryBundle === \"string\" ? {\n                    query: strOrQueryBundle\n                } : strOrQueryBundle,\n                nodes: nodesWithScore\n            }, true);\n        }\n        return this.responseSynthesizer.synthesize({\n            query: typeof strOrQueryBundle === \"string\" ? {\n                query: strOrQueryBundle\n            } : strOrQueryBundle,\n            nodes: nodesWithScore\n        });\n    }\n    _getPrompts() {\n        return {};\n    }\n    _updatePrompts() {}\n    _getPromptModules() {\n        return {\n            responseSynthesizer: this.responseSynthesizer\n        };\n    }\n    async applyNodePostprocessors(nodes, query) {\n        let nodesWithScore = nodes;\n        for (const postprocessor of this.nodePostprocessors){\n            nodesWithScore = await postprocessor.postprocessNodes(nodesWithScore, query);\n        }\n        return nodesWithScore;\n    }\n    async retrieve(query) {\n        const nodes = await this.retriever.retrieve(query);\n        const messageContent = typeof query === \"string\" ? query : query.query;\n        return await this.applyNodePostprocessors(nodes, messageContent);\n    }\n}\n\nexport { BaseQueryEngine, RetrieverQueryEngine };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6862, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/retriever/dist/index.js"],"sourcesContent":["import { randomUUID } from '@llamaindex/env';\nimport { Settings } from '../../global/dist/index.js';\nimport { PromptMixin } from '../../prompts/dist/index.js';\nimport { ObjectType, BaseNode } from '../../schema/dist/index.js';\n\nclass BaseRetriever extends PromptMixin {\n    _updatePrompts() {}\n    _getPrompts() {\n        return {};\n    }\n    _getPromptModules() {\n        return {};\n    }\n    constructor(){\n        super(), this.objectMap = new Map();\n    }\n    async retrieve(params) {\n        const cb = Settings.callbackManager;\n        const queryBundle = typeof params === \"string\" ? {\n            query: params\n        } : params;\n        const id = randomUUID();\n        cb.dispatchEvent(\"retrieve-start\", {\n            id,\n            query: queryBundle\n        });\n        let response = await this._retrieve(queryBundle);\n        response = await this._handleRecursiveRetrieval(queryBundle, response);\n        cb.dispatchEvent(\"retrieve-end\", {\n            id,\n            query: queryBundle,\n            nodes: response\n        });\n        return response;\n    }\n    async _handleRecursiveRetrieval(params, nodes) {\n        const retrievedNodes = [];\n        for (const { node, score = 1.0 } of nodes){\n            if (node.type === ObjectType.INDEX) {\n                const indexNode = node;\n                const object = this.objectMap.get(indexNode.indexId);\n                if (object !== undefined) {\n                    retrievedNodes.push(...this._retrieveFromObject(object, params, score));\n                } else {\n                    retrievedNodes.push({\n                        node,\n                        score\n                    });\n                }\n            } else {\n                retrievedNodes.push({\n                    node,\n                    score\n                });\n            }\n        }\n        return nodes;\n    }\n    _retrieveFromObject(object, queryBundle, score) {\n        if (object == null) {\n            throw new TypeError(\"Object is not retrievable\");\n        }\n        if (typeof object !== \"object\") {\n            throw new TypeError(\"Object is not retrievable\");\n        }\n        if (\"node\" in object && object.node instanceof BaseNode) {\n            return [\n                {\n                    node: object.node,\n                    score: \"score\" in object && typeof object.score === \"number\" ? object.score : score\n                }\n            ];\n        }\n        if (object instanceof BaseNode) {\n            return [\n                {\n                    node: object,\n                    score\n                }\n            ];\n        } else {\n            // todo: support other types\n            // BaseQueryEngine\n            // BaseRetriever\n            // QueryComponent\n            throw new TypeError(\"Object is not retrievable\");\n        }\n    }\n}\n\nexport { BaseRetriever };\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,sBAAsB,kKAAA,CAAA,cAAW;IACnC,iBAAiB,CAAC;IAClB,cAAc;QACV,OAAO,CAAC;IACZ;IACA,oBAAoB;QAChB,OAAO,CAAC;IACZ;IACA,aAAa;QACT,KAAK,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI;IAClC;IACA,MAAM,SAAS,MAAM,EAAE;QACnB,MAAM,KAAK,iKAAA,CAAA,WAAQ,CAAC,eAAe;QACnC,MAAM,cAAc,OAAO,WAAW,WAAW;YAC7C,OAAO;QACX,IAAI;QACJ,MAAM,KAAK,CAAA,GAAA,qHAAA,CAAA,aAAU,AAAD;QACpB,GAAG,aAAa,CAAC,kBAAkB;YAC/B;YACA,OAAO;QACX;QACA,IAAI,WAAW,MAAM,IAAI,CAAC,SAAS,CAAC;QACpC,WAAW,MAAM,IAAI,CAAC,yBAAyB,CAAC,aAAa;QAC7D,GAAG,aAAa,CAAC,gBAAgB;YAC7B;YACA,OAAO;YACP,OAAO;QACX;QACA,OAAO;IACX;IACA,MAAM,0BAA0B,MAAM,EAAE,KAAK,EAAE;QAC3C,MAAM,iBAAiB,EAAE;QACzB,KAAK,MAAM,EAAE,IAAI,EAAE,QAAQ,GAAG,EAAE,IAAI,MAAM;YACtC,IAAI,KAAK,IAAI,KAAK,iKAAA,CAAA,aAAU,CAAC,KAAK,EAAE;gBAChC,MAAM,YAAY;gBAClB,MAAM,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,OAAO;gBACnD,IAAI,WAAW,WAAW;oBACtB,eAAe,IAAI,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,QAAQ;gBACpE,OAAO;oBACH,eAAe,IAAI,CAAC;wBAChB;wBACA;oBACJ;gBACJ;YACJ,OAAO;gBACH,eAAe,IAAI,CAAC;oBAChB;oBACA;gBACJ;YACJ;QACJ;QACA,OAAO;IACX;IACA,oBAAoB,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE;QAC5C,IAAI,UAAU,MAAM;YAChB,MAAM,IAAI,UAAU;QACxB;QACA,IAAI,OAAO,WAAW,UAAU;YAC5B,MAAM,IAAI,UAAU;QACxB;QACA,IAAI,UAAU,UAAU,OAAO,IAAI,YAAY,iKAAA,CAAA,WAAQ,EAAE;YACrD,OAAO;gBACH;oBACI,MAAM,OAAO,IAAI;oBACjB,OAAO,WAAW,UAAU,OAAO,OAAO,KAAK,KAAK,WAAW,OAAO,KAAK,GAAG;gBAClF;aACH;QACL;QACA,IAAI,kBAAkB,iKAAA,CAAA,WAAQ,EAAE;YAC5B,OAAO;gBACH;oBACI,MAAM;oBACN;gBACJ;aACH;QACL,OAAO;YACH,4BAA4B;YAC5B,kBAAkB;YAClB,gBAAgB;YAChB,iBAAiB;YACjB,MAAM,IAAI,UAAU;QACxB;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6965, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/storage/doc-store/dist/index.js"],"sourcesContent":["import { path } from '@llamaindex/env';\nimport { DEFAULT_PERSIST_DIR, DEFAULT_DOC_STORE_PERSIST_FILENAME, DEFAULT_NAMESPACE } from '../../../global/dist/index.js';\nimport { ObjectType, Document, TextNode, BaseNode } from '../../../schema/dist/index.js';\n\nconst TYPE_KEY = \"__type__\";\nconst DATA_KEY = \"__data__\";\nconst jsonSerializer = {\n    toPersistence (data) {\n        return JSON.stringify(data);\n    },\n    fromPersistence (data) {\n        return JSON.parse(data);\n    }\n};\nconst noneSerializer = {\n    toPersistence (data) {\n        return data;\n    },\n    fromPersistence (data) {\n        return data;\n    }\n};\nfunction isValidDocJson(docJson) {\n    return typeof docJson === \"object\" && docJson !== null && docJson[TYPE_KEY] !== undefined && docJson[DATA_KEY] !== undefined;\n}\nfunction docToJson(doc, serializer) {\n    return {\n        [DATA_KEY]: serializer.toPersistence(doc.toJSON()),\n        [TYPE_KEY]: doc.type\n    };\n}\nfunction jsonToDoc(docDict, serializer) {\n    const docType = docDict[TYPE_KEY];\n    // fixme: zod type check this\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const dataDict = serializer.fromPersistence(docDict[DATA_KEY]);\n    let doc;\n    if (docType === ObjectType.DOCUMENT) {\n        doc = new Document({\n            text: dataDict.text,\n            id_: dataDict.id_,\n            embedding: dataDict.embedding,\n            hash: dataDict.hash,\n            metadata: dataDict.metadata\n        });\n    } else if (docType === ObjectType.TEXT) {\n        doc = new TextNode({\n            text: dataDict.text,\n            id_: dataDict.id_,\n            hash: dataDict.hash,\n            metadata: dataDict.metadata,\n            relationships: dataDict.relationships\n        });\n    } else {\n        throw new Error(`Unknown doc type: ${docType}`);\n    }\n    return doc;\n}\nconst DEFAULT_PERSIST_PATH = path.join(DEFAULT_PERSIST_DIR, DEFAULT_DOC_STORE_PERSIST_FILENAME);\nclass BaseDocumentStore {\n    // Save/load\n    persist(persistPath = DEFAULT_PERSIST_PATH) {\n    // Persist the docstore to a file.\n    }\n    // Nodes\n    getNodes(nodeIds, raiseError = true) {\n        return Promise.all(nodeIds.map((nodeId)=>this.getNode(nodeId, raiseError)));\n    }\n    async getNode(nodeId, raiseError = true) {\n        const doc = await this.getDocument(nodeId, raiseError);\n        if (!(doc instanceof BaseNode)) {\n            throw new Error(`Document ${nodeId} is not a Node.`);\n        }\n        return doc;\n    }\n    async getNodeDict(nodeIdDict) {\n        const result = {};\n        for(const index in nodeIdDict){\n            result[index] = await this.getNode(nodeIdDict[index]);\n        }\n        return result;\n    }\n    constructor(){\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.serializer = jsonSerializer;\n    }\n}\n\nclass KVDocumentStore extends BaseDocumentStore {\n    constructor(kvstore, namespace = DEFAULT_NAMESPACE){\n        super();\n        this.kvstore = kvstore;\n        this.nodeCollection = `${namespace}/data`;\n        this.refDocCollection = `${namespace}/ref_doc_info`;\n        this.metadataCollection = `${namespace}/metadata`;\n    }\n    async docs() {\n        const jsonDict = await this.kvstore.getAll(this.nodeCollection);\n        const docs = {};\n        for(const key in jsonDict){\n            const value = jsonDict[key];\n            if (isValidDocJson(value)) {\n                docs[key] = jsonToDoc(value, this.serializer);\n            } else {\n                console.warn(`Invalid JSON for docId ${key}`);\n            }\n        }\n        return docs;\n    }\n    async addDocuments(docs, allowUpdate = true) {\n        for(let idx = 0; idx < docs.length; idx++){\n            const doc = docs[idx];\n            if (doc.id_ === null) {\n                throw new Error(\"doc_id not set\");\n            }\n            if (!allowUpdate && await this.documentExists(doc.id_)) {\n                throw new Error(`doc_id ${doc.id_} already exists. Set allow_update to True to overwrite.`);\n            }\n            const nodeKey = doc.id_;\n            const data = docToJson(doc, this.serializer);\n            await this.kvstore.put(nodeKey, data, this.nodeCollection);\n            const metadata = {\n                docHash: doc.hash\n            };\n            if (doc.type === ObjectType.TEXT && doc.sourceNode !== undefined) {\n                const refDocInfo = await this.getRefDocInfo(doc.sourceNode.nodeId) || {\n                    nodeIds: [],\n                    extraInfo: {}\n                };\n                refDocInfo.nodeIds.push(doc.id_);\n                if (Object.keys(refDocInfo.extraInfo).length === 0) {\n                    refDocInfo.extraInfo = {};\n                }\n                await this.kvstore.put(doc.sourceNode.nodeId, refDocInfo, this.refDocCollection);\n                metadata.refDocId = doc.sourceNode.nodeId;\n            }\n            await this.kvstore.put(nodeKey, metadata, this.metadataCollection);\n        }\n    }\n    async getDocument(docId, raiseError = true) {\n        const json = await this.kvstore.get(docId, this.nodeCollection);\n        if (this.isNil(json)) {\n            if (raiseError) {\n                throw new Error(`docId ${docId} not found.`);\n            } else {\n                return;\n            }\n        }\n        if (!isValidDocJson(json)) {\n            throw new Error(`Invalid JSON for docId ${docId}`);\n        }\n        return jsonToDoc(json, this.serializer);\n    }\n    async getRefDocInfo(refDocId) {\n        const refDocInfo = await this.kvstore.get(refDocId, this.refDocCollection);\n        return refDocInfo ? structuredClone(refDocInfo) : undefined;\n    }\n    async getAllRefDocInfo() {\n        const refDocInfos = await this.kvstore.getAll(this.refDocCollection);\n        if (this.isNil(refDocInfos)) {\n            return;\n        }\n        return refDocInfos;\n    }\n    async refDocExists(refDocId) {\n        return !this.isNil(await this.getRefDocInfo(refDocId));\n    }\n    async documentExists(docId) {\n        return !this.isNil(await this.kvstore.get(docId, this.nodeCollection));\n    }\n    async removeRefDocNode(docId) {\n        const metadata = await this.kvstore.get(docId, this.metadataCollection);\n        if (metadata === null) {\n            return;\n        }\n        const refDocId = metadata.refDocId;\n        if (this.isNil(refDocId)) {\n            return;\n        }\n        const refDocInfo = await this.kvstore.get(refDocId, this.refDocCollection);\n        if (!this.isNil(refDocInfo)) {\n            if (refDocInfo.nodeIds.length > 0) {\n                await this.kvstore.put(refDocId, refDocInfo, this.refDocCollection);\n            }\n            await this.kvstore.delete(refDocId, this.metadataCollection);\n        }\n    }\n    async deleteDocument(docId, raiseError = true, removeRefDocNode = true) {\n        if (removeRefDocNode) {\n            await this.removeRefDocNode(docId);\n        }\n        const deleteSuccess = await this.kvstore.delete(docId, this.nodeCollection);\n        await this.kvstore.delete(docId, this.metadataCollection);\n        if (!deleteSuccess && raiseError) {\n            throw new Error(`doc_id ${docId} not found.`);\n        }\n    }\n    async deleteRefDoc(refDocId, raiseError = true) {\n        const refDocInfo = await this.getRefDocInfo(refDocId);\n        if (this.isNil(refDocInfo)) {\n            if (raiseError) {\n                throw new Error(`ref_doc_id ${refDocId} not found.`);\n            } else {\n                return;\n            }\n        }\n        for (const docId of refDocInfo.nodeIds){\n            await this.deleteDocument(docId, false, false);\n        }\n        await this.kvstore.delete(refDocId, this.metadataCollection);\n        await this.kvstore.delete(refDocId, this.refDocCollection);\n    }\n    async setDocumentHash(docId, docHash) {\n        const metadata = {\n            docHash: docHash\n        };\n        await this.kvstore.put(docId, metadata, this.metadataCollection);\n    }\n    async getDocumentHash(docId) {\n        const metadata = await this.kvstore.get(docId, this.metadataCollection);\n        return metadata?.docHash;\n    }\n    async getAllDocumentHashes() {\n        const hashes = {};\n        const metadataDocs = await this.kvstore.getAll(this.metadataCollection);\n        for(const docId in metadataDocs){\n            const hash = await this.getDocumentHash(docId);\n            if (hash) {\n                hashes[hash] = docId;\n            }\n        }\n        return hashes;\n    }\n    isNil(value) {\n        return value === null || value === undefined;\n    }\n}\n\nexport { BaseDocumentStore, KVDocumentStore, docToJson, isValidDocJson, jsonSerializer, jsonToDoc, noneSerializer };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7220, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/storage/kv-store/dist/index.js"],"sourcesContent":["import { path, fs } from '@llamaindex/env';\nimport { DEFAULT_COLLECTION } from '../../../global/dist/index.js';\n\nasync function exists(path) {\n    try {\n        await fs.access(path);\n        return true;\n    } catch  {\n        return false;\n    }\n}\nclass BaseKVStore {\n}\nclass BaseInMemoryKVStore extends BaseKVStore {\n    static fromPersistPath(persistPath) {\n        throw new Error(\"Method not implemented.\");\n    }\n}\nclass SimpleKVStore extends BaseKVStore {\n    constructor(data = {}){\n        super(), this.data = data;\n    }\n    async put(key, val, collection = DEFAULT_COLLECTION) {\n        if (!(collection in this.data)) {\n            this.data[collection] = {};\n        }\n        this.data[collection][key] = structuredClone(val); // Creating a shallow copy of the object\n        if (this.persistPath) {\n            await this.persist(this.persistPath);\n        }\n    }\n    async get(key, collection = DEFAULT_COLLECTION) {\n        const collectionData = this.data[collection];\n        if (collectionData == null) {\n            return null;\n        }\n        if (!(key in collectionData)) {\n            return null;\n        }\n        return structuredClone(collectionData[key]); // Creating a shallow copy of the object\n    }\n    async getAll(collection = DEFAULT_COLLECTION) {\n        if (this.data[collection]) {\n            return structuredClone(this.data[collection]);\n        }\n        return {};\n    }\n    async delete(key, collection = DEFAULT_COLLECTION) {\n        if (key in this.data[collection]) {\n            delete this.data[collection][key];\n            if (this.persistPath) {\n                await this.persist(this.persistPath);\n            }\n            return true;\n        }\n        return false;\n    }\n    async persist(persistPath) {\n        // TODO: decide on a way to polyfill path\n        const dirPath = path.dirname(persistPath);\n        if (!await exists(dirPath)) {\n            await fs.mkdir(dirPath);\n        }\n        await fs.writeFile(persistPath, JSON.stringify(this.data));\n    }\n    static async fromPersistPath(persistPath) {\n        const dirPath = path.dirname(persistPath);\n        if (!await exists(dirPath)) {\n            await fs.mkdir(dirPath);\n        }\n        let data = {};\n        try {\n            const fileData = await fs.readFile(persistPath);\n            data = JSON.parse(fileData.toString());\n        } catch (e) {\n            console.error(`No valid data found at path: ${persistPath} starting new store.`);\n        }\n        const store = new SimpleKVStore(data);\n        store.persistPath = persistPath;\n        return store;\n    }\n    toDict() {\n        return this.data;\n    }\n    static fromDict(saveDict) {\n        return new SimpleKVStore(saveDict);\n    }\n}\n\nexport { BaseInMemoryKVStore, BaseKVStore, SimpleKVStore };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7323, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/storage/index-store/dist/index.js"],"sourcesContent":["import { path } from '@llamaindex/env';\nimport { jsonToIndexStruct } from '../../../data-structs/dist/index.js';\nimport { DEFAULT_PERSIST_DIR, DEFAULT_INDEX_STORE_PERSIST_FILENAME, DEFAULT_NAMESPACE } from '../../../global/dist/index.js';\nimport { SimpleKVStore } from '../../kv-store/dist/index.js';\n\nconst DEFAULT_PERSIST_PATH = path.join(DEFAULT_PERSIST_DIR, DEFAULT_INDEX_STORE_PERSIST_FILENAME);\nclass BaseIndexStore {\n    async persist(persistPath = DEFAULT_PERSIST_PATH) {\n    // Persist the index store to disk.\n    }\n}\nclass KVIndexStore extends BaseIndexStore {\n    constructor(kvStore, namespace = DEFAULT_NAMESPACE){\n        super();\n        this._kvStore = kvStore;\n        this._collection = `${namespace}/data`;\n    }\n    async addIndexStruct(indexStruct) {\n        const key = indexStruct.indexId;\n        const data = indexStruct.toJson();\n        await this._kvStore.put(key, data, this._collection);\n    }\n    async deleteIndexStruct(key) {\n        await this._kvStore.delete(key, this._collection);\n    }\n    async getIndexStruct(structId) {\n        if (!structId) {\n            const structs = await this.getIndexStructs();\n            if (structs.length !== 1) {\n                throw new Error(\"More than one index struct found\");\n            }\n            return structs[0];\n        } else {\n            const json = await this._kvStore.get(structId, this._collection);\n            if (json == null) {\n                return;\n            }\n            return jsonToIndexStruct(json);\n        }\n    }\n    async getIndexStructs() {\n        const jsons = await this._kvStore.getAll(this._collection);\n        return Object.values(jsons).map((json)=>jsonToIndexStruct(json));\n    }\n}\nclass SimpleIndexStore extends KVIndexStore {\n    constructor(kvStore){\n        kvStore = kvStore || new SimpleKVStore();\n        super(kvStore);\n        this.kvStore = kvStore;\n    }\n    static async fromPersistDir(persistDir = DEFAULT_PERSIST_DIR) {\n        const persistPath = path.join(persistDir, DEFAULT_INDEX_STORE_PERSIST_FILENAME);\n        return this.fromPersistPath(persistPath);\n    }\n    static async fromPersistPath(persistPath) {\n        const simpleKVStore = await SimpleKVStore.fromPersistPath(persistPath);\n        return new SimpleIndexStore(simpleKVStore);\n    }\n    async persist(persistPath = DEFAULT_PERSIST_DIR) {\n        this.kvStore.persist(persistPath);\n    }\n    static fromDict(saveDict) {\n        const simpleKVStore = SimpleKVStore.fromDict(saveDict);\n        return new SimpleIndexStore(simpleKVStore);\n    }\n    toDict() {\n        if (!(this.kvStore instanceof SimpleKVStore)) {\n            throw new Error(\"KVStore is not a SimpleKVStore\");\n        }\n        return this.kvStore.toDict();\n    }\n}\n\nexport { BaseIndexStore, DEFAULT_PERSIST_PATH, KVIndexStore, SimpleIndexStore };\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,uBAAuB,oJAAA,CAAA,OAAI,CAAC,IAAI,CAAC,iKAAA,CAAA,sBAAmB,EAAE,iKAAA,CAAA,uCAAoC;AAChG,MAAM;IACF,MAAM,QAAQ,cAAc,oBAAoB,EAAE;IAClD,mCAAmC;IACnC;AACJ;AACA,MAAM,qBAAqB;IACvB,YAAY,OAAO,EAAE,YAAY,iKAAA,CAAA,oBAAiB,CAAC;QAC/C,KAAK;QACL,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,WAAW,GAAG,GAAG,UAAU,KAAK,CAAC;IAC1C;IACA,MAAM,eAAe,WAAW,EAAE;QAC9B,MAAM,MAAM,YAAY,OAAO;QAC/B,MAAM,OAAO,YAAY,MAAM;QAC/B,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,MAAM,IAAI,CAAC,WAAW;IACvD;IACA,MAAM,kBAAkB,GAAG,EAAE;QACzB,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,WAAW;IACpD;IACA,MAAM,eAAe,QAAQ,EAAE;QAC3B,IAAI,CAAC,UAAU;YACX,MAAM,UAAU,MAAM,IAAI,CAAC,eAAe;YAC1C,IAAI,QAAQ,MAAM,KAAK,GAAG;gBACtB,MAAM,IAAI,MAAM;YACpB;YACA,OAAO,OAAO,CAAC,EAAE;QACrB,OAAO;YACH,MAAM,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,WAAW;YAC/D,IAAI,QAAQ,MAAM;gBACd;YACJ;YACA,OAAO,CAAA,GAAA,0KAAA,CAAA,oBAAiB,AAAD,EAAE;QAC7B;IACJ;IACA,MAAM,kBAAkB;QACpB,MAAM,QAAQ,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW;QACzD,OAAO,OAAO,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAA,GAAA,0KAAA,CAAA,oBAAiB,AAAD,EAAE;IAC9D;AACJ;AACA,MAAM,yBAAyB;IAC3B,YAAY,OAAO,CAAC;QAChB,UAAU,WAAW,IAAI,iLAAA,CAAA,gBAAa;QACtC,KAAK,CAAC;QACN,IAAI,CAAC,OAAO,GAAG;IACnB;IACA,aAAa,eAAe,aAAa,iKAAA,CAAA,sBAAmB,EAAE;QAC1D,MAAM,cAAc,oJAAA,CAAA,OAAI,CAAC,IAAI,CAAC,YAAY,iKAAA,CAAA,uCAAoC;QAC9E,OAAO,IAAI,CAAC,eAAe,CAAC;IAChC;IACA,aAAa,gBAAgB,WAAW,EAAE;QACtC,MAAM,gBAAgB,MAAM,iLAAA,CAAA,gBAAa,CAAC,eAAe,CAAC;QAC1D,OAAO,IAAI,iBAAiB;IAChC;IACA,MAAM,QAAQ,cAAc,iKAAA,CAAA,sBAAmB,EAAE;QAC7C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;IACzB;IACA,OAAO,SAAS,QAAQ,EAAE;QACtB,MAAM,gBAAgB,iLAAA,CAAA,gBAAa,CAAC,QAAQ,CAAC;QAC7C,OAAO,IAAI,iBAAiB;IAChC;IACA,SAAS;QACL,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,YAAY,iLAAA,CAAA,gBAAa,GAAG;YAC1C,MAAM,IAAI,MAAM;QACpB;QACA,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;IAC9B;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7413, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/tools/dist/index.js"],"sourcesContent":["import { z } from 'zod';\nimport { zodToJsonSchema } from 'zod-to-json-schema';\n\nclass FunctionTool {\n    #fn;\n    #additionalArg;\n    #metadata;\n    #zodType;\n    constructor(fn, metadata, zodType, additionalArg){\n        this.#zodType = null;\n        this.bind = (additionalArg)=>{\n            return new FunctionTool(this.#fn, this.#metadata, this.#zodType ?? undefined, additionalArg);\n        };\n        this.call = (input)=>{\n            if (this.#metadata.requireContext) {\n                const inputWithContext = input;\n                if (!inputWithContext.context) {\n                    throw new Error(\"Tool call requires context, but context parameter is missing\");\n                }\n            }\n            if (this.#zodType) {\n                const result = this.#zodType.safeParse(input);\n                if (result.success) {\n                    if (this.#metadata.requireContext) {\n                        const { context } = input;\n                        return this.#fn.call(null, {\n                            context,\n                            ...result.data\n                        }, this.#additionalArg);\n                    } else {\n                        return this.#fn.call(null, result.data, this.#additionalArg);\n                    }\n                } else {\n                    console.warn(result.error.errors);\n                }\n            }\n            return this.#fn.call(null, input, this.#additionalArg);\n        };\n        this.#fn = fn;\n        this.#metadata = metadata;\n        if (zodType) {\n            this.#zodType = zodType;\n        }\n        this.#additionalArg = additionalArg;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static from(fnOrConfig, schema) {\n        // Handle the case where an object with execute function is passed\n        if (typeof schema === \"undefined\" && typeof fnOrConfig === \"object\" && fnOrConfig.execute) {\n            const { execute, parameters, ...restConfig } = fnOrConfig;\n            if (parameters instanceof z.ZodSchema) {\n                const jsonSchema = zodToJsonSchema(parameters);\n                return new FunctionTool(execute, {\n                    ...restConfig,\n                    parameters: jsonSchema\n                }, parameters);\n            }\n            return new FunctionTool(execute, fnOrConfig);\n        }\n        // Handle the original cases\n        if (schema && schema.parameters instanceof z.ZodSchema) {\n            const jsonSchema = zodToJsonSchema(schema.parameters);\n            return new FunctionTool(fnOrConfig, {\n                ...schema,\n                parameters: jsonSchema\n            }, schema.parameters);\n        }\n        return new FunctionTool(fnOrConfig, schema);\n    }\n    get metadata() {\n        return this.#metadata;\n    }\n}\n/**\n * A simpler alias for creating a FunctionTool.\n */ const tool = FunctionTool.from;\n\nexport { FunctionTool, tool };\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;AAEA,MAAM;IACF,CAAA,EAAG,CAAC;IACJ,CAAA,aAAc,CAAC;IACf,CAAA,QAAS,CAAC;IACV,CAAA,OAAQ,CAAC;IACT,YAAY,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,aAAa,CAAC;QAC7C,IAAI,CAAC,CAAA,OAAQ,GAAG;QAChB,IAAI,CAAC,IAAI,GAAG,CAAC;YACT,OAAO,IAAI,aAAa,IAAI,CAAC,CAAA,EAAG,EAAE,IAAI,CAAC,CAAA,QAAS,EAAE,IAAI,CAAC,CAAA,OAAQ,IAAI,WAAW;QAClF;QACA,IAAI,CAAC,IAAI,GAAG,CAAC;YACT,IAAI,IAAI,CAAC,CAAA,QAAS,CAAC,cAAc,EAAE;gBAC/B,MAAM,mBAAmB;gBACzB,IAAI,CAAC,iBAAiB,OAAO,EAAE;oBAC3B,MAAM,IAAI,MAAM;gBACpB;YACJ;YACA,IAAI,IAAI,CAAC,CAAA,OAAQ,EAAE;gBACf,MAAM,SAAS,IAAI,CAAC,CAAA,OAAQ,CAAC,SAAS,CAAC;gBACvC,IAAI,OAAO,OAAO,EAAE;oBAChB,IAAI,IAAI,CAAC,CAAA,QAAS,CAAC,cAAc,EAAE;wBAC/B,MAAM,EAAE,OAAO,EAAE,GAAG;wBACpB,OAAO,IAAI,CAAC,CAAA,EAAG,CAAC,IAAI,CAAC,MAAM;4BACvB;4BACA,GAAG,OAAO,IAAI;wBAClB,GAAG,IAAI,CAAC,CAAA,aAAc;oBAC1B,OAAO;wBACH,OAAO,IAAI,CAAC,CAAA,EAAG,CAAC,IAAI,CAAC,MAAM,OAAO,IAAI,EAAE,IAAI,CAAC,CAAA,aAAc;oBAC/D;gBACJ,OAAO;oBACH,QAAQ,IAAI,CAAC,OAAO,KAAK,CAAC,MAAM;gBACpC;YACJ;YACA,OAAO,IAAI,CAAC,CAAA,EAAG,CAAC,IAAI,CAAC,MAAM,OAAO,IAAI,CAAC,CAAA,aAAc;QACzD;QACA,IAAI,CAAC,CAAA,EAAG,GAAG;QACX,IAAI,CAAC,CAAA,QAAS,GAAG;QACjB,IAAI,SAAS;YACT,IAAI,CAAC,CAAA,OAAQ,GAAG;QACpB;QACA,IAAI,CAAC,CAAA,aAAc,GAAG;IAC1B;IACA,8DAA8D;IAC9D,OAAO,KAAK,UAAU,EAAE,MAAM,EAAE;QAC5B,kEAAkE;QAClE,IAAI,OAAO,WAAW,eAAe,OAAO,eAAe,YAAY,WAAW,OAAO,EAAE;YACvF,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,YAAY,GAAG;YAC/C,IAAI,sBAAsB,sIAAA,CAAA,IAAC,CAAC,SAAS,EAAE;gBACnC,MAAM,aAAa,CAAA,GAAA,+KAAA,CAAA,kBAAe,AAAD,EAAE;gBACnC,OAAO,IAAI,aAAa,SAAS;oBAC7B,GAAG,UAAU;oBACb,YAAY;gBAChB,GAAG;YACP;YACA,OAAO,IAAI,aAAa,SAAS;QACrC;QACA,4BAA4B;QAC5B,IAAI,UAAU,OAAO,UAAU,YAAY,sIAAA,CAAA,IAAC,CAAC,SAAS,EAAE;YACpD,MAAM,aAAa,CAAA,GAAA,+KAAA,CAAA,kBAAe,AAAD,EAAE,OAAO,UAAU;YACpD,OAAO,IAAI,aAAa,YAAY;gBAChC,GAAG,MAAM;gBACT,YAAY;YAChB,GAAG,OAAO,UAAU;QACxB;QACA,OAAO,IAAI,aAAa,YAAY;IACxC;IACA,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,CAAA,QAAS;IACzB;AACJ;AACA;;CAEC,GAAG,MAAM,OAAO,aAAa,IAAI","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7502, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40llamaindex/core/objects/dist/index.js"],"sourcesContent":["import { extractText } from '../../utils/dist/index.js';\n\n// Assuming that necessary interfaces and classes (like OT, TextNode, BaseNode, etc.) are defined elsewhere\n// Import statements (e.g., for TextNode, BaseNode) should be added based on your project's structure\nclass BaseObjectNodeMapping {\n    // Concrete methods can be defined as usual\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    validateObject(obj) {}\n    // Implementing the add object logic\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    addObj(obj) {\n        this.validateObject(obj);\n        this._addObj(obj);\n    }\n    // Implementing toNodes method\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toNodes(objs) {\n        return objs.map((obj)=>this.toNode(obj));\n    }\n    // Implementing fromNode method\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromNode(node) {\n        const obj = this._fromNode(node);\n        this.validateObject(obj);\n        return obj;\n    }\n}\nclass ObjectRetriever {\n    constructor(retriever, objectNodeMapping){\n        this._retriever = retriever;\n        this._objectNodeMapping = objectNodeMapping;\n    }\n    // In TypeScript, getters are defined like this.\n    get retriever() {\n        return this._retriever;\n    }\n    // Translating the retrieve method\n    async retrieve(strOrQueryBundle) {\n        const nodes = await this.retriever.retrieve({\n            query: extractText(strOrQueryBundle)\n        });\n        const objs = nodes.map((n)=>this._objectNodeMapping.fromNode(n.node));\n        return objs;\n    }\n}\n\nexport { BaseObjectNodeMapping, ObjectRetriever };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,2GAA2G;AAC3G,qGAAqG;AACrG,MAAM;IACF,2CAA2C;IAC3C,8DAA8D;IAC9D,eAAe,GAAG,EAAE,CAAC;IACrB,oCAAoC;IACpC,8DAA8D;IAC9D,OAAO,GAAG,EAAE;QACR,IAAI,CAAC,cAAc,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC;IACjB;IACA,8BAA8B;IAC9B,8DAA8D;IAC9D,QAAQ,IAAI,EAAE;QACV,OAAO,KAAK,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC;IACvC;IACA,+BAA+B;IAC/B,8DAA8D;IAC9D,SAAS,IAAI,EAAE;QACX,MAAM,MAAM,IAAI,CAAC,SAAS,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC;QACpB,OAAO;IACX;AACJ;AACA,MAAM;IACF,YAAY,SAAS,EAAE,iBAAiB,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,kBAAkB,GAAG;IAC9B;IACA,gDAAgD;IAChD,IAAI,YAAY;QACZ,OAAO,IAAI,CAAC,UAAU;IAC1B;IACA,kCAAkC;IAClC,MAAM,SAAS,gBAAgB,EAAE;QAC7B,MAAM,QAAQ,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YACxC,OAAO,CAAA,GAAA,gKAAA,CAAA,cAAW,AAAD,EAAE;QACvB;QACA,MAAM,OAAO,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE,IAAI;QACnE,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}}]
}