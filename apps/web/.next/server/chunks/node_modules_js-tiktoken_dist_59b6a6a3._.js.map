{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/js-tiktoken/dist/chunk-Z5MDQTGX.js"],"sourcesContent":["import base64 from 'base64-js';\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/utils.ts\nfunction never(_) {\n}\nfunction bytePairMerge(piece, ranks) {\n  let parts = Array.from(\n    { length: piece.length },\n    (_, i) => ({ start: i, end: i + 1 })\n  );\n  while (parts.length > 1) {\n    let minRank = null;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const slice = piece.slice(parts[i].start, parts[i + 1].end);\n      const rank = ranks.get(slice.join(\",\"));\n      if (rank == null)\n        continue;\n      if (minRank == null || rank < minRank[0]) {\n        minRank = [rank, i];\n      }\n    }\n    if (minRank != null) {\n      const i = minRank[1];\n      parts[i] = { start: parts[i].start, end: parts[i + 1].end };\n      parts.splice(i + 1, 1);\n    } else {\n      break;\n    }\n  }\n  return parts;\n}\nfunction bytePairEncode(piece, ranks) {\n  if (piece.length === 1)\n    return [ranks.get(piece.join(\",\"))];\n  return bytePairMerge(piece, ranks).map((p) => ranks.get(piece.slice(p.start, p.end).join(\",\"))).filter((x) => x != null);\n}\nfunction escapeRegex(str) {\n  return str.replace(/[\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\nvar _Tiktoken = class {\n  /** @internal */\n  specialTokens;\n  /** @internal */\n  inverseSpecialTokens;\n  /** @internal */\n  patStr;\n  /** @internal */\n  textEncoder = new TextEncoder();\n  /** @internal */\n  textDecoder = new TextDecoder(\"utf-8\");\n  /** @internal */\n  rankMap = /* @__PURE__ */ new Map();\n  /** @internal */\n  textMap = /* @__PURE__ */ new Map();\n  constructor(ranks, extendedSpecialTokens) {\n    this.patStr = ranks.pat_str;\n    const uncompressed = ranks.bpe_ranks.split(\"\\n\").filter(Boolean).reduce((memo, x) => {\n      const [_, offsetStr, ...tokens] = x.split(\" \");\n      const offset = Number.parseInt(offsetStr, 10);\n      tokens.forEach((token, i) => memo[token] = offset + i);\n      return memo;\n    }, {});\n    for (const [token, rank] of Object.entries(uncompressed)) {\n      const bytes = base64.toByteArray(token);\n      this.rankMap.set(bytes.join(\",\"), rank);\n      this.textMap.set(rank, bytes);\n    }\n    this.specialTokens = { ...ranks.special_tokens, ...extendedSpecialTokens };\n    this.inverseSpecialTokens = Object.entries(this.specialTokens).reduce((memo, [text, rank]) => {\n      memo[rank] = this.textEncoder.encode(text);\n      return memo;\n    }, {});\n  }\n  encode(text, allowedSpecial = [], disallowedSpecial = \"all\") {\n    const regexes = new RegExp(this.patStr, \"ug\");\n    const specialRegex = _Tiktoken.specialTokenRegex(\n      Object.keys(this.specialTokens)\n    );\n    const ret = [];\n    const allowedSpecialSet = new Set(\n      allowedSpecial === \"all\" ? Object.keys(this.specialTokens) : allowedSpecial\n    );\n    const disallowedSpecialSet = new Set(\n      disallowedSpecial === \"all\" ? Object.keys(this.specialTokens).filter(\n        (x) => !allowedSpecialSet.has(x)\n      ) : disallowedSpecial\n    );\n    if (disallowedSpecialSet.size > 0) {\n      const disallowedSpecialRegex = _Tiktoken.specialTokenRegex([\n        ...disallowedSpecialSet\n      ]);\n      const specialMatch = text.match(disallowedSpecialRegex);\n      if (specialMatch != null) {\n        throw new Error(\n          `The text contains a special token that is not allowed: ${specialMatch[0]}`\n        );\n      }\n    }\n    let start = 0;\n    while (true) {\n      let nextSpecial = null;\n      let startFind = start;\n      while (true) {\n        specialRegex.lastIndex = startFind;\n        nextSpecial = specialRegex.exec(text);\n        if (nextSpecial == null || allowedSpecialSet.has(nextSpecial[0]))\n          break;\n        startFind = nextSpecial.index + 1;\n      }\n      const end = nextSpecial?.index ?? text.length;\n      for (const match of text.substring(start, end).matchAll(regexes)) {\n        const piece = this.textEncoder.encode(match[0]);\n        const token2 = this.rankMap.get(piece.join(\",\"));\n        if (token2 != null) {\n          ret.push(token2);\n          continue;\n        }\n        ret.push(...bytePairEncode(piece, this.rankMap));\n      }\n      if (nextSpecial == null)\n        break;\n      let token = this.specialTokens[nextSpecial[0]];\n      ret.push(token);\n      start = nextSpecial.index + nextSpecial[0].length;\n    }\n    return ret;\n  }\n  decode(tokens) {\n    const res = [];\n    let length = 0;\n    for (let i2 = 0; i2 < tokens.length; ++i2) {\n      const token = tokens[i2];\n      const bytes = this.textMap.get(token) ?? this.inverseSpecialTokens[token];\n      if (bytes != null) {\n        res.push(bytes);\n        length += bytes.length;\n      }\n    }\n    const mergedArray = new Uint8Array(length);\n    let i = 0;\n    for (const bytes of res) {\n      mergedArray.set(bytes, i);\n      i += bytes.length;\n    }\n    return this.textDecoder.decode(mergedArray);\n  }\n};\nvar Tiktoken = _Tiktoken;\n__publicField(Tiktoken, \"specialTokenRegex\", (tokens) => {\n  return new RegExp(tokens.map((i) => escapeRegex(i)).join(\"|\"), \"g\");\n});\nfunction getEncodingNameForModel(model) {\n  switch (model) {\n    case \"gpt2\": {\n      return \"gpt2\";\n    }\n    case \"code-cushman-001\":\n    case \"code-cushman-002\":\n    case \"code-davinci-001\":\n    case \"code-davinci-002\":\n    case \"cushman-codex\":\n    case \"davinci-codex\":\n    case \"davinci-002\":\n    case \"text-davinci-002\":\n    case \"text-davinci-003\": {\n      return \"p50k_base\";\n    }\n    case \"code-davinci-edit-001\":\n    case \"text-davinci-edit-001\": {\n      return \"p50k_edit\";\n    }\n    case \"ada\":\n    case \"babbage\":\n    case \"babbage-002\":\n    case \"code-search-ada-code-001\":\n    case \"code-search-babbage-code-001\":\n    case \"curie\":\n    case \"davinci\":\n    case \"text-ada-001\":\n    case \"text-babbage-001\":\n    case \"text-curie-001\":\n    case \"text-davinci-001\":\n    case \"text-search-ada-doc-001\":\n    case \"text-search-babbage-doc-001\":\n    case \"text-search-curie-doc-001\":\n    case \"text-search-davinci-doc-001\":\n    case \"text-similarity-ada-001\":\n    case \"text-similarity-babbage-001\":\n    case \"text-similarity-curie-001\":\n    case \"text-similarity-davinci-001\": {\n      return \"r50k_base\";\n    }\n    case \"gpt-3.5-turbo-instruct-0914\":\n    case \"gpt-3.5-turbo-instruct\":\n    case \"gpt-3.5-turbo-16k-0613\":\n    case \"gpt-3.5-turbo-16k\":\n    case \"gpt-3.5-turbo-0613\":\n    case \"gpt-3.5-turbo-0301\":\n    case \"gpt-3.5-turbo\":\n    case \"gpt-4-32k-0613\":\n    case \"gpt-4-32k-0314\":\n    case \"gpt-4-32k\":\n    case \"gpt-4-0613\":\n    case \"gpt-4-0314\":\n    case \"gpt-4\":\n    case \"gpt-3.5-turbo-1106\":\n    case \"gpt-35-turbo\":\n    case \"gpt-4-1106-preview\":\n    case \"gpt-4-vision-preview\":\n    case \"gpt-3.5-turbo-0125\":\n    case \"gpt-4-turbo\":\n    case \"gpt-4-turbo-2024-04-09\":\n    case \"gpt-4-turbo-preview\":\n    case \"gpt-4-0125-preview\":\n    case \"text-embedding-ada-002\":\n    case \"text-embedding-3-small\":\n    case \"text-embedding-3-large\": {\n      return \"cl100k_base\";\n    }\n    case \"gpt-4o\":\n    case \"gpt-4o-2024-05-13\":\n    case \"gpt-4o-2024-08-06\":\n    case \"gpt-4o-2024-11-20\":\n    case \"gpt-4o-mini-2024-07-18\":\n    case \"gpt-4o-mini\":\n    case \"o1\":\n    case \"o1-2024-12-17\":\n    case \"o1-mini\":\n    case \"o1-preview\":\n    case \"o1-preview-2024-09-12\":\n    case \"o1-mini-2024-09-12\":\n    case \"o3-mini\":\n    case \"o3-mini-2025-01-31\":\n    case \"chatgpt-4o-latest\":\n    case \"gpt-4o-realtime\":\n    case \"gpt-4o-realtime-preview-2024-10-01\": {\n      return \"o200k_base\";\n    }\n    default:\n      throw new Error(\"Unknown model\");\n  }\n}\n\nexport { Tiktoken, getEncodingNameForModel, never };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}