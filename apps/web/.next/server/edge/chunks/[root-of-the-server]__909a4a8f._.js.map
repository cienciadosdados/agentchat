{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/web/src/env.ts"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\nexport const env = createEnv({\n  shared: {\n    NODE_ENV: z\n      .enum([\"development\", \"test\", \"production\"])\n      .default(\"development\"),\n    NEXT_PUBLIC_APP_NAME: z.string().optional().default(\"Agentset\"),\n    NEXT_PUBLIC_APP_SHORT_DOMAIN: z.string().optional().default(\"agentset.ai\"),\n\n    NEXT_PUBLIC_VERCEL_ENV: z\n      .enum([\"development\", \"preview\", \"production\"])\n      .optional()\n      .default(\"development\"),\n  },\n  server: {\n    DATABASE_URL: z.string().url(),\n    SUPABASE_URL: z.string().url().optional(),\n    SUPABASE_ANON_KEY: z.string().optional(),\n\n    RESEND_API_KEY: z.string().optional().default(\"not_configured\"),\n\n    BETTER_AUTH_SECRET: z.string(),\n    BETTER_AUTH_URL: z.string().url(),\n\n    QSTASH_URL: z.string().url().optional().default(\"https://qstash.upstash.io\"),\n    QSTASH_TOKEN: z.string().optional().default(\"not_configured\"),\n    QSTASH_CURRENT_SIGNING_KEY: z.string().optional().default(\"not_configured\"),\n    QSTASH_NEXT_SIGNING_KEY: z.string().optional().default(\"not_configured\"),\n\n    DEFAULT_OPENAI_API_KEY: z.string().optional().default(\"not_configured\"),\n    DEFAULT_OPENAI_MODEL: z.string().optional().default(\"gpt-4\"),\n    DEFAULT_OPENAI_EMBEDDING_MODEL: z.string().optional().default(\"text-embedding-3-large\"),\n\n    DEFAULT_PINECONE_API_KEY: z.string().optional().default(\"not_configured\"),\n    DEFAULT_PINECONE_HOST: z.string().optional().default(\"not_configured\"),\n\n    SECONDARY_PINECONE_API_KEY: z.string().optional(),\n    SECONDARY_PINECONE_HOST: z.string().url().optional(),\n\n    GITHUB_CLIENT_ID: z.string().optional().default(\"not_configured\"),\n    GITHUB_CLIENT_SECRET: z.string().optional().default(\"not_configured\"),\n\n    GOOGLE_CLIENT_ID: z.string().optional().default(\"not_configured\"),\n    GOOGLE_CLIENT_SECRET: z.string().optional().default(\"not_configured\"),\n\n    PARTITION_API_KEY: z.string().optional().default(\"not_configured\"),\n    PARTITION_API_URL: z.string().url().optional().default(\"https://api.unstructuredapp.io\"),\n\n    DEFAULT_COHERE_API_KEY: z.string().optional().default(\"not_configured\"),\n\n    UPLOADTHING_TOKEN: z.string().optional().default(\"not_configured\"),\n    UPLOADTHING_APP_ID: z.string().optional().default(\"not_configured\"),\n\n    ASSETS_UPLOADTHING_TOKEN: z.string().optional().default(\"not_configured\"),\n    ASSETS_UPLOADTHING_APP_ID: z.string().optional().default(\"not_configured\"),\n    ASSETS_UPLOADTHING_URL: z.string().url().optional().default(\"https://utfs.io/f/\"),\n\n    REDIS_URL: z.string().optional().default(\"not_configured\"),\n    REDIS_TOKEN: z.string().optional().default(\"not_configured\"),\n\n    STRIPE_API_KEY: z.string().optional().default(\"not_configured\"),\n    STRIPE_WEBHOOK_SECRET: z.string().optional().default(\"not_configured\"),\n\n    DISCORD_HOOK_ALERTS: z.string().url().optional(),\n    DISCORD_HOOK_CRON: z.string().url().optional(),\n    DISCORD_HOOK_SUBSCRIBERS: z.string().url().optional(),\n    DISCORD_HOOK_ERRORS: z.string().url().optional(),\n\n    VERCEL_PROJECT_ID: z.string().optional().default(\"not_configured\"),\n    VERCEL_TEAM_ID: z.string().optional().default(\"not_configured\"),\n    VERCEL_API_TOKEN: z.string().optional().default(\"not_configured\"),\n  },\n  client: {\n    NEXT_PUBLIC_STRIPE_PUBLIC_KEY: z.string().optional().default(\"not_configured\"),\n  },\n  runtimeEnv: {\n    NEXT_PUBLIC_APP_NAME: process.env.NEXT_PUBLIC_APP_NAME,\n    NEXT_PUBLIC_APP_SHORT_DOMAIN: process.env.NEXT_PUBLIC_APP_SHORT_DOMAIN,\n    NEXT_PUBLIC_VERCEL_ENV: process.env.NEXT_PUBLIC_VERCEL_ENV,\n\n    DATABASE_URL: process.env.DATABASE_URL,\n    SUPABASE_URL: process.env.SUPABASE_URL,\n    SUPABASE_ANON_KEY: process.env.SUPABASE_ANON_KEY,\n\n    NODE_ENV: process.env.NODE_ENV,\n    RESEND_API_KEY: process.env.RESEND_API_KEY,\n\n    BETTER_AUTH_SECRET: process.env.BETTER_AUTH_SECRET,\n    BETTER_AUTH_URL: process.env.BETTER_AUTH_URL,\n\n    QSTASH_URL: process.env.QSTASH_URL,\n    QSTASH_TOKEN: process.env.QSTASH_TOKEN,\n    QSTASH_CURRENT_SIGNING_KEY: process.env.QSTASH_CURRENT_SIGNING_KEY,\n    QSTASH_NEXT_SIGNING_KEY: process.env.QSTASH_NEXT_SIGNING_KEY,\n\n    DEFAULT_OPENAI_API_KEY: process.env.DEFAULT_OPENAI_API_KEY,\n    DEFAULT_OPENAI_MODEL: process.env.DEFAULT_OPENAI_MODEL,\n    DEFAULT_OPENAI_EMBEDDING_MODEL: process.env.DEFAULT_OPENAI_EMBEDDING_MODEL,\n\n    DEFAULT_PINECONE_API_KEY: process.env.DEFAULT_PINECONE_API_KEY,\n    DEFAULT_PINECONE_HOST: process.env.DEFAULT_PINECONE_HOST,\n\n    SECONDARY_PINECONE_API_KEY: process.env.SECONDARY_PINECONE_API_KEY,\n    SECONDARY_PINECONE_HOST: process.env.SECONDARY_PINECONE_HOST,\n\n    GITHUB_CLIENT_ID: process.env.GITHUB_CLIENT_ID,\n    GITHUB_CLIENT_SECRET: process.env.GITHUB_CLIENT_SECRET,\n\n    GOOGLE_CLIENT_ID: process.env.GOOGLE_CLIENT_ID,\n    GOOGLE_CLIENT_SECRET: process.env.GOOGLE_CLIENT_SECRET,\n\n    PARTITION_API_KEY: process.env.PARTITION_API_KEY,\n    PARTITION_API_URL: process.env.PARTITION_API_URL,\n\n    DEFAULT_COHERE_API_KEY: process.env.DEFAULT_COHERE_API_KEY,\n\n    UPLOADTHING_TOKEN: process.env.UPLOADTHING_TOKEN,\n    UPLOADTHING_APP_ID: process.env.UPLOADTHING_APP_ID,\n\n    ASSETS_UPLOADTHING_TOKEN: process.env.ASSETS_UPLOADTHING_TOKEN,\n    ASSETS_UPLOADTHING_APP_ID: process.env.ASSETS_UPLOADTHING_APP_ID,\n    ASSETS_UPLOADTHING_URL: process.env.ASSETS_UPLOADTHING_URL,\n\n    REDIS_URL: process.env.REDIS_URL,\n    REDIS_TOKEN: process.env.REDIS_TOKEN,\n\n    STRIPE_API_KEY: process.env.STRIPE_API_KEY,\n    STRIPE_WEBHOOK_SECRET: process.env.STRIPE_WEBHOOK_SECRET,\n    NEXT_PUBLIC_STRIPE_PUBLIC_KEY: process.env.NEXT_PUBLIC_STRIPE_PUBLIC_KEY,\n\n    DISCORD_HOOK_ALERTS: process.env.DISCORD_HOOK_ALERTS,\n    DISCORD_HOOK_CRON: process.env.DISCORD_HOOK_CRON,\n    DISCORD_HOOK_SUBSCRIBERS: process.env.DISCORD_HOOK_SUBSCRIBERS,\n    DISCORD_HOOK_ERRORS: process.env.DISCORD_HOOK_ERRORS,\n\n    VERCEL_PROJECT_ID: process.env.VERCEL_PROJECT_ID,\n    VERCEL_TEAM_ID: process.env.VERCEL_TEAM_ID,\n    VERCEL_API_TOKEN: process.env.VERCEL_API_TOKEN,\n  },\n  skipValidation: !!process.env.SKIP_ENV_VALIDATION,\n  emptyStringAsUndefined: true,\n});\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/web/src/lib/constants.ts"],"sourcesContent":["import { env } from \"@/env\";\r\n\r\nexport const INFINITY_NUMBER = 1000000000;\r\n\r\nexport const APP_NAME = env.NEXT_PUBLIC_APP_NAME;\r\nexport const SHORT_DOMAIN = env.NEXT_PUBLIC_APP_SHORT_DOMAIN;\r\n\r\nconst localHost = `localhost:${process.env.PORT ?? 3000}`;\r\nexport const APP_HOSTNAMES = new Set([\r\n  `app.${SHORT_DOMAIN}`,\r\n  `preview.${SHORT_DOMAIN}`,\r\n  localHost,\r\n]);\r\n\r\nexport const APP_DOMAIN =\r\n  env.NEXT_PUBLIC_VERCEL_ENV === \"production\"\r\n    ? `https://app.${SHORT_DOMAIN}`\r\n    : env.NEXT_PUBLIC_VERCEL_ENV === \"preview\"\r\n      ? `https://preview.${SHORT_DOMAIN}`\r\n      : `http://${localHost}`;\r\n\r\nexport const API_HOSTNAMES = new Set([\r\n  `api.${SHORT_DOMAIN}`,\r\n  `api-staging.${SHORT_DOMAIN}`,\r\n  `api.${localHost}`,\r\n]);\r\n\r\nexport const API_DOMAIN =\r\n  env.NEXT_PUBLIC_VERCEL_ENV === \"production\"\r\n    ? `https://api.${SHORT_DOMAIN}`\r\n    : env.NEXT_PUBLIC_VERCEL_ENV === \"preview\"\r\n      ? `https://api-staging.${SHORT_DOMAIN}`\r\n      : `http://api.${localHost}`;\r\n\r\n// for hosting\r\nexport const HOSTING_PREFIX = \"/a/\";\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAEO,MAAM,kBAAkB;AAExB,MAAM,WAAW,iIAAA,CAAA,MAAG,CAAC,oBAAoB;AACzC,MAAM,eAAe,iIAAA,CAAA,MAAG,CAAC,4BAA4B;AAE5D,MAAM,YAAY,CAAC,UAAU,EAAE,QAAQ,GAAG,CAAC,IAAI,IAAI,MAAM;AAClD,MAAM,gBAAgB,IAAI,IAAI;IACnC,CAAC,IAAI,EAAE,cAAc;IACrB,CAAC,QAAQ,EAAE,cAAc;IACzB;CACD;AAEM,MAAM,aACX,iIAAA,CAAA,MAAG,CAAC,sBAAsB,KAAK,eAC3B,CAAC,YAAY,EAAE,cAAc,GAC7B,iIAAA,CAAA,MAAG,CAAC,sBAAsB,KAAK,YAC7B,CAAC,gBAAgB,EAAE,cAAc,GACjC,CAAC,OAAO,EAAE,WAAW;AAEtB,MAAM,gBAAgB,IAAI,IAAI;IACnC,CAAC,IAAI,EAAE,cAAc;IACrB,CAAC,YAAY,EAAE,cAAc;IAC7B,CAAC,IAAI,EAAE,WAAW;CACnB;AAEM,MAAM,aACX,iIAAA,CAAA,MAAG,CAAC,sBAAsB,KAAK,eAC3B,CAAC,YAAY,EAAE,cAAc,GAC7B,iIAAA,CAAA,MAAG,CAAC,sBAAsB,KAAK,YAC7B,CAAC,oBAAoB,EAAE,cAAc,GACrC,CAAC,WAAW,EAAE,WAAW;AAG1B,MAAM,iBAAiB"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/web/src/lib/middleware/utils.ts"],"sourcesContent":["import type { NextRequest } from \"next/server\";\r\n\r\nimport { SHORT_DOMAIN } from \"../constants\";\r\n\r\n// import { SHORT_DOMAIN } from \"@/lib/constants\";\r\n\r\nexport const parse = (req: NextRequest) => {\r\n  let domain = req.headers.get(\"host\") as string;\r\n  // path is the path of the URL (e.g. agentset.ai/stats/github -> /stats/github)\r\n  const path = req.nextUrl.pathname;\r\n\r\n  // remove www. from domain and convert to lowercase\r\n  domain = domain.replace(/^www./, \"\").toLowerCase();\r\n\r\n  // if (domain === \"agentset.localhost:8888\" || domain.endsWith(\".vercel.app\")) {\r\n  if (domain.endsWith(\".vercel.app\")) {\r\n    // for local development and preview URLs\r\n    domain = SHORT_DOMAIN;\r\n  }\r\n\r\n  // fullPath is the full URL path (along with search params)\r\n  const searchParams = req.nextUrl.searchParams.toString();\r\n  const searchParamsObj = Object.fromEntries(req.nextUrl.searchParams);\r\n  const searchParamsString = searchParams.length > 0 ? `?${searchParams}` : \"\";\r\n  const fullPath = `${path}${searchParamsString}`;\r\n\r\n  // Here, we are using decodeURIComponent to handle foreign languages like Hebrew\r\n  const key = decodeURIComponent(path.split(\"/\")[1]!); // key is the first part of the path (e.g. agentset.ai/stats/github -> stats)\r\n  const fullKey = decodeURIComponent(path.slice(1)); // fullKey is the full path without the first slash (to account for multi-level subpaths, e.g. d.to/github/repo -> github/repo)\r\n\r\n  return {\r\n    domain,\r\n    path,\r\n    fullPath,\r\n    key,\r\n    fullKey,\r\n    searchParamsObj,\r\n    searchParamsString,\r\n  };\r\n};\r\n"],"names":[],"mappings":";;;AAEA;;AAIO,MAAM,QAAQ,CAAC;IACpB,IAAI,SAAS,IAAI,OAAO,CAAC,GAAG,CAAC;IAC7B,+EAA+E;IAC/E,MAAM,OAAO,IAAI,OAAO,CAAC,QAAQ;IAEjC,mDAAmD;IACnD,SAAS,OAAO,OAAO,CAAC,SAAS,IAAI,WAAW;IAEhD,gFAAgF;IAChF,IAAI,OAAO,QAAQ,CAAC,gBAAgB;QAClC,yCAAyC;QACzC,SAAS,8IAAA,CAAA,eAAY;IACvB;IAEA,2DAA2D;IAC3D,MAAM,eAAe,IAAI,OAAO,CAAC,YAAY,CAAC,QAAQ;IACtD,MAAM,kBAAkB,OAAO,WAAW,CAAC,IAAI,OAAO,CAAC,YAAY;IACnE,MAAM,qBAAqB,aAAa,MAAM,GAAG,IAAI,CAAC,CAAC,EAAE,cAAc,GAAG;IAC1E,MAAM,WAAW,GAAG,OAAO,oBAAoB;IAE/C,gFAAgF;IAChF,MAAM,MAAM,mBAAmB,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAI,6EAA6E;IAClI,MAAM,UAAU,mBAAmB,KAAK,KAAK,CAAC,KAAK,+HAA+H;IAElL,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF"}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/web/src/lib/middleware/api.ts"],"sourcesContent":["import type { NextRequest } from \"next/server\";\r\nimport { NextResponse } from \"next/server\";\r\nimport { parse } from \"@/lib/middleware/utils\";\r\n\r\nexport default function ApiMiddleware(req: NextRequest) {\r\n  const { fullPath } = parse(req);\r\n\r\n  // Note: we don't have to account for paths starting with `/api`\r\n  // since they're automatically excluded via our middleware matcher\r\n  return NextResponse.rewrite(new URL(`/api${fullPath}`, req.url));\r\n}\r\n"],"names":[],"mappings":";;;AACA;AAAA;AACA;;;AAEe,SAAS,cAAc,GAAgB;IACpD,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,wJAAA,CAAA,QAAK,AAAD,EAAE;IAE3B,gEAAgE;IAChE,kEAAkE;IAClE,OAAO,6LAAA,CAAA,eAAY,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,GAAG;AAChE"}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/packages/db/src/client.ts"],"sourcesContent":["import { neonConfig } from \"@neondatabase/serverless\";\r\nimport { PrismaNeon } from \"@prisma/adapter-neon\";\r\nimport { PrismaClient } from \"@prisma/client\";\r\n\r\nconst createPrismaClient = () => {\r\n  // Supabase pooled connection string (must use Supavisor)\r\n  const connectionString = process.env.DATABASE_URL ?? \"\";\r\n\r\n  if (connectionString.includes(\"@localhost\")) {\r\n    // Disable SSL for local connections\r\n    neonConfig.useSecureWebSocket = false;\r\n    // WebSocket proxy is hosted on `4000` locally, so add port. Does not work in production.\r\n    neonConfig.wsProxy = (host) => `${host}:4000/v2`;\r\n  }\r\n\r\n  // Only Neon hosts support this -- non-deterministic errors otherwise\r\n  neonConfig.pipelineConnect = false;\r\n\r\n  // So it can also work in Node.js\r\n  neonConfig.webSocketConstructor = WebSocket;\r\n\r\n  const adapter = new PrismaNeon({ connectionString });\r\n  return new PrismaClient({\r\n    adapter,\r\n    log:\r\n      process.env.NODE_ENV === \"development\"\r\n        ? [\"query\", \"error\", \"warn\"]\r\n        : [\"error\"],\r\n  });\r\n};\r\n\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma: ReturnType<typeof createPrismaClient> | undefined;\r\n};\r\n\r\nexport const db = globalForPrisma.prisma ?? createPrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = db;\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,qBAAqB;IACzB,yDAAyD;IACzD,MAAM,mBAAmB,QAAQ,GAAG,CAAC,YAAY,IAAI;IAErD,IAAI,iBAAiB,QAAQ,CAAC,eAAe;QAC3C,oCAAoC;QACpC,8JAAA,CAAA,aAAU,CAAC,kBAAkB,GAAG;QAChC,yFAAyF;QACzF,8JAAA,CAAA,aAAU,CAAC,OAAO,GAAG,CAAC,OAAS,GAAG,KAAK,QAAQ,CAAC;IAClD;IAEA,qEAAqE;IACrE,8JAAA,CAAA,aAAU,CAAC,eAAe,GAAG;IAE7B,iCAAiC;IACjC,8JAAA,CAAA,aAAU,CAAC,oBAAoB,GAAG;IAElC,MAAM,UAAU,IAAI,qKAAA,CAAA,aAAU,CAAC;QAAE;IAAiB;IAClD,OAAO,IAAI,qJAAA,CAAA,eAAY,CAAC;QACtB;QACA,KACE,uCACI;YAAC;YAAS;YAAS;SAAO;IAElC;AACF;AAEA,MAAM,kBAAkB;AAIjB,MAAM,KAAK,gBAAgB,MAAM,IAAI;AAE5C,wCAA2C,gBAAgB,MAAM,GAAG"}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/packages/db/src/types/prisma.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-namespace */\r\nimport type {\r\n  DocumentPayload as _DocumentPayload,\r\n  DocumentProperties as _DocumentProperties,\r\n  IngestJobConfig as _IngestJobConfig,\r\n  IngestJobPayload as _IngestJobPayload,\r\n  EmbeddingConfig,\r\n  VectorStoreConfig,\r\n} from \"@agentset/validation\";\r\n\r\ntype OpenAILanguageModel = \"gpt-4o\" | \"gpt-4o-mini\";\r\n\r\nexport type LLMConfig =\r\n  | {\r\n      provider: \"OPENAI\";\r\n      model: OpenAILanguageModel;\r\n      apiKey: string;\r\n    }\r\n  | {\r\n      provider: \"AZURE_OPENAI\";\r\n      model: OpenAILanguageModel;\r\n      baseUrl: string;\r\n      deployment: string;\r\n      apiKey: string;\r\n      apiVersion?: string;\r\n    };\r\n\r\ndeclare global {\r\n  export namespace PrismaJson {\r\n    type ConnectionConfig = {\r\n      authType: \"OAUTH2\";\r\n      credentials: {\r\n        accessToken: string;\r\n        refreshToken: string | null;\r\n      };\r\n    };\r\n\r\n    type IngestJobPayload = _IngestJobPayload;\r\n    type IngestJobConfig = _IngestJobConfig;\r\n    type NamespaceVectorStoreConfig = VectorStoreConfig;\r\n\r\n    type NamespaceFileStoreConfig = {\r\n      provider: \"S3\";\r\n      bucket: string;\r\n      accessKeyId: string;\r\n      secretAccessKey: string;\r\n      endpoint: string;\r\n      region: string;\r\n      prefix?: string;\r\n    };\r\n\r\n    type NamespaceEmbeddingConfig = EmbeddingConfig;\r\n    type NamespaceLLMConfig = LLMConfig;\r\n    type DocumentProperties = _DocumentProperties;\r\n\r\n    type DocumentSource = _DocumentPayload;\r\n    type DocumentMetadata = Record<string, unknown>;\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,kDAAkD"}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/packages/db/src/index.ts"],"sourcesContent":["export { db } from \"./client\";\r\nexport * from \"@prisma/client\";\r\n\r\nexport * from \"./types/prisma\";\r\n"],"names":[],"mappings":";AAAA;AAGA"}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/web/src/lib/middleware/get-session.ts"],"sourcesContent":["import type { NextRequest } from \"next/server\";\r\n\r\nimport type { Session } from \"../auth-types\";\r\n\r\nexport const getMiddlewareSession = async (req: NextRequest) => {\r\n  const url = `${req.nextUrl.origin}/api/auth/get-session`;\r\n\r\n  const response = await fetch(url, {\r\n    headers: {\r\n      cookie: req.headers.get(\"cookie\") ?? \"\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const data = (await response.json()) as Session | null;\r\n    return data;\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;AAIO,MAAM,uBAAuB,OAAO;IACzC,MAAM,MAAM,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,qBAAqB,CAAC;IAExD,MAAM,WAAW,MAAM,MAAM,KAAK;QAChC,SAAS;YACP,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa;YACrC,gBAAgB;QAClB;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,OAAO;IACT;IAEA,IAAI;QACF,MAAM,OAAQ,MAAM,SAAS,IAAI;QACjC,OAAO;IACT,EAAE,OAAM;QACN,OAAO;IACT;AACF"}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/web/src/lib/middleware/hosting.ts"],"sourcesContent":["import type { NextRequest } from \"next/server\";\r\nimport { NextResponse } from \"next/server\";\r\nimport { parse } from \"@/lib/middleware/utils\";\r\n\r\nimport type { Prisma } from \"@agentset/db\";\r\nimport { db } from \"@agentset/db\";\r\n\r\nimport { HOSTING_PREFIX } from \"../constants\";\r\nimport { getMiddlewareSession } from \"./get-session\";\r\n\r\nexport default async function HostingMiddleware(\r\n  req: NextRequest,\r\n  mode: \"domain\" | \"path\" = \"domain\",\r\n) {\r\n  const { domain, path, fullPath: _fullPath } = parse(req);\r\n\r\n  let filter: Prisma.HostingWhereInput = {};\r\n  let fullPath = _fullPath;\r\n  if (mode === \"domain\") {\r\n    filter = {\r\n      domain: {\r\n        slug: domain,\r\n      },\r\n    };\r\n  } else {\r\n    // fullPath will looks like this: /a/my-slug/...\r\n    // we need to get the slug and the rest of the path\r\n    const slug = path.replace(HOSTING_PREFIX, \"\").split(\"/\")[0];\r\n    fullPath = fullPath.replace(`${HOSTING_PREFIX}${slug}`, \"\");\r\n    if (fullPath === \"\") fullPath = \"/\";\r\n\r\n    filter = {\r\n      slug,\r\n    };\r\n  }\r\n\r\n  const hosting = await db.hosting.findFirst({\r\n    where: filter,\r\n    select: {\r\n      id: true,\r\n      slug: true,\r\n      protected: true,\r\n      allowedEmailDomains: true,\r\n      allowedEmails: true,\r\n      namespaceId: true,\r\n    },\r\n  });\r\n\r\n  // 404\r\n  if (!hosting) {\r\n    return NextResponse.error();\r\n  }\r\n\r\n  if (fullPath === \"/login\") {\r\n    const homeUrl = new URL(\r\n      mode === \"domain\" ? \"/\" : `${HOSTING_PREFIX}${hosting.slug}`,\r\n      req.url,\r\n    );\r\n\r\n    // if the domain is not protected and the path is /login, redirect to /\r\n    if (!hosting.protected) return NextResponse.redirect(homeUrl);\r\n\r\n    const session = await getMiddlewareSession(req);\r\n    if (session) {\r\n      return NextResponse.redirect(homeUrl);\r\n    }\r\n\r\n    return NextResponse.rewrite(new URL(`/${hosting.id}${fullPath}`, req.url));\r\n  }\r\n\r\n  if (hosting.protected) {\r\n    const session = await getMiddlewareSession(req);\r\n\r\n    // if not session, redirect to login\r\n    if (!session) {\r\n      const loginUrl = new URL(\r\n        `/login${mode === \"path\" ? `?r=${encodeURIComponent(`${HOSTING_PREFIX}${hosting.slug}`)}` : \"\"}`,\r\n        req.url,\r\n      );\r\n      return NextResponse.redirect(loginUrl);\r\n    }\r\n\r\n    // if user is not allowed to access this domain, error\r\n    const email = session.user.email;\r\n    const emailDomain = email.split(\"@\")[1] ?? \"\";\r\n    const allowedEmailDomains = hosting.allowedEmailDomains;\r\n    const allowedEmails = hosting.allowedEmails;\r\n\r\n    if (\r\n      !allowedEmails.includes(email) &&\r\n      !allowedEmailDomains.includes(emailDomain)\r\n    ) {\r\n      // check if they're members\r\n      const member = await db.member.findFirst({\r\n        where: {\r\n          userId: session.user.id,\r\n          organization: {\r\n            namespaces: {\r\n              some: {\r\n                id: hosting.namespaceId,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        select: {\r\n          id: true,\r\n        },\r\n      });\r\n\r\n      // if they're not a member, rewrite to not-allowed\r\n      if (!member) {\r\n        return NextResponse.rewrite(\r\n          new URL(`/${hosting.id}/not-allowed`, req.url),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // rewrite to the custom domain\r\n  return NextResponse.rewrite(new URL(`/${hosting.id}${fullPath}`, req.url));\r\n}\r\n"],"names":[],"mappings":";;;AACA;AAAA;AACA;AAGA;AAAA;AAEA;AACA;;;;;;AAEe,eAAe,kBAC5B,GAAgB,EAChB,OAA0B,QAAQ;IAElC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,SAAS,EAAE,GAAG,CAAA,GAAA,wJAAA,CAAA,QAAK,AAAD,EAAE;IAEpD,IAAI,SAAmC,CAAC;IACxC,IAAI,WAAW;IACf,IAAI,SAAS,UAAU;QACrB,SAAS;YACP,QAAQ;gBACN,MAAM;YACR;QACF;IACF,OAAO;QACL,gDAAgD;QAChD,mDAAmD;QACnD,MAAM,OAAO,KAAK,OAAO,CAAC,8IAAA,CAAA,iBAAc,EAAE,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;QAC3D,WAAW,SAAS,OAAO,CAAC,GAAG,8IAAA,CAAA,iBAAc,GAAG,MAAM,EAAE;QACxD,IAAI,aAAa,IAAI,WAAW;QAEhC,SAAS;YACP;QACF;IACF;IAEA,MAAM,UAAU,MAAM,uIAAA,CAAA,KAAE,CAAC,OAAO,CAAC,SAAS,CAAC;QACzC,OAAO;QACP,QAAQ;YACN,IAAI;YACJ,MAAM;YACN,WAAW;YACX,qBAAqB;YACrB,eAAe;YACf,aAAa;QACf;IACF;IAEA,MAAM;IACN,IAAI,CAAC,SAAS;QACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,KAAK;IAC3B;IAEA,IAAI,aAAa,UAAU;QACzB,MAAM,UAAU,IAAI,IAClB,SAAS,WAAW,MAAM,GAAG,8IAAA,CAAA,iBAAc,GAAG,QAAQ,IAAI,EAAE,EAC5D,IAAI,GAAG;QAGT,uEAAuE;QACvE,IAAI,CAAC,QAAQ,SAAS,EAAE,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAErD,MAAM,UAAU,MAAM,CAAA,GAAA,iKAAA,CAAA,uBAAoB,AAAD,EAAE;QAC3C,IAAI,SAAS;YACX,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAC/B;QAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,UAAU,EAAE,IAAI,GAAG;IAC1E;IAEA,IAAI,QAAQ,SAAS,EAAE;QACrB,MAAM,UAAU,MAAM,CAAA,GAAA,iKAAA,CAAA,uBAAoB,AAAD,EAAE;QAE3C,oCAAoC;QACpC,IAAI,CAAC,SAAS;YACZ,MAAM,WAAW,IAAI,IACnB,CAAC,MAAM,EAAE,SAAS,SAAS,CAAC,GAAG,EAAE,mBAAmB,GAAG,8IAAA,CAAA,iBAAc,GAAG,QAAQ,IAAI,EAAE,GAAG,GAAG,IAAI,EAChG,IAAI,GAAG;YAET,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAC/B;QAEA,sDAAsD;QACtD,MAAM,QAAQ,QAAQ,IAAI,CAAC,KAAK;QAChC,MAAM,cAAc,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI;QAC3C,MAAM,sBAAsB,QAAQ,mBAAmB;QACvD,MAAM,gBAAgB,QAAQ,aAAa;QAE3C,IACE,CAAC,cAAc,QAAQ,CAAC,UACxB,CAAC,oBAAoB,QAAQ,CAAC,cAC9B;YACA,2BAA2B;YAC3B,MAAM,SAAS,MAAM,uIAAA,CAAA,KAAE,CAAC,MAAM,CAAC,SAAS,CAAC;gBACvC,OAAO;oBACL,QAAQ,QAAQ,IAAI,CAAC,EAAE;oBACvB,cAAc;wBACZ,YAAY;4BACV,MAAM;gCACJ,IAAI,QAAQ,WAAW;4BACzB;wBACF;oBACF;gBACF;gBACA,QAAQ;oBACN,IAAI;gBACN;YACF;YAEA,kDAAkD;YAClD,IAAI,CAAC,QAAQ;gBACX,OAAO,6LAAA,CAAA,eAAY,CAAC,OAAO,CACzB,IAAI,IAAI,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE,IAAI,GAAG;YAEjD;QACF;IACF;IAEA,+BAA+B;IAC/B,OAAO,6LAAA,CAAA,eAAY,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,UAAU,EAAE,IAAI,GAAG;AAC1E"}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/web/src/lib/middleware/app.ts"],"sourcesContent":["import type { NextRequest } from \"next/server\";\r\nimport { NextResponse } from \"next/server\";\r\nimport { parse } from \"@/lib/middleware/utils\";\r\nimport { getSessionCookie } from \"better-auth/cookies\";\r\n\r\nimport { HOSTING_PREFIX } from \"../constants\";\r\nimport HostingMiddleware from \"./hosting\";\r\n\r\nexport default function AppMiddleware(req: NextRequest) {\r\n  const { path, fullPath } = parse(req);\r\n\r\n  if (path.startsWith(HOSTING_PREFIX)) {\r\n    return HostingMiddleware(req, \"path\");\r\n  }\r\n\r\n  const cookies = getSessionCookie(req);\r\n\r\n  // if the user is logged in, and is trying to access the login page, redirect to dashboard\r\n  if (cookies && path.startsWith(\"/login\")) {\r\n    return NextResponse.redirect(new URL(\"/\", req.url));\r\n  }\r\n\r\n  // if the user is not logged in, and is trying to access a dashboard page, redirect to login\r\n  if (\r\n    !cookies &&\r\n    !(path.startsWith(\"/login\") || path.startsWith(\"/invitation\"))\r\n  ) {\r\n    return NextResponse.redirect(new URL(\"/login\", req.url));\r\n  }\r\n\r\n  // otherwise, rewrite the path to /app\r\n  return NextResponse.rewrite(new URL(`/app.agentset.ai${fullPath}`, req.url));\r\n}\r\n"],"names":[],"mappings":";;;AACA;AAAA;AACA;AACA;AAEA;AACA;;;;;;AAEe,SAAS,cAAc,GAAgB;IACpD,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,wJAAA,CAAA,QAAK,AAAD,EAAE;IAEjC,IAAI,KAAK,UAAU,CAAC,8IAAA,CAAA,iBAAc,GAAG;QACnC,OAAO,CAAA,GAAA,0JAAA,CAAA,UAAiB,AAAD,EAAE,KAAK;IAChC;IAEA,MAAM,UAAU,CAAA,GAAA,mKAAA,CAAA,mBAAgB,AAAD,EAAE;IAEjC,0FAA0F;IAC1F,IAAI,WAAW,KAAK,UAAU,CAAC,WAAW;QACxC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;IACnD;IAEA,4FAA4F;IAC5F,IACE,CAAC,WACD,CAAC,CAAC,KAAK,UAAU,CAAC,aAAa,KAAK,UAAU,CAAC,cAAc,GAC7D;QACA,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;IACxD;IAEA,sCAAsC;IACtC,OAAO,6LAAA,CAAA,eAAY,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,gBAAgB,EAAE,UAAU,EAAE,IAAI,GAAG;AAC5E"}},
    {"offset": {"line": 482, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/web/src/middleware.ts"],"sourcesContent":["import type { NextRequest } from \"next/server\";\r\n\r\nimport { API_HOSTNAMES, APP_HOSTNAMES } from \"./lib/constants\";\r\nimport ApiMiddleware from \"./lib/middleware/api\";\r\nimport AppMiddleware from \"./lib/middleware/app\";\r\nimport HostingMiddleware from \"./lib/middleware/hosting\";\r\nimport { parse } from \"./lib/middleware/utils\";\r\n\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all paths except for:\r\n     * 1. /api/ routes\r\n     * 2. /_next/ (Next.js internals)\r\n     * 3. /_proxy/ (proxies for third-party services)\r\n     * 4. Metadata files: favicon.ico, sitemap.xml, robots.txt, manifest.webmanifest\r\n     */\r\n    \"/((?!api/|_next/|_proxy/|favicon.ico|sitemap.xml|openapi.json|robots.txt|manifest.webmanifest).*)\",\r\n  ],\r\n};\r\n\r\nexport function middleware(request: NextRequest) {\r\n  const { domain } = parse(request);\r\n\r\n  // for App\r\n  if (APP_HOSTNAMES.has(domain)) {\r\n    return AppMiddleware(request);\r\n  }\r\n\r\n  // for API\r\n  if (API_HOSTNAMES.has(domain)) {\r\n    return ApiMiddleware(request);\r\n  }\r\n\r\n  // for Custom Domain\r\n  return HostingMiddleware(request);\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;;;;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH;AAEO,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,wJAAA,CAAA,QAAK,AAAD,EAAE;IAEzB,UAAU;IACV,IAAI,8IAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,SAAS;QAC7B,OAAO,CAAA,GAAA,sJAAA,CAAA,UAAa,AAAD,EAAE;IACvB;IAEA,UAAU;IACV,IAAI,8IAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,SAAS;QAC7B,OAAO,CAAA,GAAA,sJAAA,CAAA,UAAa,AAAD,EAAE;IACvB;IAEA,oBAAoB;IACpB,OAAO,CAAA,GAAA,0JAAA,CAAA,UAAiB,AAAD,EAAE;AAC3B"}}]
}