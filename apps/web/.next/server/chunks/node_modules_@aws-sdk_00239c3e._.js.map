{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/is-array-buffer/dist-es/index.js"],"sourcesContent":["export const isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n"],"names":[],"mappings":";;;AAAO,MAAM,gBAAgB,CAAC,MAAQ,AAAC,OAAO,gBAAgB,cAAc,eAAe,eACvF,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/util-buffer-from/dist-es/index.js"],"sourcesContent":["import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { Buffer } from \"buffer\";\nexport const fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return Buffer.from(input, offset, length);\n};\nexport const fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? Buffer.from(input, encoding) : Buffer.from(input);\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AACO,MAAM,kBAAkB,CAAC,OAAO,SAAS,CAAC,EAAE,SAAS,MAAM,UAAU,GAAG,MAAM;IACjF,IAAI,CAAC,CAAA,GAAA,6NAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ;QACvB,MAAM,IAAI,UAAU,CAAC,wDAAwD,EAAE,OAAO,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC;IAC5G;IACA,OAAO,qGAAA,CAAA,SAAM,CAAC,IAAI,CAAC,OAAO,QAAQ;AACtC;AACO,MAAM,aAAa,CAAC,OAAO;IAC9B,IAAI,OAAO,UAAU,UAAU;QAC3B,MAAM,IAAI,UAAU,CAAC,2DAA2D,EAAE,OAAO,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC;IAC/G;IACA,OAAO,WAAW,qGAAA,CAAA,SAAM,CAAC,IAAI,CAAC,OAAO,YAAY,qGAAA,CAAA,SAAM,CAAC,IAAI,CAAC;AACjE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/util-utf8/dist-es/fromUtf8.js"],"sourcesContent":["import { fromString } from \"@smithy/util-buffer-from\";\nexport const fromUtf8 = (input) => {\n    const buf = fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAC;IACrB,MAAM,MAAM,CAAA,GAAA,8NAAA,CAAA,aAAU,AAAD,EAAE,OAAO;IAC9B,OAAO,IAAI,WAAW,IAAI,MAAM,EAAE,IAAI,UAAU,EAAE,IAAI,UAAU,GAAG,WAAW,iBAAiB;AACnG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/util-utf8/dist-es/toUint8Array.js"],"sourcesContent":["import { fromUtf8 } from \"./fromUtf8\";\nexport const toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAC;IACzB,IAAI,OAAO,SAAS,UAAU;QAC1B,OAAO,CAAA,GAAA,uNAAA,CAAA,WAAQ,AAAD,EAAE;IACpB;IACA,IAAI,YAAY,MAAM,CAAC,OAAO;QAC1B,OAAO,IAAI,WAAW,KAAK,MAAM,EAAE,KAAK,UAAU,EAAE,KAAK,UAAU,GAAG,WAAW,iBAAiB;IACtG;IACA,OAAO,IAAI,WAAW;AAC1B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/util-utf8/dist-es/toUtf8.js"],"sourcesContent":["import { fromArrayBuffer } from \"@smithy/util-buffer-from\";\nexport const toUtf8 = (input) => fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAC,QAAU,CAAA,GAAA,8NAAA,CAAA,kBAAe,AAAD,EAAE,MAAM,MAAM,EAAE,MAAM,UAAU,EAAE,MAAM,UAAU,EAAE,QAAQ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/util-utf8/dist-es/index.js"],"sourcesContent":["export * from \"./fromUtf8\";\nexport * from \"./toUint8Array\";\nexport * from \"./toUtf8\";\n"],"names":[],"mappings":";AAAA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js"],"sourcesContent":["export function setCredentialFeature(credentials, feature, value) {\n    if (!credentials.$source) {\n        credentials.$source = {};\n    }\n    credentials.$source[feature] = value;\n    return credentials;\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,qBAAqB,WAAW,EAAE,OAAO,EAAE,KAAK;IAC5D,IAAI,CAAC,YAAY,OAAO,EAAE;QACtB,YAAY,OAAO,GAAG,CAAC;IAC3B;IACA,YAAY,OAAO,CAAC,QAAQ,GAAG;IAC/B,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/protocol-http/dist-es/Field.js"],"sourcesContent":["import { FieldPosition } from \"@smithy/types\";\nexport class Field {\n    constructor({ name, kind = FieldPosition.HEADER, values = [] }) {\n        this.name = name;\n        this.kind = kind;\n        this.values = values;\n    }\n    add(value) {\n        this.values.push(value);\n    }\n    set(values) {\n        this.values = values;\n    }\n    remove(value) {\n        this.values = this.values.filter((v) => v !== value);\n    }\n    toString() {\n        return this.values.map((v) => (v.includes(\",\") || v.includes(\" \") ? `\"${v}\"` : v)).join(\", \");\n    }\n    get() {\n        return this.values;\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM;IACT,YAAY,EAAE,IAAI,EAAE,OAAO,6MAAA,CAAA,gBAAa,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,CAAE;QAC5D,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,MAAM,GAAG;IAClB;IACA,IAAI,KAAK,EAAE;QACP,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IACrB;IACA,IAAI,MAAM,EAAE;QACR,IAAI,CAAC,MAAM,GAAG;IAClB;IACA,OAAO,KAAK,EAAE;QACV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAM,MAAM;IAClD;IACA,WAAW;QACP,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAO,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAI,IAAI,CAAC;IAC5F;IACA,MAAM;QACF,OAAO,IAAI,CAAC,MAAM;IACtB;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/protocol-http/dist-es/Fields.js"],"sourcesContent":["export class Fields {\n    constructor({ fields = [], encoding = \"utf-8\" }) {\n        this.entries = {};\n        fields.forEach(this.setField.bind(this));\n        this.encoding = encoding;\n    }\n    setField(field) {\n        this.entries[field.name.toLowerCase()] = field;\n    }\n    getField(name) {\n        return this.entries[name.toLowerCase()];\n    }\n    removeField(name) {\n        delete this.entries[name.toLowerCase()];\n    }\n    getByType(kind) {\n        return Object.values(this.entries).filter((field) => field.kind === kind);\n    }\n}\n"],"names":[],"mappings":";;;AAAO,MAAM;IACT,YAAY,EAAE,SAAS,EAAE,EAAE,WAAW,OAAO,EAAE,CAAE;QAC7C,IAAI,CAAC,OAAO,GAAG,CAAC;QAChB,OAAO,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI;QACtC,IAAI,CAAC,QAAQ,GAAG;IACpB;IACA,SAAS,KAAK,EAAE;QACZ,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,WAAW,GAAG,GAAG;IAC7C;IACA,SAAS,IAAI,EAAE;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,WAAW,GAAG;IAC3C;IACA,YAAY,IAAI,EAAE;QACd,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,WAAW,GAAG;IAC3C;IACA,UAAU,IAAI,EAAE;QACZ,OAAO,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,QAAU,MAAM,IAAI,KAAK;IACxE;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/protocol-http/dist-es/httpRequest.js"],"sourcesContent":["export class HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n        this.username = options.username;\n        this.password = options.password;\n        this.fragment = options.fragment;\n    }\n    static isInstance(request) {\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n"],"names":[],"mappings":";;;AAAO,MAAM;IACT,YAAY,OAAO,CAAE;QACjB,IAAI,CAAC,MAAM,GAAG,QAAQ,MAAM,IAAI;QAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,QAAQ,IAAI;QACpC,IAAI,CAAC,IAAI,GAAG,QAAQ,IAAI;QACxB,IAAI,CAAC,KAAK,GAAG,QAAQ,KAAK,IAAI,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,QAAQ,OAAO,IAAI,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,QAAQ,IAAI;QACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,QAAQ,GAC1B,QAAQ,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,MAC3B,GAAG,QAAQ,QAAQ,CAAC,CAAC,CAAC,GACtB,QAAQ,QAAQ,GACpB;QACN,IAAI,CAAC,IAAI,GAAG,QAAQ,IAAI,GAAI,QAAQ,IAAI,CAAC,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,EAAE,QAAQ,IAAI,EAAE,GAAG,QAAQ,IAAI,GAAI;QAClG,IAAI,CAAC,QAAQ,GAAG,QAAQ,QAAQ;QAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,QAAQ;QAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,QAAQ;IACpC;IACA,OAAO,WAAW,OAAO,EAAE;QACvB,IAAI,CAAC,SACD,OAAO;QACX,MAAM,MAAM;QACZ,OAAQ,YAAY,OAChB,cAAc,OACd,cAAc,OACd,UAAU,OACV,OAAO,GAAG,CAAC,QAAQ,KAAK,YACxB,OAAO,GAAG,CAAC,UAAU,KAAK;IAClC;IACA,QAAQ;QACJ,MAAM,SAAS,IAAI,YAAY;YAC3B,GAAG,IAAI;YACP,SAAS;gBAAE,GAAG,IAAI,CAAC,OAAO;YAAC;QAC/B;QACA,IAAI,OAAO,KAAK,EACZ,OAAO,KAAK,GAAG,WAAW,OAAO,KAAK;QAC1C,OAAO;IACX;AACJ;AACA,SAAS,WAAW,KAAK;IACrB,OAAO,OAAO,IAAI,CAAC,OAAO,MAAM,CAAC,CAAC,OAAO;QACrC,MAAM,QAAQ,KAAK,CAAC,UAAU;QAC9B,OAAO;YACH,GAAG,KAAK;YACR,CAAC,UAAU,EAAE,MAAM,OAAO,CAAC,SAAS;mBAAI;aAAM,GAAG;QACrD;IACJ,GAAG,CAAC;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/protocol-http/dist-es/httpResponse.js"],"sourcesContent":["export class HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.reason = options.reason;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n"],"names":[],"mappings":";;;AAAO,MAAM;IACT,YAAY,OAAO,CAAE;QACjB,IAAI,CAAC,UAAU,GAAG,QAAQ,UAAU;QACpC,IAAI,CAAC,MAAM,GAAG,QAAQ,MAAM;QAC5B,IAAI,CAAC,OAAO,GAAG,QAAQ,OAAO,IAAI,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,QAAQ,IAAI;IAC5B;IACA,OAAO,WAAW,QAAQ,EAAE;QACxB,IAAI,CAAC,UACD,OAAO;QACX,MAAM,OAAO;QACb,OAAO,OAAO,KAAK,UAAU,KAAK,YAAY,OAAO,KAAK,OAAO,KAAK;IAC1E;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/protocol-http/dist-es/isValidHostname.js"],"sourcesContent":["export function isValidHostname(hostname) {\n    const hostPattern = /^[a-z0-9][a-z0-9\\.\\-]*[a-z0-9]$/;\n    return hostPattern.test(hostname);\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,gBAAgB,QAAQ;IACpC,MAAM,cAAc;IACpB,OAAO,YAAY,IAAI,CAAC;AAC5B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/protocol-http/dist-es/index.js"],"sourcesContent":["export * from \"./Field\";\nexport * from \"./Fields\";\nexport * from \"./httpHandler\";\nexport * from \"./httpRequest\";\nexport * from \"./httpResponse\";\nexport * from \"./isValidHostname\";\nexport * from \"./types\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/types/dist-es/auth.js"],"sourcesContent":["export var HttpAuthLocation;\n(function (HttpAuthLocation) {\n    HttpAuthLocation[\"HEADER\"] = \"header\";\n    HttpAuthLocation[\"QUERY\"] = \"query\";\n})(HttpAuthLocation || (HttpAuthLocation = {}));\n"],"names":[],"mappings":";;;AAAO,IAAI;AACX,CAAC,SAAU,gBAAgB;IACvB,gBAAgB,CAAC,SAAS,GAAG;IAC7B,gBAAgB,CAAC,QAAQ,GAAG;AAChC,CAAC,EAAE,oBAAoB,CAAC,mBAAmB,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/types/dist-es/connection/index.js"],"sourcesContent":["export * from \"./config\";\nexport * from \"./manager\";\nexport * from \"./pool\";\n"],"names":[],"mappings":";AAAA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/types/dist-es/endpoint.js"],"sourcesContent":["export var EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme || (EndpointURLScheme = {}));\n"],"names":[],"mappings":";;;AAAO,IAAI;AACX,CAAC,SAAU,iBAAiB;IACxB,iBAAiB,CAAC,OAAO,GAAG;IAC5B,iBAAiB,CAAC,QAAQ,GAAG;AACjC,CAAC,EAAE,qBAAqB,CAAC,oBAAoB,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 521, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 537, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/types/dist-es/endpoints/index.js"],"sourcesContent":["export * from \"./EndpointRuleObject\";\nexport * from \"./ErrorRuleObject\";\nexport * from \"./RuleSetObject\";\nexport * from \"./shared\";\nexport * from \"./TreeRuleObject\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 575, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/types/dist-es/http.js"],"sourcesContent":["export var FieldPosition;\n(function (FieldPosition) {\n    FieldPosition[FieldPosition[\"HEADER\"] = 0] = \"HEADER\";\n    FieldPosition[FieldPosition[\"TRAILER\"] = 1] = \"TRAILER\";\n})(FieldPosition || (FieldPosition = {}));\n"],"names":[],"mappings":";;;AAAO,IAAI;AACX,CAAC,SAAU,aAAa;IACpB,aAAa,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,GAAG;IAC7C,aAAa,CAAC,aAAa,CAAC,UAAU,GAAG,EAAE,GAAG;AAClD,CAAC,EAAE,iBAAiB,CAAC,gBAAgB,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 597, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 605, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/types/dist-es/identity/index.js"],"sourcesContent":["export * from \"./awsCredentialIdentity\";\nexport * from \"./identity\";\n"],"names":[],"mappings":";AAAA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 626, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 634, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 642, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 650, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 682, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 690, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 706, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 714, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 722, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 730, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/types/dist-es/transfer.js"],"sourcesContent":["export var RequestHandlerProtocol;\n(function (RequestHandlerProtocol) {\n    RequestHandlerProtocol[\"HTTP_0_9\"] = \"http/0.9\";\n    RequestHandlerProtocol[\"HTTP_1_0\"] = \"http/1.0\";\n    RequestHandlerProtocol[\"TDS_8_0\"] = \"tds/8.0\";\n})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));\n"],"names":[],"mappings":";;;AAAO,IAAI;AACX,CAAC,SAAU,sBAAsB;IAC7B,sBAAsB,CAAC,WAAW,GAAG;IACrC,sBAAsB,CAAC,WAAW,GAAG;IACrC,sBAAsB,CAAC,UAAU,GAAG;AACxC,CAAC,EAAE,0BAA0B,CAAC,yBAAyB,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 745, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 753, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 761, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 769, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 777, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/node_modules/%40smithy/types/dist-es/index.js"],"sourcesContent":["export * from \"./abort\";\nexport * from \"./auth\";\nexport * from \"./blob/blob-payload-input-types\";\nexport * from \"./checksum\";\nexport * from \"./client\";\nexport * from \"./command\";\nexport * from \"./connection\";\nexport * from \"./crypto\";\nexport * from \"./encode\";\nexport * from \"./endpoint\";\nexport * from \"./endpoints\";\nexport * from \"./eventStream\";\nexport * from \"./http\";\nexport * from \"./identity\";\nexport * from \"./logger\";\nexport * from \"./middleware\";\nexport * from \"./pagination\";\nexport * from \"./profile\";\nexport * from \"./response\";\nexport * from \"./retry\";\nexport * from \"./serde\";\nexport * from \"./shapes\";\nexport * from \"./signature\";\nexport * from \"./stream\";\nexport * from \"./streaming-payload/streaming-blob-common-types\";\nexport * from \"./streaming-payload/streaming-blob-payload-input-types\";\nexport * from \"./streaming-payload/streaming-blob-payload-output-types\";\nexport * from \"./transfer\";\nexport * from \"./transform/client-payload-blob-type-narrow\";\nexport * from \"./transform/type-transform\";\nexport * from \"./uri\";\nexport * from \"./util\";\nexport * from \"./waiter\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 899, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/util-uri-escape/dist-es/escape-uri.js"],"sourcesContent":["export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n"],"names":[],"mappings":";;;AAAO,MAAM,YAAY,CAAC,MAAQ,mBAAmB,KAAK,OAAO,CAAC,YAAY;AAC9E,MAAM,YAAY,CAAC,IAAM,CAAC,CAAC,EAAE,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,IAAI,WAAW,IAAI","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 910, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/util-uri-escape/dist-es/escape-uri-path.js"],"sourcesContent":["import { escapeUri } from \"./escape-uri\";\nexport const escapeUriPath = (uri) => uri.split(\"/\").map(escapeUri).join(\"/\");\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAC,MAAQ,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,qOAAA,CAAA,YAAS,EAAE,IAAI,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 922, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/util-uri-escape/dist-es/index.js"],"sourcesContent":["export * from \"./escape-uri\";\nexport * from \"./escape-uri-path\";\n"],"names":[],"mappings":";AAAA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 943, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-http/dist-es/fromHttp/checkUrl.js"],"sourcesContent":["import { CredentialsProviderError } from \"@smithy/property-provider\";\nconst LOOPBACK_CIDR_IPv4 = \"127.0.0.0/8\";\nconst LOOPBACK_CIDR_IPv6 = \"::1/128\";\nconst ECS_CONTAINER_HOST = \"169.254.170.2\";\nconst EKS_CONTAINER_HOST_IPv4 = \"169.254.170.23\";\nconst EKS_CONTAINER_HOST_IPv6 = \"[fd00:ec2::23]\";\nexport const checkUrl = (url, logger) => {\n    if (url.protocol === \"https:\") {\n        return;\n    }\n    if (url.hostname === ECS_CONTAINER_HOST ||\n        url.hostname === EKS_CONTAINER_HOST_IPv4 ||\n        url.hostname === EKS_CONTAINER_HOST_IPv6) {\n        return;\n    }\n    if (url.hostname.includes(\"[\")) {\n        if (url.hostname === \"[::1]\" || url.hostname === \"[0000:0000:0000:0000:0000:0000:0000:0001]\") {\n            return;\n        }\n    }\n    else {\n        if (url.hostname === \"localhost\") {\n            return;\n        }\n        const ipComponents = url.hostname.split(\".\");\n        const inRange = (component) => {\n            const num = parseInt(component, 10);\n            return 0 <= num && num <= 255;\n        };\n        if (ipComponents[0] === \"127\" &&\n            inRange(ipComponents[1]) &&\n            inRange(ipComponents[2]) &&\n            inRange(ipComponents[3]) &&\n            ipComponents.length === 4) {\n            return;\n        }\n    }\n    throw new CredentialsProviderError(`URL not accepted. It must either be HTTPS or match one of the following:\n  - loopback CIDR 127.0.0.0/8 or [::1/128]\n  - ECS container host 169.254.170.2\n  - EKS container host 169.254.170.23 or [fd00:ec2::23]`, { logger });\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACA,MAAM,qBAAqB;AAC3B,MAAM,qBAAqB;AAC3B,MAAM,qBAAqB;AAC3B,MAAM,0BAA0B;AAChC,MAAM,0BAA0B;AACzB,MAAM,WAAW,CAAC,KAAK;IAC1B,IAAI,IAAI,QAAQ,KAAK,UAAU;QAC3B;IACJ;IACA,IAAI,IAAI,QAAQ,KAAK,sBACjB,IAAI,QAAQ,KAAK,2BACjB,IAAI,QAAQ,KAAK,yBAAyB;QAC1C;IACJ;IACA,IAAI,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM;QAC5B,IAAI,IAAI,QAAQ,KAAK,WAAW,IAAI,QAAQ,KAAK,6CAA6C;YAC1F;QACJ;IACJ,OACK;QACD,IAAI,IAAI,QAAQ,KAAK,aAAa;YAC9B;QACJ;QACA,MAAM,eAAe,IAAI,QAAQ,CAAC,KAAK,CAAC;QACxC,MAAM,UAAU,CAAC;YACb,MAAM,MAAM,SAAS,WAAW;YAChC,OAAO,KAAK,OAAO,OAAO;QAC9B;QACA,IAAI,YAAY,CAAC,EAAE,KAAK,SACpB,QAAQ,YAAY,CAAC,EAAE,KACvB,QAAQ,YAAY,CAAC,EAAE,KACvB,QAAQ,YAAY,CAAC,EAAE,KACvB,aAAa,MAAM,KAAK,GAAG;YAC3B;QACJ;IACJ;IACA,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC;;;uDAGe,CAAC,EAAE;QAAE;IAAO;AACnE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 991, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-http/dist-es/fromHttp/requestHelpers.js"],"sourcesContent":["import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { parseRfc3339DateTime } from \"@smithy/smithy-client\";\nimport { sdkStreamMixin } from \"@smithy/util-stream\";\nexport function createGetRequest(url) {\n    return new HttpRequest({\n        protocol: url.protocol,\n        hostname: url.hostname,\n        port: Number(url.port),\n        path: url.pathname,\n        query: Array.from(url.searchParams.entries()).reduce((acc, [k, v]) => {\n            acc[k] = v;\n            return acc;\n        }, {}),\n        fragment: url.hash,\n    });\n}\nexport async function getCredentials(response, logger) {\n    const stream = sdkStreamMixin(response.body);\n    const str = await stream.transformToString();\n    if (response.statusCode === 200) {\n        const parsed = JSON.parse(str);\n        if (typeof parsed.AccessKeyId !== \"string\" ||\n            typeof parsed.SecretAccessKey !== \"string\" ||\n            typeof parsed.Token !== \"string\" ||\n            typeof parsed.Expiration !== \"string\") {\n            throw new CredentialsProviderError(\"HTTP credential provider response not of the required format, an object matching: \" +\n                \"{ AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }\", { logger });\n        }\n        return {\n            accessKeyId: parsed.AccessKeyId,\n            secretAccessKey: parsed.SecretAccessKey,\n            sessionToken: parsed.Token,\n            expiration: parseRfc3339DateTime(parsed.Expiration),\n        };\n    }\n    if (response.statusCode >= 400 && response.statusCode < 500) {\n        let parsedBody = {};\n        try {\n            parsedBody = JSON.parse(str);\n        }\n        catch (e) { }\n        throw Object.assign(new CredentialsProviderError(`Server responded with status: ${response.statusCode}`, { logger }), {\n            Code: parsedBody.Code,\n            Message: parsedBody.Message,\n        });\n    }\n    throw new CredentialsProviderError(`Server responded with status: ${response.statusCode}`, { logger });\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AACO,SAAS,iBAAiB,GAAG;IAChC,OAAO,IAAI,2KAAA,CAAA,cAAW,CAAC;QACnB,UAAU,IAAI,QAAQ;QACtB,UAAU,IAAI,QAAQ;QACtB,MAAM,OAAO,IAAI,IAAI;QACrB,MAAM,IAAI,QAAQ;QAClB,OAAO,MAAM,IAAI,CAAC,IAAI,YAAY,CAAC,OAAO,IAAI,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE;YAC7D,GAAG,CAAC,EAAE,GAAG;YACT,OAAO;QACX,GAAG,CAAC;QACJ,UAAU,IAAI,IAAI;IACtB;AACJ;AACO,eAAe,eAAe,QAAQ,EAAE,MAAM;IACjD,MAAM,SAAS,CAAA,GAAA,oLAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,IAAI;IAC3C,MAAM,MAAM,MAAM,OAAO,iBAAiB;IAC1C,IAAI,SAAS,UAAU,KAAK,KAAK;QAC7B,MAAM,SAAS,KAAK,KAAK,CAAC;QAC1B,IAAI,OAAO,OAAO,WAAW,KAAK,YAC9B,OAAO,OAAO,eAAe,KAAK,YAClC,OAAO,OAAO,KAAK,KAAK,YACxB,OAAO,OAAO,UAAU,KAAK,UAAU;YACvC,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,uFAC/B,gGAAgG;gBAAE;YAAO;QACjH;QACA,OAAO;YACH,aAAa,OAAO,WAAW;YAC/B,iBAAiB,OAAO,eAAe;YACvC,cAAc,OAAO,KAAK;YAC1B,YAAY,CAAA,GAAA,6KAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO,UAAU;QACtD;IACJ;IACA,IAAI,SAAS,UAAU,IAAI,OAAO,SAAS,UAAU,GAAG,KAAK;QACzD,IAAI,aAAa,CAAC;QAClB,IAAI;YACA,aAAa,KAAK,KAAK,CAAC;QAC5B,EACA,OAAO,GAAG,CAAE;QACZ,MAAM,OAAO,MAAM,CAAC,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC,8BAA8B,EAAE,SAAS,UAAU,EAAE,EAAE;YAAE;QAAO,IAAI;YAClH,MAAM,WAAW,IAAI;YACrB,SAAS,WAAW,OAAO;QAC/B;IACJ;IACA,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC,8BAA8B,EAAE,SAAS,UAAU,EAAE,EAAE;QAAE;IAAO;AACxG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1059, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-http/dist-es/fromHttp/retry-wrapper.js"],"sourcesContent":["export const retryWrapper = (toRetry, maxRetries, delayMs) => {\n    return async () => {\n        for (let i = 0; i < maxRetries; ++i) {\n            try {\n                return await toRetry();\n            }\n            catch (e) {\n                await new Promise((resolve) => setTimeout(resolve, delayMs));\n            }\n        }\n        return await toRetry();\n    };\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,eAAe,CAAC,SAAS,YAAY;IAC9C,OAAO;QACH,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,EAAE,EAAG;YACjC,IAAI;gBACA,OAAO,MAAM;YACjB,EACA,OAAO,GAAG;gBACN,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;YACvD;QACJ;QACA,OAAO,MAAM;IACjB;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1080, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-http/dist-es/fromHttp/fromHttp.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { NodeHttpHandler } from \"@smithy/node-http-handler\";\nimport { CredentialsProviderError } from \"@smithy/property-provider\";\nimport fs from \"fs/promises\";\nimport { checkUrl } from \"./checkUrl\";\nimport { createGetRequest, getCredentials } from \"./requestHelpers\";\nimport { retryWrapper } from \"./retry-wrapper\";\nconst AWS_CONTAINER_CREDENTIALS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nconst DEFAULT_LINK_LOCAL_HOST = \"http://169.254.170.2\";\nconst AWS_CONTAINER_CREDENTIALS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nconst AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE = \"AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE\";\nconst AWS_CONTAINER_AUTHORIZATION_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nexport const fromHttp = (options = {}) => {\n    options.logger?.debug(\"@aws-sdk/credential-provider-http - fromHttp\");\n    let host;\n    const relative = options.awsContainerCredentialsRelativeUri ?? process.env[AWS_CONTAINER_CREDENTIALS_RELATIVE_URI];\n    const full = options.awsContainerCredentialsFullUri ?? process.env[AWS_CONTAINER_CREDENTIALS_FULL_URI];\n    const token = options.awsContainerAuthorizationToken ?? process.env[AWS_CONTAINER_AUTHORIZATION_TOKEN];\n    const tokenFile = options.awsContainerAuthorizationTokenFile ?? process.env[AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE];\n    const warn = options.logger?.constructor?.name === \"NoOpLogger\" || !options.logger ? console.warn : options.logger.warn;\n    if (relative && full) {\n        warn(\"@aws-sdk/credential-provider-http: \" +\n            \"you have set both awsContainerCredentialsRelativeUri and awsContainerCredentialsFullUri.\");\n        warn(\"awsContainerCredentialsFullUri will take precedence.\");\n    }\n    if (token && tokenFile) {\n        warn(\"@aws-sdk/credential-provider-http: \" +\n            \"you have set both awsContainerAuthorizationToken and awsContainerAuthorizationTokenFile.\");\n        warn(\"awsContainerAuthorizationToken will take precedence.\");\n    }\n    if (full) {\n        host = full;\n    }\n    else if (relative) {\n        host = `${DEFAULT_LINK_LOCAL_HOST}${relative}`;\n    }\n    else {\n        throw new CredentialsProviderError(`No HTTP credential provider host provided.\nSet AWS_CONTAINER_CREDENTIALS_FULL_URI or AWS_CONTAINER_CREDENTIALS_RELATIVE_URI.`, { logger: options.logger });\n    }\n    const url = new URL(host);\n    checkUrl(url, options.logger);\n    const requestHandler = new NodeHttpHandler({\n        requestTimeout: options.timeout ?? 1000,\n        connectionTimeout: options.timeout ?? 1000,\n    });\n    return retryWrapper(async () => {\n        const request = createGetRequest(url);\n        if (token) {\n            request.headers.Authorization = token;\n        }\n        else if (tokenFile) {\n            request.headers.Authorization = (await fs.readFile(tokenFile)).toString();\n        }\n        try {\n            const result = await requestHandler.handle(request);\n            return getCredentials(result.response).then((creds) => setCredentialFeature(creds, \"CREDENTIALS_HTTP\", \"z\"));\n        }\n        catch (e) {\n            throw new CredentialsProviderError(String(e), { logger: options.logger });\n        }\n    }, options.maxRetries ?? 3, options.timeout ?? 1000);\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;AACA,MAAM,yCAAyC;AAC/C,MAAM,0BAA0B;AAChC,MAAM,qCAAqC;AAC3C,MAAM,yCAAyC;AAC/C,MAAM,oCAAoC;AACnC,MAAM,WAAW,CAAC,UAAU,CAAC,CAAC;IACjC,QAAQ,MAAM,EAAE,MAAM;IACtB,IAAI;IACJ,MAAM,WAAW,QAAQ,kCAAkC,IAAI,QAAQ,GAAG,CAAC,uCAAuC;IAClH,MAAM,OAAO,QAAQ,8BAA8B,IAAI,QAAQ,GAAG,CAAC,mCAAmC;IACtG,MAAM,QAAQ,QAAQ,8BAA8B,IAAI,QAAQ,GAAG,CAAC,kCAAkC;IACtG,MAAM,YAAY,QAAQ,kCAAkC,IAAI,QAAQ,GAAG,CAAC,uCAAuC;IACnH,MAAM,OAAO,QAAQ,MAAM,EAAE,aAAa,SAAS,gBAAgB,CAAC,QAAQ,MAAM,GAAG,QAAQ,IAAI,GAAG,QAAQ,MAAM,CAAC,IAAI;IACvH,IAAI,YAAY,MAAM;QAClB,KAAK,wCACD;QACJ,KAAK;IACT;IACA,IAAI,SAAS,WAAW;QACpB,KAAK,wCACD;QACJ,KAAK;IACT;IACA,IAAI,MAAM;QACN,OAAO;IACX,OACK,IAAI,UAAU;QACf,OAAO,GAAG,0BAA0B,UAAU;IAClD,OACK;QACD,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC;iFACqC,CAAC,EAAE;YAAE,QAAQ,QAAQ,MAAM;QAAC;IACzG;IACA,MAAM,MAAM,IAAI,IAAI;IACpB,CAAA,GAAA,sMAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,QAAQ,MAAM;IAC5B,MAAM,iBAAiB,IAAI,8LAAA,CAAA,kBAAe,CAAC;QACvC,gBAAgB,QAAQ,OAAO,IAAI;QACnC,mBAAmB,QAAQ,OAAO,IAAI;IAC1C;IACA,OAAO,CAAA,GAAA,8MAAA,CAAA,eAAY,AAAD,EAAE;QAChB,MAAM,UAAU,CAAA,GAAA,4MAAA,CAAA,mBAAgB,AAAD,EAAE;QACjC,IAAI,OAAO;YACP,QAAQ,OAAO,CAAC,aAAa,GAAG;QACpC,OACK,IAAI,WAAW;YAChB,QAAQ,OAAO,CAAC,aAAa,GAAG,CAAC,MAAM,qHAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ;QAC3E;QACA,IAAI;YACA,MAAM,SAAS,MAAM,eAAe,MAAM,CAAC;YAC3C,OAAO,CAAA,GAAA,4MAAA,CAAA,iBAAc,AAAD,EAAE,OAAO,QAAQ,EAAE,IAAI,CAAC,CAAC,QAAU,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO,oBAAoB;QAC3G,EACA,OAAO,GAAG;YACN,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,OAAO,IAAI;gBAAE,QAAQ,QAAQ,MAAM;YAAC;QAC3E;IACJ,GAAG,QAAQ,UAAU,IAAI,GAAG,QAAQ,OAAO,IAAI;AACnD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1159, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-http/dist-es/index.js"],"sourcesContent":["export { fromHttp } from \"./fromHttp/fromHttp\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1177, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/util-hex-encoding/dist-es/index.js"],"sourcesContent":["const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n"],"names":[],"mappings":";;;;AAAA,MAAM,eAAe,CAAC;AACtB,MAAM,eAAe,CAAC;AACtB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;IAC1B,IAAI,cAAc,EAAE,QAAQ,CAAC,IAAI,WAAW;IAC5C,IAAI,YAAY,MAAM,KAAK,GAAG;QAC1B,cAAc,CAAC,CAAC,EAAE,aAAa;IACnC;IACA,YAAY,CAAC,EAAE,GAAG;IAClB,YAAY,CAAC,YAAY,GAAG;AAChC;AACO,SAAS,QAAQ,OAAO;IAC3B,IAAI,QAAQ,MAAM,GAAG,MAAM,GAAG;QAC1B,MAAM,IAAI,MAAM;IACpB;IACA,MAAM,MAAM,IAAI,WAAW,QAAQ,MAAM,GAAG;IAC5C,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,KAAK,EAAG;QACxC,MAAM,cAAc,QAAQ,KAAK,CAAC,GAAG,IAAI,GAAG,WAAW;QACvD,IAAI,eAAe,cAAc;YAC7B,GAAG,CAAC,IAAI,EAAE,GAAG,YAAY,CAAC,YAAY;QAC1C,OACK;YACD,MAAM,IAAI,MAAM,CAAC,oCAAoC,EAAE,YAAY,eAAe,CAAC;QACvF;IACJ;IACA,OAAO;AACX;AACO,SAAS,MAAM,KAAK;IACvB,IAAI,MAAM;IACV,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,UAAU,EAAE,IAAK;QACvC,OAAO,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC;IACjC;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1219, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/index.js"],"sourcesContent":["export * from \"./createCredentialChain\";\nexport * from \"./fromCognitoIdentity\";\nexport * from \"./fromCognitoIdentityPool\";\nexport * from \"./fromContainerMetadata\";\nexport { fromHttp } from \"@aws-sdk/credential-provider-http\";\nexport * from \"./fromEnv\";\nexport * from \"./fromIni\";\nexport * from \"./fromInstanceMetadata\";\nexport * from \"./fromNodeProviderChain\";\nexport * from \"./fromProcess\";\nexport * from \"./fromSSO\";\nexport * from \"./fromTemporaryCredentials\";\nexport * from \"./fromTokenFile\";\nexport * from \"./fromWebToken\";\n"],"names":[],"mappings":";AAIA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1250, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/createCredentialChain.js"],"sourcesContent":["import { ProviderError } from \"@smithy/property-provider\";\nexport const createCredentialChain = (...credentialProviders) => {\n    let expireAfter = -1;\n    const baseFunction = async (awsIdentityProperties) => {\n        const credentials = await propertyProviderChain(...credentialProviders)(awsIdentityProperties);\n        if (!credentials.expiration && expireAfter !== -1) {\n            credentials.expiration = new Date(Date.now() + expireAfter);\n        }\n        return credentials;\n    };\n    const withOptions = Object.assign(baseFunction, {\n        expireAfter(milliseconds) {\n            if (milliseconds < 5 * 60000) {\n                throw new Error(\"@aws-sdk/credential-providers - createCredentialChain(...).expireAfter(ms) may not be called with a duration lower than five minutes.\");\n            }\n            expireAfter = milliseconds;\n            return withOptions;\n        },\n    });\n    return withOptions;\n};\nexport const propertyProviderChain = (...providers) => async (awsIdentityProperties) => {\n    if (providers.length === 0) {\n        throw new ProviderError(\"No providers in chain\");\n    }\n    let lastProviderError;\n    for (const provider of providers) {\n        try {\n            const credentials = await provider(awsIdentityProperties);\n            return credentials;\n        }\n        catch (err) {\n            lastProviderError = err;\n            if (err?.tryNextLink) {\n                continue;\n            }\n            throw err;\n        }\n    }\n    throw lastProviderError;\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AACO,MAAM,wBAAwB,CAAC,GAAG;IACrC,IAAI,cAAc,CAAC;IACnB,MAAM,eAAe,OAAO;QACxB,MAAM,cAAc,MAAM,yBAAyB,qBAAqB;QACxE,IAAI,CAAC,YAAY,UAAU,IAAI,gBAAgB,CAAC,GAAG;YAC/C,YAAY,UAAU,GAAG,IAAI,KAAK,KAAK,GAAG,KAAK;QACnD;QACA,OAAO;IACX;IACA,MAAM,cAAc,OAAO,MAAM,CAAC,cAAc;QAC5C,aAAY,YAAY;YACpB,IAAI,eAAe,IAAI,OAAO;gBAC1B,MAAM,IAAI,MAAM;YACpB;YACA,cAAc;YACd,OAAO;QACX;IACJ;IACA,OAAO;AACX;AACO,MAAM,wBAAwB,CAAC,GAAG,YAAc,OAAO;QAC1D,IAAI,UAAU,MAAM,KAAK,GAAG;YACxB,MAAM,IAAI,iLAAA,CAAA,gBAAa,CAAC;QAC5B;QACA,IAAI;QACJ,KAAK,MAAM,YAAY,UAAW;YAC9B,IAAI;gBACA,MAAM,cAAc,MAAM,SAAS;gBACnC,OAAO;YACX,EACA,OAAO,KAAK;gBACR,oBAAoB;gBACpB,IAAI,KAAK,aAAa;oBAClB;gBACJ;gBACA,MAAM;YACV;QACJ;QACA,MAAM;IACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1302, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/fromCognitoIdentity.js"],"sourcesContent":["import { fromCognitoIdentity as _fromCognitoIdentity, } from \"@aws-sdk/credential-provider-cognito-identity\";\nexport const fromCognitoIdentity = (options) => _fromCognitoIdentity({\n    ...options,\n});\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,sBAAsB,CAAC,UAAY,CAAA,GAAA,oNAAA,CAAA,sBAAoB,AAAD,EAAE;QACjE,GAAG,OAAO;IACd","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1316, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/fromCognitoIdentityPool.js"],"sourcesContent":["import { fromCognitoIdentityPool as _fromCognitoIdentityPool, } from \"@aws-sdk/credential-provider-cognito-identity\";\nexport const fromCognitoIdentityPool = (options) => _fromCognitoIdentityPool({\n    ...options,\n});\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,0BAA0B,CAAC,UAAY,CAAA,GAAA,wNAAA,CAAA,0BAAwB,AAAD,EAAE;QACzE,GAAG,OAAO;IACd","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1330, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/fromContainerMetadata.js"],"sourcesContent":["import { fromContainerMetadata as _fromContainerMetadata, } from \"@smithy/credential-provider-imds\";\nexport const fromContainerMetadata = (init) => {\n    init?.logger?.debug(\"@smithy/credential-provider-imds\", \"fromContainerMetadata\");\n    return _fromContainerMetadata(init);\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM,wBAAwB,CAAC;IAClC,MAAM,QAAQ,MAAM,oCAAoC;IACxD,OAAO,CAAA,GAAA,mMAAA,CAAA,wBAAsB,AAAD,EAAE;AAClC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1346, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/fromEnv.js"],"sourcesContent":["import { fromEnv as _fromEnv } from \"@aws-sdk/credential-provider-env\";\nexport const fromEnv = (init) => _fromEnv(init);\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM,UAAU,CAAC,OAAS,CAAA,GAAA,wLAAA,CAAA,UAAQ,AAAD,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1359, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/fromIni.js"],"sourcesContent":["import { fromIni as _fromIni } from \"@aws-sdk/credential-provider-ini\";\nexport const fromIni = (init = {}) => _fromIni({\n    ...init,\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM,UAAU,CAAC,OAAO,CAAC,CAAC,GAAK,CAAA,GAAA,wLAAA,CAAA,UAAQ,AAAD,EAAE;QAC3C,GAAG,IAAI;IACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1374, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/fromInstanceMetadata.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { fromInstanceMetadata as _fromInstanceMetadata, } from \"@smithy/credential-provider-imds\";\nexport const fromInstanceMetadata = (init) => {\n    init?.logger?.debug(\"@smithy/credential-provider-imds\", \"fromInstanceMetadata\");\n    return async () => _fromInstanceMetadata(init)().then((creds) => setCredentialFeature(creds, \"CREDENTIALS_IMDS\", \"0\"));\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AACO,MAAM,uBAAuB,CAAC;IACjC,MAAM,QAAQ,MAAM,oCAAoC;IACxD,OAAO,UAAY,CAAA,GAAA,kMAAA,CAAA,uBAAqB,AAAD,EAAE,QAAQ,IAAI,CAAC,CAAC,QAAU,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO,oBAAoB;AACrH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1392, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/fromNodeProviderChain.js"],"sourcesContent":["import { defaultProvider } from \"@aws-sdk/credential-provider-node\";\nexport const fromNodeProviderChain = (init = {}) => defaultProvider({\n    ...init,\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM,wBAAwB,CAAC,OAAO,CAAC,CAAC,GAAK,CAAA,GAAA,iMAAA,CAAA,kBAAe,AAAD,EAAE;QAChE,GAAG,IAAI;IACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1407, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/fromProcess.js"],"sourcesContent":["import { fromProcess as _fromProcess } from \"@aws-sdk/credential-provider-process\";\nexport const fromProcess = (init) => _fromProcess(init);\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM,cAAc,CAAC,OAAS,CAAA,GAAA,gMAAA,CAAA,cAAY,AAAD,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1420, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/fromSSO.js"],"sourcesContent":["import { fromSSO as _fromSSO } from \"@aws-sdk/credential-provider-sso\";\nexport const fromSSO = (init = {}) => {\n    return _fromSSO({ ...init });\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM,UAAU,CAAC,OAAO,CAAC,CAAC;IAC7B,OAAO,CAAA,GAAA,wLAAA,CAAA,UAAQ,AAAD,EAAE;QAAE,GAAG,IAAI;IAAC;AAC9B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1437, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/fromTemporaryCredentials.base.js"],"sourcesContent":["import { normalizeProvider } from \"@smithy/core\";\nimport { CredentialsProviderError } from \"@smithy/property-provider\";\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nexport const fromTemporaryCredentials = (options, credentialDefaultProvider) => {\n    let stsClient;\n    return async (awsIdentityProperties = {}) => {\n        const { callerClientConfig } = awsIdentityProperties;\n        const logger = options.logger ?? callerClientConfig?.logger;\n        logger?.debug(\"@aws-sdk/credential-providers - fromTemporaryCredentials (STS)\");\n        const params = { ...options.params, RoleSessionName: options.params.RoleSessionName ?? \"aws-sdk-js-\" + Date.now() };\n        if (params?.SerialNumber) {\n            if (!options.mfaCodeProvider) {\n                throw new CredentialsProviderError(`Temporary credential requires multi-factor authentication, but no MFA code callback was provided.`, {\n                    tryNextLink: false,\n                    logger,\n                });\n            }\n            params.TokenCode = await options.mfaCodeProvider(params?.SerialNumber);\n        }\n        const { AssumeRoleCommand, STSClient } = await import(\"./loadSts\");\n        if (!stsClient) {\n            const defaultCredentialsOrError = typeof credentialDefaultProvider === \"function\" ? credentialDefaultProvider() : undefined;\n            const credentialSources = [\n                options.masterCredentials,\n                options.clientConfig?.credentials,\n                void callerClientConfig?.credentials,\n                callerClientConfig?.credentialDefaultProvider?.(),\n                defaultCredentialsOrError,\n            ];\n            let credentialSource = \"STS client default credentials\";\n            if (credentialSources[0]) {\n                credentialSource = \"options.masterCredentials\";\n            }\n            else if (credentialSources[1]) {\n                credentialSource = \"options.clientConfig.credentials\";\n            }\n            else if (credentialSources[2]) {\n                credentialSource = \"caller client's credentials\";\n                throw new Error(\"fromTemporaryCredentials recursion in callerClientConfig.credentials\");\n            }\n            else if (credentialSources[3]) {\n                credentialSource = \"caller client's credentialDefaultProvider\";\n            }\n            else if (credentialSources[4]) {\n                credentialSource = \"AWS SDK default credentials\";\n            }\n            const regionSources = [options.clientConfig?.region, callerClientConfig?.region, ASSUME_ROLE_DEFAULT_REGION];\n            let regionSource = \"default partition's default region\";\n            if (regionSources[0]) {\n                regionSource = \"options.clientConfig.region\";\n            }\n            else if (regionSources[1]) {\n                regionSource = \"caller client's region\";\n            }\n            const requestHandlerSources = [\n                filterRequestHandler(options.clientConfig?.requestHandler),\n                filterRequestHandler(callerClientConfig?.requestHandler),\n            ];\n            let requestHandlerSource = \"STS default requestHandler\";\n            if (requestHandlerSources[0]) {\n                requestHandlerSource = \"options.clientConfig.requestHandler\";\n            }\n            else if (requestHandlerSources[1]) {\n                requestHandlerSource = \"caller client's requestHandler\";\n            }\n            logger?.debug?.(`@aws-sdk/credential-providers - fromTemporaryCredentials STS client init with ` +\n                `${regionSource}=${await normalizeProvider(coalesce(regionSources))()}, ${credentialSource}, ${requestHandlerSource}.`);\n            stsClient = new STSClient({\n                ...options.clientConfig,\n                credentials: coalesce(credentialSources),\n                logger,\n                profile: options.clientConfig?.profile ?? callerClientConfig?.profile,\n                region: coalesce(regionSources),\n                requestHandler: coalesce(requestHandlerSources),\n            });\n        }\n        if (options.clientPlugins) {\n            for (const plugin of options.clientPlugins) {\n                stsClient.middlewareStack.use(plugin);\n            }\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new CredentialsProviderError(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`, {\n                logger,\n            });\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            credentialScope: Credentials.CredentialScope,\n        };\n    };\n};\nconst filterRequestHandler = (requestHandler) => {\n    return requestHandler?.metadata?.handlerProtocol === \"h2\" ? undefined : requestHandler;\n};\nconst coalesce = (args) => {\n    for (const item of args) {\n        if (item !== undefined) {\n            return item;\n        }\n    }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1556, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/fromTemporaryCredentials.js"],"sourcesContent":["import { fromNodeProviderChain } from \"./fromNodeProviderChain\";\nimport { fromTemporaryCredentials as fromTemporaryCredentialsBase } from \"./fromTemporaryCredentials.base\";\nexport const fromTemporaryCredentials = (options) => {\n    return fromTemporaryCredentialsBase(options, fromNodeProviderChain);\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,MAAM,2BAA2B,CAAC;IACrC,OAAO,CAAA,GAAA,2MAAA,CAAA,2BAA4B,AAAD,EAAE,SAAS,gMAAA,CAAA,wBAAqB;AACtE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1572, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/fromTokenFile.js"],"sourcesContent":["import { fromTokenFile as _fromTokenFile } from \"@aws-sdk/credential-provider-web-identity\";\nexport const fromTokenFile = (init = {}) => _fromTokenFile({\n    ...init,\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM,gBAAgB,CAAC,OAAO,CAAC,CAAC,GAAK,CAAA,GAAA,0MAAA,CAAA,gBAAc,AAAD,EAAE;QACvD,GAAG,IAAI;IACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1587, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-providers/dist-es/fromWebToken.js"],"sourcesContent":["import { fromWebToken as _fromWebToken } from \"@aws-sdk/credential-provider-web-identity\";\nexport const fromWebToken = (init) => _fromWebToken({\n    ...init,\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM,eAAe,CAAC,OAAS,CAAA,GAAA,yMAAA,CAAA,eAAa,AAAD,EAAE;QAChD,GAAG,IAAI;IACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1665, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-cognito-identity/dist-es/resolveLogins.js"],"sourcesContent":["export function resolveLogins(logins) {\n    return Promise.all(Object.keys(logins).reduce((arr, name) => {\n        const tokenOrProvider = logins[name];\n        if (typeof tokenOrProvider === \"string\") {\n            arr.push([name, tokenOrProvider]);\n        }\n        else {\n            arr.push(tokenOrProvider().then((token) => [name, token]));\n        }\n        return arr;\n    }, [])).then((resolvedPairs) => resolvedPairs.reduce((logins, [key, value]) => {\n        logins[key] = value;\n        return logins;\n    }, {}));\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,cAAc,MAAM;IAChC,OAAO,QAAQ,GAAG,CAAC,OAAO,IAAI,CAAC,QAAQ,MAAM,CAAC,CAAC,KAAK;QAChD,MAAM,kBAAkB,MAAM,CAAC,KAAK;QACpC,IAAI,OAAO,oBAAoB,UAAU;YACrC,IAAI,IAAI,CAAC;gBAAC;gBAAM;aAAgB;QACpC,OACK;YACD,IAAI,IAAI,CAAC,kBAAkB,IAAI,CAAC,CAAC,QAAU;oBAAC;oBAAM;iBAAM;QAC5D;QACA,OAAO;IACX,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,gBAAkB,cAAc,MAAM,CAAC,CAAC,QAAQ,CAAC,KAAK,MAAM;YACtE,MAAM,CAAC,IAAI,GAAG;YACd,OAAO;QACX,GAAG,CAAC;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1694, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-cognito-identity/dist-es/fromCognitoIdentity.js"],"sourcesContent":["import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { resolveLogins } from \"./resolveLogins\";\nexport function fromCognitoIdentity(parameters) {\n    return async (awsIdentityProperties) => {\n        parameters.logger?.debug(\"@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity\");\n        const { GetCredentialsForIdentityCommand, CognitoIdentityClient } = await import(\"./loadCognitoIdentity\");\n        const fromConfigs = (property) => parameters.clientConfig?.[property] ??\n            parameters.parentClientConfig?.[property] ??\n            awsIdentityProperties?.callerClientConfig?.[property];\n        const { Credentials: { AccessKeyId = throwOnMissingAccessKeyId(parameters.logger), Expiration, SecretKey = throwOnMissingSecretKey(parameters.logger), SessionToken, } = throwOnMissingCredentials(parameters.logger), } = await (parameters.client ??\n            new CognitoIdentityClient(Object.assign({}, parameters.clientConfig ?? {}, {\n                region: fromConfigs(\"region\"),\n                profile: fromConfigs(\"profile\"),\n            }))).send(new GetCredentialsForIdentityCommand({\n            CustomRoleArn: parameters.customRoleArn,\n            IdentityId: parameters.identityId,\n            Logins: parameters.logins ? await resolveLogins(parameters.logins) : undefined,\n        }));\n        return {\n            identityId: parameters.identityId,\n            accessKeyId: AccessKeyId,\n            secretAccessKey: SecretKey,\n            sessionToken: SessionToken,\n            expiration: Expiration,\n        };\n    };\n}\nfunction throwOnMissingAccessKeyId(logger) {\n    throw new CredentialsProviderError(\"Response from Amazon Cognito contained no access key ID\", { logger });\n}\nfunction throwOnMissingCredentials(logger) {\n    throw new CredentialsProviderError(\"Response from Amazon Cognito contained no credentials\", { logger });\n}\nfunction throwOnMissingSecretKey(logger) {\n    throw new CredentialsProviderError(\"Response from Amazon Cognito contained no secret key\", { logger });\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AACO,SAAS,oBAAoB,UAAU;IAC1C,OAAO,OAAO;QACV,WAAW,MAAM,EAAE,MAAM;QACzB,MAAM,EAAE,gCAAgC,EAAE,qBAAqB,EAAE,GAAG;QACpE,MAAM,cAAc,CAAC,WAAa,WAAW,YAAY,EAAE,CAAC,SAAS,IACjE,WAAW,kBAAkB,EAAE,CAAC,SAAS,IACzC,uBAAuB,oBAAoB,CAAC,SAAS;QACzD,MAAM,EAAE,aAAa,EAAE,cAAc,0BAA0B,WAAW,MAAM,CAAC,EAAE,UAAU,EAAE,YAAY,wBAAwB,WAAW,MAAM,CAAC,EAAE,YAAY,EAAG,GAAG,0BAA0B,WAAW,MAAM,CAAC,EAAG,GAAG,MAAM,CAAC,WAAW,MAAM,IAC/O,IAAI,sBAAsB,OAAO,MAAM,CAAC,CAAC,GAAG,WAAW,YAAY,IAAI,CAAC,GAAG;YACvE,QAAQ,YAAY;YACpB,SAAS,YAAY;QACzB,GAAG,EAAE,IAAI,CAAC,IAAI,iCAAiC;YAC/C,eAAe,WAAW,aAAa;YACvC,YAAY,WAAW,UAAU;YACjC,QAAQ,WAAW,MAAM,GAAG,MAAM,CAAA,GAAA,8MAAA,CAAA,gBAAa,AAAD,EAAE,WAAW,MAAM,IAAI;QACzE;QACA,OAAO;YACH,YAAY,WAAW,UAAU;YACjC,aAAa;YACb,iBAAiB;YACjB,cAAc;YACd,YAAY;QAChB;IACJ;AACJ;AACA,SAAS,0BAA0B,MAAM;IACrC,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,2DAA2D;QAAE;IAAO;AAC3G;AACA,SAAS,0BAA0B,MAAM;IACrC,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,yDAAyD;QAAE;IAAO;AACzG;AACA,SAAS,wBAAwB,MAAM;IACnC,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,wDAAwD;QAAE;IAAO;AACxG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1745, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-cognito-identity/dist-es/IndexedDbStorage.js"],"sourcesContent":["const STORE_NAME = \"IdentityIds\";\nexport class IndexedDbStorage {\n    dbName;\n    constructor(dbName = \"aws:cognito-identity-ids\") {\n        this.dbName = dbName;\n    }\n    getItem(key) {\n        return this.withObjectStore(\"readonly\", (store) => {\n            const req = store.get(key);\n            return new Promise((resolve) => {\n                req.onerror = () => resolve(null);\n                req.onsuccess = () => resolve(req.result ? req.result.value : null);\n            });\n        }).catch(() => null);\n    }\n    removeItem(key) {\n        return this.withObjectStore(\"readwrite\", (store) => {\n            const req = store.delete(key);\n            return new Promise((resolve, reject) => {\n                req.onerror = () => reject(req.error);\n                req.onsuccess = () => resolve();\n            });\n        });\n    }\n    setItem(id, value) {\n        return this.withObjectStore(\"readwrite\", (store) => {\n            const req = store.put({ id, value });\n            return new Promise((resolve, reject) => {\n                req.onerror = () => reject(req.error);\n                req.onsuccess = () => resolve();\n            });\n        });\n    }\n    getDb() {\n        const openDbRequest = self.indexedDB.open(this.dbName, 1);\n        return new Promise((resolve, reject) => {\n            openDbRequest.onsuccess = () => {\n                resolve(openDbRequest.result);\n            };\n            openDbRequest.onerror = () => {\n                reject(openDbRequest.error);\n            };\n            openDbRequest.onblocked = () => {\n                reject(new Error(\"Unable to access DB\"));\n            };\n            openDbRequest.onupgradeneeded = () => {\n                const db = openDbRequest.result;\n                db.onerror = () => {\n                    reject(new Error(\"Failed to create object store\"));\n                };\n                db.createObjectStore(STORE_NAME, { keyPath: \"id\" });\n            };\n        });\n    }\n    withObjectStore(mode, action) {\n        return this.getDb().then((db) => {\n            const tx = db.transaction(STORE_NAME, mode);\n            tx.oncomplete = () => db.close();\n            return new Promise((resolve, reject) => {\n                tx.onerror = () => reject(tx.error);\n                resolve(action(tx.objectStore(STORE_NAME)));\n            }).catch((err) => {\n                db.close();\n                throw err;\n            });\n        });\n    }\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,aAAa;AACZ,MAAM;IACT,OAAO;IACP,YAAY,SAAS,0BAA0B,CAAE;QAC7C,IAAI,CAAC,MAAM,GAAG;IAClB;IACA,QAAQ,GAAG,EAAE;QACT,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC;YACrC,MAAM,MAAM,MAAM,GAAG,CAAC;YACtB,OAAO,IAAI,QAAQ,CAAC;gBAChB,IAAI,OAAO,GAAG,IAAM,QAAQ;gBAC5B,IAAI,SAAS,GAAG,IAAM,QAAQ,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,GAAG;YAClE;QACJ,GAAG,KAAK,CAAC,IAAM;IACnB;IACA,WAAW,GAAG,EAAE;QACZ,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;YACtC,MAAM,MAAM,MAAM,MAAM,CAAC;YACzB,OAAO,IAAI,QAAQ,CAAC,SAAS;gBACzB,IAAI,OAAO,GAAG,IAAM,OAAO,IAAI,KAAK;gBACpC,IAAI,SAAS,GAAG,IAAM;YAC1B;QACJ;IACJ;IACA,QAAQ,EAAE,EAAE,KAAK,EAAE;QACf,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;YACtC,MAAM,MAAM,MAAM,GAAG,CAAC;gBAAE;gBAAI;YAAM;YAClC,OAAO,IAAI,QAAQ,CAAC,SAAS;gBACzB,IAAI,OAAO,GAAG,IAAM,OAAO,IAAI,KAAK;gBACpC,IAAI,SAAS,GAAG,IAAM;YAC1B;QACJ;IACJ;IACA,QAAQ;QACJ,MAAM,gBAAgB,KAAK,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;QACvD,OAAO,IAAI,QAAQ,CAAC,SAAS;YACzB,cAAc,SAAS,GAAG;gBACtB,QAAQ,cAAc,MAAM;YAChC;YACA,cAAc,OAAO,GAAG;gBACpB,OAAO,cAAc,KAAK;YAC9B;YACA,cAAc,SAAS,GAAG;gBACtB,OAAO,IAAI,MAAM;YACrB;YACA,cAAc,eAAe,GAAG;gBAC5B,MAAM,KAAK,cAAc,MAAM;gBAC/B,GAAG,OAAO,GAAG;oBACT,OAAO,IAAI,MAAM;gBACrB;gBACA,GAAG,iBAAiB,CAAC,YAAY;oBAAE,SAAS;gBAAK;YACrD;QACJ;IACJ;IACA,gBAAgB,IAAI,EAAE,MAAM,EAAE;QAC1B,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;YACtB,MAAM,KAAK,GAAG,WAAW,CAAC,YAAY;YACtC,GAAG,UAAU,GAAG,IAAM,GAAG,KAAK;YAC9B,OAAO,IAAI,QAAQ,CAAC,SAAS;gBACzB,GAAG,OAAO,GAAG,IAAM,OAAO,GAAG,KAAK;gBAClC,QAAQ,OAAO,GAAG,WAAW,CAAC;YAClC,GAAG,KAAK,CAAC,CAAC;gBACN,GAAG,KAAK;gBACR,MAAM;YACV;QACJ;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1827, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-cognito-identity/dist-es/InMemoryStorage.js"],"sourcesContent":["export class InMemoryStorage {\n    store;\n    constructor(store = {}) {\n        this.store = store;\n    }\n    getItem(key) {\n        if (key in this.store) {\n            return this.store[key];\n        }\n        return null;\n    }\n    removeItem(key) {\n        delete this.store[key];\n    }\n    setItem(key, value) {\n        this.store[key] = value;\n    }\n}\n"],"names":[],"mappings":";;;AAAO,MAAM;IACT,MAAM;IACN,YAAY,QAAQ,CAAC,CAAC,CAAE;QACpB,IAAI,CAAC,KAAK,GAAG;IACjB;IACA,QAAQ,GAAG,EAAE;QACT,IAAI,OAAO,IAAI,CAAC,KAAK,EAAE;YACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI;QAC1B;QACA,OAAO;IACX;IACA,WAAW,GAAG,EAAE;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI;IAC1B;IACA,QAAQ,GAAG,EAAE,KAAK,EAAE;QAChB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG;IACtB;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1854, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-cognito-identity/dist-es/localStorage.js"],"sourcesContent":["import { IndexedDbStorage } from \"./IndexedDbStorage\";\nimport { InMemoryStorage } from \"./InMemoryStorage\";\nconst inMemoryStorage = new InMemoryStorage();\nexport function localStorage() {\n    if (typeof self === \"object\" && self.indexedDB) {\n        return new IndexedDbStorage();\n    }\n    if (typeof window === \"object\" && window.localStorage) {\n        return window.localStorage;\n    }\n    return inMemoryStorage;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA,MAAM,kBAAkB,IAAI,gNAAA,CAAA,kBAAe;AACpC,SAAS;IACZ,IAAI,OAAO,SAAS,YAAY,KAAK,SAAS,EAAE;QAC5C,OAAO,IAAI,iNAAA,CAAA,mBAAgB;IAC/B;IACA,uCAAuD;;IAEvD;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1877, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-cognito-identity/dist-es/fromCognitoIdentityPool.js"],"sourcesContent":["import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { fromCognitoIdentity } from \"./fromCognitoIdentity\";\nimport { localStorage } from \"./localStorage\";\nimport { resolveLogins } from \"./resolveLogins\";\nexport function fromCognitoIdentityPool({ accountId, cache = localStorage(), client, clientConfig, customRoleArn, identityPoolId, logins, userIdentifier = !logins || Object.keys(logins).length === 0 ? \"ANONYMOUS\" : undefined, logger, parentClientConfig, }) {\n    logger?.debug(\"@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity\");\n    const cacheKey = userIdentifier\n        ? `aws:cognito-identity-credentials:${identityPoolId}:${userIdentifier}`\n        : undefined;\n    let provider = async (awsIdentityProperties) => {\n        const { GetIdCommand, CognitoIdentityClient } = await import(\"./loadCognitoIdentity\");\n        const fromConfigs = (property) => clientConfig?.[property] ??\n            parentClientConfig?.[property] ??\n            awsIdentityProperties?.callerClientConfig?.[property];\n        const _client = client ??\n            new CognitoIdentityClient(Object.assign({}, clientConfig ?? {}, {\n                region: fromConfigs(\"region\"),\n                profile: fromConfigs(\"profile\"),\n            }));\n        let identityId = (cacheKey && (await cache.getItem(cacheKey)));\n        if (!identityId) {\n            const { IdentityId = throwOnMissingId(logger) } = await _client.send(new GetIdCommand({\n                AccountId: accountId,\n                IdentityPoolId: identityPoolId,\n                Logins: logins ? await resolveLogins(logins) : undefined,\n            }));\n            identityId = IdentityId;\n            if (cacheKey) {\n                Promise.resolve(cache.setItem(cacheKey, identityId)).catch(() => { });\n            }\n        }\n        provider = fromCognitoIdentity({\n            client: _client,\n            customRoleArn,\n            logins,\n            identityId,\n        });\n        return provider(awsIdentityProperties);\n    };\n    return (awsIdentityProperties) => provider(awsIdentityProperties).catch(async (err) => {\n        if (cacheKey) {\n            Promise.resolve(cache.removeItem(cacheKey)).catch(() => { });\n        }\n        throw err;\n    });\n}\nfunction throwOnMissingId(logger) {\n    throw new CredentialsProviderError(\"Response from Amazon Cognito contained no identity ID\", { logger });\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AACA;AACA;;;;;AACO,SAAS,wBAAwB,EAAE,SAAS,EAAE,QAAQ,CAAA,GAAA,6MAAA,CAAA,eAAY,AAAD,GAAG,EAAE,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,cAAc,EAAE,MAAM,EAAE,iBAAiB,CAAC,UAAU,OAAO,IAAI,CAAC,QAAQ,MAAM,KAAK,IAAI,cAAc,SAAS,EAAE,MAAM,EAAE,kBAAkB,EAAG;IAC3P,QAAQ,MAAM;IACd,MAAM,WAAW,iBACX,CAAC,iCAAiC,EAAE,eAAe,CAAC,EAAE,gBAAgB,GACtE;IACN,IAAI,WAAW,OAAO;QAClB,MAAM,EAAE,YAAY,EAAE,qBAAqB,EAAE,GAAG;QAChD,MAAM,cAAc,CAAC,WAAa,cAAc,CAAC,SAAS,IACtD,oBAAoB,CAAC,SAAS,IAC9B,uBAAuB,oBAAoB,CAAC,SAAS;QACzD,MAAM,UAAU,UACZ,IAAI,sBAAsB,OAAO,MAAM,CAAC,CAAC,GAAG,gBAAgB,CAAC,GAAG;YAC5D,QAAQ,YAAY;YACpB,SAAS,YAAY;QACzB;QACJ,IAAI,aAAc,YAAa,MAAM,MAAM,OAAO,CAAC;QACnD,IAAI,CAAC,YAAY;YACb,MAAM,EAAE,aAAa,iBAAiB,OAAO,EAAE,GAAG,MAAM,QAAQ,IAAI,CAAC,IAAI,aAAa;gBAClF,WAAW;gBACX,gBAAgB;gBAChB,QAAQ,SAAS,MAAM,CAAA,GAAA,8MAAA,CAAA,gBAAa,AAAD,EAAE,UAAU;YACnD;YACA,aAAa;YACb,IAAI,UAAU;gBACV,QAAQ,OAAO,CAAC,MAAM,OAAO,CAAC,UAAU,aAAa,KAAK,CAAC,KAAQ;YACvE;QACJ;QACA,WAAW,CAAA,GAAA,oNAAA,CAAA,sBAAmB,AAAD,EAAE;YAC3B,QAAQ;YACR;YACA;YACA;QACJ;QACA,OAAO,SAAS;IACpB;IACA,OAAO,CAAC,wBAA0B,SAAS,uBAAuB,KAAK,CAAC,OAAO;YAC3E,IAAI,UAAU;gBACV,QAAQ,OAAO,CAAC,MAAM,UAAU,CAAC,WAAW,KAAK,CAAC,KAAQ;YAC9D;YACA,MAAM;QACV;AACJ;AACA,SAAS,iBAAiB,MAAM;IAC5B,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,yDAAyD;QAAE;IAAO;AACzG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1937, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-env/dist-es/fromEnv.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { CredentialsProviderError } from \"@smithy/property-provider\";\nexport const ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nexport const ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nexport const ENV_SESSION = \"AWS_SESSION_TOKEN\";\nexport const ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nexport const ENV_CREDENTIAL_SCOPE = \"AWS_CREDENTIAL_SCOPE\";\nexport const ENV_ACCOUNT_ID = \"AWS_ACCOUNT_ID\";\nexport const fromEnv = (init) => async () => {\n    init?.logger?.debug(\"@aws-sdk/credential-provider-env - fromEnv\");\n    const accessKeyId = process.env[ENV_KEY];\n    const secretAccessKey = process.env[ENV_SECRET];\n    const sessionToken = process.env[ENV_SESSION];\n    const expiry = process.env[ENV_EXPIRATION];\n    const credentialScope = process.env[ENV_CREDENTIAL_SCOPE];\n    const accountId = process.env[ENV_ACCOUNT_ID];\n    if (accessKeyId && secretAccessKey) {\n        const credentials = {\n            accessKeyId,\n            secretAccessKey,\n            ...(sessionToken && { sessionToken }),\n            ...(expiry && { expiration: new Date(expiry) }),\n            ...(credentialScope && { credentialScope }),\n            ...(accountId && { accountId }),\n        };\n        setCredentialFeature(credentials, \"CREDENTIALS_ENV_VARS\", \"g\");\n        return credentials;\n    }\n    throw new CredentialsProviderError(\"Unable to find environment variable credentials.\", { logger: init?.logger });\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AAAA;;;AACO,MAAM,UAAU;AAChB,MAAM,aAAa;AACnB,MAAM,cAAc;AACpB,MAAM,iBAAiB;AACvB,MAAM,uBAAuB;AAC7B,MAAM,iBAAiB;AACvB,MAAM,UAAU,CAAC,OAAS;QAC7B,MAAM,QAAQ,MAAM;QACpB,MAAM,cAAc,QAAQ,GAAG,CAAC,QAAQ;QACxC,MAAM,kBAAkB,QAAQ,GAAG,CAAC,WAAW;QAC/C,MAAM,eAAe,QAAQ,GAAG,CAAC,YAAY;QAC7C,MAAM,SAAS,QAAQ,GAAG,CAAC,eAAe;QAC1C,MAAM,kBAAkB,QAAQ,GAAG,CAAC,qBAAqB;QACzD,MAAM,YAAY,QAAQ,GAAG,CAAC,eAAe;QAC7C,IAAI,eAAe,iBAAiB;YAChC,MAAM,cAAc;gBAChB;gBACA;gBACA,GAAI,gBAAgB;oBAAE;gBAAa,CAAC;gBACpC,GAAI,UAAU;oBAAE,YAAY,IAAI,KAAK;gBAAQ,CAAC;gBAC9C,GAAI,mBAAmB;oBAAE;gBAAgB,CAAC;gBAC1C,GAAI,aAAa;oBAAE;gBAAU,CAAC;YAClC;YACA,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,aAAa,wBAAwB;YAC1D,OAAO;QACX;QACA,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,oDAAoD;YAAE,QAAQ,MAAM;QAAO;IAClH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1995, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-env/dist-es/index.js"],"sourcesContent":["export * from \"./fromEnv\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2013, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-ini/dist-es/resolveCredentialSource.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { chain, CredentialsProviderError } from \"@smithy/property-provider\";\nexport const resolveCredentialSource = (credentialSource, profileName, logger) => {\n    const sourceProvidersMap = {\n        EcsContainer: async (options) => {\n            const { fromHttp } = await import(\"@aws-sdk/credential-provider-http\");\n            const { fromContainerMetadata } = await import(\"@smithy/credential-provider-imds\");\n            logger?.debug(\"@aws-sdk/credential-provider-ini - credential_source is EcsContainer\");\n            return async () => chain(fromHttp(options ?? {}), fromContainerMetadata(options))().then(setNamedProvider);\n        },\n        Ec2InstanceMetadata: async (options) => {\n            logger?.debug(\"@aws-sdk/credential-provider-ini - credential_source is Ec2InstanceMetadata\");\n            const { fromInstanceMetadata } = await import(\"@smithy/credential-provider-imds\");\n            return async () => fromInstanceMetadata(options)().then(setNamedProvider);\n        },\n        Environment: async (options) => {\n            logger?.debug(\"@aws-sdk/credential-provider-ini - credential_source is Environment\");\n            const { fromEnv } = await import(\"@aws-sdk/credential-provider-env\");\n            return async () => fromEnv(options)().then(setNamedProvider);\n        },\n    };\n    if (credentialSource in sourceProvidersMap) {\n        return sourceProvidersMap[credentialSource];\n    }\n    else {\n        throw new CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` +\n            `expected EcsContainer or Ec2InstanceMetadata or Environment.`, { logger });\n    }\n};\nconst setNamedProvider = (creds) => setCredentialFeature(creds, \"CREDENTIALS_PROFILE_NAMED_PROVIDER\", \"p\");\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AAAA;;;AACO,MAAM,0BAA0B,CAAC,kBAAkB,aAAa;IACnE,MAAM,qBAAqB;QACvB,cAAc,OAAO;YACjB,MAAM,EAAE,QAAQ,EAAE,GAAG;YACrB,MAAM,EAAE,qBAAqB,EAAE,GAAG;YAClC,QAAQ,MAAM;YACd,OAAO,UAAY,CAAA,GAAA,yKAAA,CAAA,QAAK,AAAD,EAAE,SAAS,WAAW,CAAC,IAAI,sBAAsB,YAAY,IAAI,CAAC;QAC7F;QACA,qBAAqB,OAAO;YACxB,QAAQ,MAAM;YACd,MAAM,EAAE,oBAAoB,EAAE,GAAG;YACjC,OAAO,UAAY,qBAAqB,WAAW,IAAI,CAAC;QAC5D;QACA,aAAa,OAAO;YAChB,QAAQ,MAAM;YACd,MAAM,EAAE,OAAO,EAAE,GAAG;YACpB,OAAO,UAAY,QAAQ,WAAW,IAAI,CAAC;QAC/C;IACJ;IACA,IAAI,oBAAoB,oBAAoB;QACxC,OAAO,kBAAkB,CAAC,iBAAiB;IAC/C,OACK;QACD,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC,yCAAyC,EAAE,YAAY,MAAM,EAAE,iBAAiB,EAAE,CAAC,GACnH,CAAC,4DAA4D,CAAC,EAAE;YAAE;QAAO;IACjF;AACJ;AACA,MAAM,mBAAmB,CAAC,QAAU,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO,sCAAsC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2056, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-ini/dist-es/resolveAssumeRoleCredentials.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getProfileName } from \"@smithy/shared-ini-file-loader\";\nimport { resolveCredentialSource } from \"./resolveCredentialSource\";\nimport { resolveProfileData } from \"./resolveProfileData\";\nexport const isAssumeRoleProfile = (arg, { profile = \"default\", logger } = {}) => {\n    return (Boolean(arg) &&\n        typeof arg === \"object\" &&\n        typeof arg.role_arn === \"string\" &&\n        [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1 &&\n        [\"undefined\", \"string\"].indexOf(typeof arg.external_id) > -1 &&\n        [\"undefined\", \"string\"].indexOf(typeof arg.mfa_serial) > -1 &&\n        (isAssumeRoleWithSourceProfile(arg, { profile, logger }) || isCredentialSourceProfile(arg, { profile, logger })));\n};\nconst isAssumeRoleWithSourceProfile = (arg, { profile, logger }) => {\n    const withSourceProfile = typeof arg.source_profile === \"string\" && typeof arg.credential_source === \"undefined\";\n    if (withSourceProfile) {\n        logger?.debug?.(`    ${profile} isAssumeRoleWithSourceProfile source_profile=${arg.source_profile}`);\n    }\n    return withSourceProfile;\n};\nconst isCredentialSourceProfile = (arg, { profile, logger }) => {\n    const withProviderProfile = typeof arg.credential_source === \"string\" && typeof arg.source_profile === \"undefined\";\n    if (withProviderProfile) {\n        logger?.debug?.(`    ${profile} isCredentialSourceProfile credential_source=${arg.credential_source}`);\n    }\n    return withProviderProfile;\n};\nexport const resolveAssumeRoleCredentials = async (profileName, profiles, options, visitedProfiles = {}) => {\n    options.logger?.debug(\"@aws-sdk/credential-provider-ini - resolveAssumeRoleCredentials (STS)\");\n    const profileData = profiles[profileName];\n    const { source_profile, region } = profileData;\n    if (!options.roleAssumer) {\n        const { getDefaultRoleAssumer } = await import(\"@aws-sdk/nested-clients/sts\");\n        options.roleAssumer = getDefaultRoleAssumer({\n            ...options.clientConfig,\n            credentialProviderLogger: options.logger,\n            parentClientConfig: {\n                ...options?.parentClientConfig,\n                region: region ?? options?.parentClientConfig?.region,\n            },\n        }, options.clientPlugins);\n    }\n    if (source_profile && source_profile in visitedProfiles) {\n        throw new CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile` +\n            ` ${getProfileName(options)}. Profiles visited: ` +\n            Object.keys(visitedProfiles).join(\", \"), { logger: options.logger });\n    }\n    options.logger?.debug(`@aws-sdk/credential-provider-ini - finding credential resolver using ${source_profile ? `source_profile=[${source_profile}]` : `profile=[${profileName}]`}`);\n    const sourceCredsProvider = source_profile\n        ? resolveProfileData(source_profile, profiles, options, {\n            ...visitedProfiles,\n            [source_profile]: true,\n        }, isCredentialSourceWithoutRoleArn(profiles[source_profile] ?? {}))\n        : (await resolveCredentialSource(profileData.credential_source, profileName, options.logger)(options))();\n    if (isCredentialSourceWithoutRoleArn(profileData)) {\n        return sourceCredsProvider.then((creds) => setCredentialFeature(creds, \"CREDENTIALS_PROFILE_SOURCE_PROFILE\", \"o\"));\n    }\n    else {\n        const params = {\n            RoleArn: profileData.role_arn,\n            RoleSessionName: profileData.role_session_name || `aws-sdk-js-${Date.now()}`,\n            ExternalId: profileData.external_id,\n            DurationSeconds: parseInt(profileData.duration_seconds || \"3600\", 10),\n        };\n        const { mfa_serial } = profileData;\n        if (mfa_serial) {\n            if (!options.mfaCodeProvider) {\n                throw new CredentialsProviderError(`Profile ${profileName} requires multi-factor authentication, but no MFA code callback was provided.`, { logger: options.logger, tryNextLink: false });\n            }\n            params.SerialNumber = mfa_serial;\n            params.TokenCode = await options.mfaCodeProvider(mfa_serial);\n        }\n        const sourceCreds = await sourceCredsProvider;\n        return options.roleAssumer(sourceCreds, params).then((creds) => setCredentialFeature(creds, \"CREDENTIALS_PROFILE_SOURCE_PROFILE\", \"o\"));\n    }\n};\nconst isCredentialSourceWithoutRoleArn = (section) => {\n    return !section.role_arn && !!section.credential_source;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2162, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-ini/dist-es/resolveProcessCredentials.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nexport const isProcessProfile = (arg) => Boolean(arg) && typeof arg === \"object\" && typeof arg.credential_process === \"string\";\nexport const resolveProcessCredentials = async (options, profile) => import(\"@aws-sdk/credential-provider-process\").then(({ fromProcess }) => fromProcess({\n    ...options,\n    profile,\n})().then((creds) => setCredentialFeature(creds, \"CREDENTIALS_PROFILE_PROCESS\", \"v\")));\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,mBAAmB,CAAC,MAAQ,QAAQ,QAAQ,OAAO,QAAQ,YAAY,OAAO,IAAI,kBAAkB,KAAK;AAC/G,MAAM,4BAA4B,OAAO,SAAS,UAAY,wKAA+C,IAAI,CAAC,CAAC,EAAE,WAAW,EAAE,GAAK,YAAY;YACtJ,GAAG,OAAO;YACV;QACJ,KAAK,IAAI,CAAC,CAAC,QAAU,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO,+BAA+B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2179, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-ini/dist-es/resolveSsoCredentials.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nexport const resolveSsoCredentials = async (profile, profileData, options = {}) => {\n    const { fromSSO } = await import(\"@aws-sdk/credential-provider-sso\");\n    return fromSSO({\n        profile,\n        logger: options.logger,\n        parentClientConfig: options.parentClientConfig,\n        clientConfig: options.clientConfig,\n    })().then((creds) => {\n        if (profileData.sso_session) {\n            return setCredentialFeature(creds, \"CREDENTIALS_PROFILE_SSO\", \"r\");\n        }\n        else {\n            return setCredentialFeature(creds, \"CREDENTIALS_PROFILE_SSO_LEGACY\", \"t\");\n        }\n    });\n};\nexport const isSsoProfile = (arg) => arg &&\n    (typeof arg.sso_start_url === \"string\" ||\n        typeof arg.sso_account_id === \"string\" ||\n        typeof arg.sso_session === \"string\" ||\n        typeof arg.sso_region === \"string\" ||\n        typeof arg.sso_role_name === \"string\");\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,wBAAwB,OAAO,SAAS,aAAa,UAAU,CAAC,CAAC;IAC1E,MAAM,EAAE,OAAO,EAAE,GAAG;IACpB,OAAO,QAAQ;QACX;QACA,QAAQ,QAAQ,MAAM;QACtB,oBAAoB,QAAQ,kBAAkB;QAC9C,cAAc,QAAQ,YAAY;IACtC,KAAK,IAAI,CAAC,CAAC;QACP,IAAI,YAAY,WAAW,EAAE;YACzB,OAAO,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO,2BAA2B;QAClE,OACK;YACD,OAAO,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO,kCAAkC;QACzE;IACJ;AACJ;AACO,MAAM,eAAe,CAAC,MAAQ,OACjC,CAAC,OAAO,IAAI,aAAa,KAAK,YAC1B,OAAO,IAAI,cAAc,KAAK,YAC9B,OAAO,IAAI,WAAW,KAAK,YAC3B,OAAO,IAAI,UAAU,KAAK,YAC1B,OAAO,IAAI,aAAa,KAAK,QAAQ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2207, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-ini/dist-es/resolveStaticCredentials.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nexport const isStaticCredsProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.aws_access_key_id === \"string\" &&\n    typeof arg.aws_secret_access_key === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.aws_session_token) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.aws_account_id) > -1;\nexport const resolveStaticCredentials = async (profile, options) => {\n    options?.logger?.debug(\"@aws-sdk/credential-provider-ini - resolveStaticCredentials\");\n    const credentials = {\n        accessKeyId: profile.aws_access_key_id,\n        secretAccessKey: profile.aws_secret_access_key,\n        sessionToken: profile.aws_session_token,\n        ...(profile.aws_credential_scope && { credentialScope: profile.aws_credential_scope }),\n        ...(profile.aws_account_id && { accountId: profile.aws_account_id }),\n    };\n    return setCredentialFeature(credentials, \"CREDENTIALS_PROFILE\", \"n\");\n};\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,uBAAuB,CAAC,MAAQ,QAAQ,QACjD,OAAO,QAAQ,YACf,OAAO,IAAI,iBAAiB,KAAK,YACjC,OAAO,IAAI,qBAAqB,KAAK,YACrC;QAAC;QAAa;KAAS,CAAC,OAAO,CAAC,OAAO,IAAI,iBAAiB,IAAI,CAAC,KACjE;QAAC;QAAa;KAAS,CAAC,OAAO,CAAC,OAAO,IAAI,cAAc,IAAI,CAAC;AAC3D,MAAM,2BAA2B,OAAO,SAAS;IACpD,SAAS,QAAQ,MAAM;IACvB,MAAM,cAAc;QAChB,aAAa,QAAQ,iBAAiB;QACtC,iBAAiB,QAAQ,qBAAqB;QAC9C,cAAc,QAAQ,iBAAiB;QACvC,GAAI,QAAQ,oBAAoB,IAAI;YAAE,iBAAiB,QAAQ,oBAAoB;QAAC,CAAC;QACrF,GAAI,QAAQ,cAAc,IAAI;YAAE,WAAW,QAAQ,cAAc;QAAC,CAAC;IACvE;IACA,OAAO,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,aAAa,uBAAuB;AACpE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2241, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-ini/dist-es/resolveWebIdentityCredentials.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nexport const isWebIdentityProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.web_identity_token_file === \"string\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1;\nexport const resolveWebIdentityCredentials = async (profile, options) => import(\"@aws-sdk/credential-provider-web-identity\").then(({ fromTokenFile }) => fromTokenFile({\n    webIdentityTokenFile: profile.web_identity_token_file,\n    roleArn: profile.role_arn,\n    roleSessionName: profile.role_session_name,\n    roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity,\n    logger: options.logger,\n    parentClientConfig: options.parentClientConfig,\n})().then((creds) => setCredentialFeature(creds, \"CREDENTIALS_PROFILE_STS_WEB_ID_TOKEN\", \"q\")));\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,uBAAuB,CAAC,MAAQ,QAAQ,QACjD,OAAO,QAAQ,YACf,OAAO,IAAI,uBAAuB,KAAK,YACvC,OAAO,IAAI,QAAQ,KAAK,YACxB;QAAC;QAAa;KAAS,CAAC,OAAO,CAAC,OAAO,IAAI,iBAAiB,IAAI,CAAC;AAC9D,MAAM,gCAAgC,OAAO,SAAS,UAAY,6KAAoD,IAAI,CAAC,CAAC,EAAE,aAAa,EAAE,GAAK,cAAc;YACnK,sBAAsB,QAAQ,uBAAuB;YACrD,SAAS,QAAQ,QAAQ;YACzB,iBAAiB,QAAQ,iBAAiB;YAC1C,4BAA4B,QAAQ,0BAA0B;YAC9D,QAAQ,QAAQ,MAAM;YACtB,oBAAoB,QAAQ,kBAAkB;QAClD,KAAK,IAAI,CAAC,CAAC,QAAU,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO,wCAAwC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2265, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-ini/dist-es/resolveProfileData.js"],"sourcesContent":["import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { isAssumeRoleProfile, resolveAssumeRoleCredentials } from \"./resolveAssumeRoleCredentials\";\nimport { isProcessProfile, resolveProcessCredentials } from \"./resolveProcessCredentials\";\nimport { isSsoProfile, resolveSsoCredentials } from \"./resolveSsoCredentials\";\nimport { isStaticCredsProfile, resolveStaticCredentials } from \"./resolveStaticCredentials\";\nimport { isWebIdentityProfile, resolveWebIdentityCredentials } from \"./resolveWebIdentityCredentials\";\nexport const resolveProfileData = async (profileName, profiles, options, visitedProfiles = {}, isAssumeRoleRecursiveCall = false) => {\n    const data = profiles[profileName];\n    if (Object.keys(visitedProfiles).length > 0 && isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data, options);\n    }\n    if (isAssumeRoleRecursiveCall || isAssumeRoleProfile(data, { profile: profileName, logger: options.logger })) {\n        return resolveAssumeRoleCredentials(profileName, profiles, options, visitedProfiles);\n    }\n    if (isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data, options);\n    }\n    if (isWebIdentityProfile(data)) {\n        return resolveWebIdentityCredentials(data, options);\n    }\n    if (isProcessProfile(data)) {\n        return resolveProcessCredentials(options, profileName);\n    }\n    if (isSsoProfile(data)) {\n        return await resolveSsoCredentials(profileName, data, options);\n    }\n    throw new CredentialsProviderError(`Could not resolve credentials using profile: [${profileName}] in configuration/credentials file(s).`, { logger: options.logger });\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACO,MAAM,qBAAqB,OAAO,aAAa,UAAU,SAAS,kBAAkB,CAAC,CAAC,EAAE,4BAA4B,KAAK;IAC5H,MAAM,OAAO,QAAQ,CAAC,YAAY;IAClC,IAAI,OAAO,IAAI,CAAC,iBAAiB,MAAM,GAAG,KAAK,CAAA,GAAA,yMAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO;QACvE,OAAO,CAAA,GAAA,yMAAA,CAAA,2BAAwB,AAAD,EAAE,MAAM;IAC1C;IACA,IAAI,6BAA6B,CAAA,GAAA,6MAAA,CAAA,sBAAmB,AAAD,EAAE,MAAM;QAAE,SAAS;QAAa,QAAQ,QAAQ,MAAM;IAAC,IAAI;QAC1G,OAAO,CAAA,GAAA,6MAAA,CAAA,+BAA4B,AAAD,EAAE,aAAa,UAAU,SAAS;IACxE;IACA,IAAI,CAAA,GAAA,yMAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO;QAC5B,OAAO,CAAA,GAAA,yMAAA,CAAA,2BAAwB,AAAD,EAAE,MAAM;IAC1C;IACA,IAAI,CAAA,GAAA,8MAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO;QAC5B,OAAO,CAAA,GAAA,8MAAA,CAAA,gCAA6B,AAAD,EAAE,MAAM;IAC/C;IACA,IAAI,CAAA,GAAA,0MAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO;QACxB,OAAO,CAAA,GAAA,0MAAA,CAAA,4BAAyB,AAAD,EAAE,SAAS;IAC9C;IACA,IAAI,CAAA,GAAA,sMAAA,CAAA,eAAY,AAAD,EAAE,OAAO;QACpB,OAAO,MAAM,CAAA,GAAA,sMAAA,CAAA,wBAAqB,AAAD,EAAE,aAAa,MAAM;IAC1D;IACA,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC,8CAA8C,EAAE,YAAY,uCAAuC,CAAC,EAAE;QAAE,QAAQ,QAAQ,MAAM;IAAC;AACvK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2314, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-ini/dist-es/fromIni.js"],"sourcesContent":["import { getProfileName, parseKnownFiles } from \"@smithy/shared-ini-file-loader\";\nimport { resolveProfileData } from \"./resolveProfileData\";\nexport const fromIni = (_init = {}) => async ({ callerClientConfig } = {}) => {\n    const init = {\n        ..._init,\n        parentClientConfig: {\n            ...callerClientConfig,\n            ..._init.parentClientConfig,\n        },\n    };\n    init.logger?.debug(\"@aws-sdk/credential-provider-ini - fromIni\");\n    const profiles = await parseKnownFiles(init);\n    return resolveProfileData(getProfileName({\n        profile: _init.profile ?? callerClientConfig?.profile,\n    }), profiles, init);\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;AACA;;;AACO,MAAM,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAK,OAAO,EAAE,kBAAkB,EAAE,GAAG,CAAC,CAAC;QACrE,MAAM,OAAO;YACT,GAAG,KAAK;YACR,oBAAoB;gBAChB,GAAG,kBAAkB;gBACrB,GAAG,MAAM,kBAAkB;YAC/B;QACJ;QACA,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,WAAW,MAAM,CAAA,GAAA,8LAAA,CAAA,kBAAe,AAAD,EAAE;QACvC,OAAO,CAAA,GAAA,mMAAA,CAAA,qBAAkB,AAAD,EAAE,CAAA,GAAA,6LAAA,CAAA,iBAAc,AAAD,EAAE;YACrC,SAAS,MAAM,OAAO,IAAI,oBAAoB;QAClD,IAAI,UAAU;IAClB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2343, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-ini/dist-es/index.js"],"sourcesContent":["export * from \"./fromIni\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2361, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-node/dist-es/remoteProvider.js"],"sourcesContent":["import { chain, CredentialsProviderError } from \"@smithy/property-provider\";\nexport const ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexport const remoteProvider = async (init) => {\n    const { ENV_CMDS_FULL_URI, ENV_CMDS_RELATIVE_URI, fromContainerMetadata, fromInstanceMetadata } = await import(\"@smithy/credential-provider-imds\");\n    if (process.env[ENV_CMDS_RELATIVE_URI] || process.env[ENV_CMDS_FULL_URI]) {\n        init.logger?.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromHttp/fromContainerMetadata\");\n        const { fromHttp } = await import(\"@aws-sdk/credential-provider-http\");\n        return chain(fromHttp(init), fromContainerMetadata(init));\n    }\n    if (process.env[ENV_IMDS_DISABLED] && process.env[ENV_IMDS_DISABLED] !== \"false\") {\n        return async () => {\n            throw new CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\", { logger: init.logger });\n        };\n    }\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromInstanceMetadata\");\n    return fromInstanceMetadata(init);\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;;AACO,MAAM,oBAAoB;AAC1B,MAAM,iBAAiB,OAAO;IACjC,MAAM,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,GAAG;IAClG,IAAI,QAAQ,GAAG,CAAC,sBAAsB,IAAI,QAAQ,GAAG,CAAC,kBAAkB,EAAE;QACtE,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,EAAE,QAAQ,EAAE,GAAG;QACrB,OAAO,CAAA,GAAA,yKAAA,CAAA,QAAK,AAAD,EAAE,SAAS,OAAO,sBAAsB;IACvD;IACA,IAAI,QAAQ,GAAG,CAAC,kBAAkB,IAAI,QAAQ,GAAG,CAAC,kBAAkB,KAAK,SAAS;QAC9E,OAAO;YACH,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,iDAAiD;gBAAE,QAAQ,KAAK,MAAM;YAAC;QAC9G;IACJ;IACA,KAAK,MAAM,EAAE,MAAM;IACnB,OAAO,qBAAqB;AAChC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2393, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-node/dist-es/defaultProvider.js"],"sourcesContent":["import { ENV_KEY, ENV_SECRET, fromEnv } from \"@aws-sdk/credential-provider-env\";\nimport { chain, CredentialsProviderError, memoize } from \"@smithy/property-provider\";\nimport { ENV_PROFILE } from \"@smithy/shared-ini-file-loader\";\nimport { remoteProvider } from \"./remoteProvider\";\nlet multipleCredentialSourceWarningEmitted = false;\nexport const defaultProvider = (init = {}) => memoize(chain(async () => {\n    const profile = init.profile ?? process.env[ENV_PROFILE];\n    if (profile) {\n        const envStaticCredentialsAreSet = process.env[ENV_KEY] && process.env[ENV_SECRET];\n        if (envStaticCredentialsAreSet) {\n            if (!multipleCredentialSourceWarningEmitted) {\n                const warnFn = init.logger?.warn && init.logger?.constructor?.name !== \"NoOpLogger\" ? init.logger.warn : console.warn;\n                warnFn(`@aws-sdk/credential-provider-node - defaultProvider::fromEnv WARNING:\n    Multiple credential sources detected: \n    Both AWS_PROFILE and the pair AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY static credentials are set.\n    This SDK will proceed with the AWS_PROFILE value.\n    \n    However, a future version may change this behavior to prefer the ENV static credentials.\n    Please ensure that your environment only sets either the AWS_PROFILE or the\n    AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY pair.\n`);\n                multipleCredentialSourceWarningEmitted = true;\n            }\n        }\n        throw new CredentialsProviderError(\"AWS_PROFILE is set, skipping fromEnv provider.\", {\n            logger: init.logger,\n            tryNextLink: true,\n        });\n    }\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromEnv\");\n    return fromEnv(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromSSO\");\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoSession } = init;\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n        throw new CredentialsProviderError(\"Skipping SSO provider in default chain (inputs do not include SSO fields).\", { logger: init.logger });\n    }\n    const { fromSSO } = await import(\"@aws-sdk/credential-provider-sso\");\n    return fromSSO(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromIni\");\n    const { fromIni } = await import(\"@aws-sdk/credential-provider-ini\");\n    return fromIni(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromProcess\");\n    const { fromProcess } = await import(\"@aws-sdk/credential-provider-process\");\n    return fromProcess(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromTokenFile\");\n    const { fromTokenFile } = await import(\"@aws-sdk/credential-provider-web-identity\");\n    return fromTokenFile(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::remoteProvider\");\n    return (await remoteProvider(init))();\n}, async () => {\n    throw new CredentialsProviderError(\"Could not load credentials from any providers\", {\n        tryNextLink: false,\n        logger: init.logger,\n    });\n}), credentialsTreatedAsExpired, credentialsWillNeedRefresh);\nexport const credentialsWillNeedRefresh = (credentials) => credentials?.expiration !== undefined;\nexport const credentialsTreatedAsExpired = (credentials) => credentials?.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000;\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;;;;AACA,IAAI,yCAAyC;AACtC,MAAM,kBAAkB,CAAC,OAAO,CAAC,CAAC,GAAK,CAAA,GAAA,2KAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,yKAAA,CAAA,QAAK,AAAD,EAAE;QACxD,MAAM,UAAU,KAAK,OAAO,IAAI,QAAQ,GAAG,CAAC,6LAAA,CAAA,cAAW,CAAC;QACxD,IAAI,SAAS;YACT,MAAM,6BAA6B,QAAQ,GAAG,CAAC,wLAAA,CAAA,UAAO,CAAC,IAAI,QAAQ,GAAG,CAAC,wLAAA,CAAA,aAAU,CAAC;YAClF,IAAI,4BAA4B;gBAC5B,IAAI,CAAC,wCAAwC;oBACzC,MAAM,SAAS,KAAK,MAAM,EAAE,QAAQ,KAAK,MAAM,EAAE,aAAa,SAAS,eAAe,KAAK,MAAM,CAAC,IAAI,GAAG,QAAQ,IAAI;oBACrH,OAAO,CAAC;;;;;;;;AAQxB,CAAC;oBACe,yCAAyC;gBAC7C;YACJ;YACA,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,kDAAkD;gBACjF,QAAQ,KAAK,MAAM;gBACnB,aAAa;YACjB;QACJ;QACA,KAAK,MAAM,EAAE,MAAM;QACnB,OAAO,CAAA,GAAA,wLAAA,CAAA,UAAO,AAAD,EAAE;IACnB,GAAG;QACC,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG;QAC1E,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAa,CAAC,eAAe,CAAC,YAAY;YAC5E,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,8EAA8E;gBAAE,QAAQ,KAAK,MAAM;YAAC;QAC3I;QACA,MAAM,EAAE,OAAO,EAAE,GAAG;QACpB,OAAO,QAAQ;IACnB,GAAG;QACC,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,EAAE,OAAO,EAAE,GAAG;QACpB,OAAO,QAAQ;IACnB,GAAG;QACC,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,EAAE,WAAW,EAAE,GAAG;QACxB,OAAO,YAAY;IACvB,GAAG;QACC,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,EAAE,aAAa,EAAE,GAAG;QAC1B,OAAO,cAAc;IACzB,GAAG;QACC,KAAK,MAAM,EAAE,MAAM;QACnB,OAAO,CAAC,MAAM,CAAA,GAAA,gMAAA,CAAA,iBAAc,AAAD,EAAE,KAAK;IACtC,GAAG;QACC,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,iDAAiD;YAChF,aAAa;YACb,QAAQ,KAAK,MAAM;QACvB;IACJ,IAAI,6BAA6B;AAC1B,MAAM,6BAA6B,CAAC,cAAgB,aAAa,eAAe;AAChF,MAAM,8BAA8B,CAAC,cAAgB,aAAa,eAAe,aAAa,YAAY,UAAU,CAAC,OAAO,KAAK,KAAK,GAAG,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2477, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-node/dist-es/index.js"],"sourcesContent":["export * from \"./defaultProvider\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2495, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-process/dist-es/getValidatedProcessCredentials.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nexport const getValidatedProcessCredentials = (profileName, data, profiles) => {\n    if (data.Version !== 1) {\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n    }\n    if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n    }\n    if (data.Expiration) {\n        const currentTime = new Date();\n        const expireTime = new Date(data.Expiration);\n        if (expireTime < currentTime) {\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n        }\n    }\n    let accountId = data.AccountId;\n    if (!accountId && profiles?.[profileName]?.aws_account_id) {\n        accountId = profiles[profileName].aws_account_id;\n    }\n    const credentials = {\n        accessKeyId: data.AccessKeyId,\n        secretAccessKey: data.SecretAccessKey,\n        ...(data.SessionToken && { sessionToken: data.SessionToken }),\n        ...(data.Expiration && { expiration: new Date(data.Expiration) }),\n        ...(data.CredentialScope && { credentialScope: data.CredentialScope }),\n        ...(accountId && { accountId }),\n    };\n    setCredentialFeature(credentials, \"CREDENTIALS_PROCESS\", \"w\");\n    return credentials;\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iCAAiC,CAAC,aAAa,MAAM;IAC9D,IAAI,KAAK,OAAO,KAAK,GAAG;QACpB,MAAM,MAAM,CAAC,QAAQ,EAAE,YAAY,6CAA6C,CAAC;IACrF;IACA,IAAI,KAAK,WAAW,KAAK,aAAa,KAAK,eAAe,KAAK,WAAW;QACtE,MAAM,MAAM,CAAC,QAAQ,EAAE,YAAY,iDAAiD,CAAC;IACzF;IACA,IAAI,KAAK,UAAU,EAAE;QACjB,MAAM,cAAc,IAAI;QACxB,MAAM,aAAa,IAAI,KAAK,KAAK,UAAU;QAC3C,IAAI,aAAa,aAAa;YAC1B,MAAM,MAAM,CAAC,QAAQ,EAAE,YAAY,iDAAiD,CAAC;QACzF;IACJ;IACA,IAAI,YAAY,KAAK,SAAS;IAC9B,IAAI,CAAC,aAAa,UAAU,CAAC,YAAY,EAAE,gBAAgB;QACvD,YAAY,QAAQ,CAAC,YAAY,CAAC,cAAc;IACpD;IACA,MAAM,cAAc;QAChB,aAAa,KAAK,WAAW;QAC7B,iBAAiB,KAAK,eAAe;QACrC,GAAI,KAAK,YAAY,IAAI;YAAE,cAAc,KAAK,YAAY;QAAC,CAAC;QAC5D,GAAI,KAAK,UAAU,IAAI;YAAE,YAAY,IAAI,KAAK,KAAK,UAAU;QAAE,CAAC;QAChE,GAAI,KAAK,eAAe,IAAI;YAAE,iBAAiB,KAAK,eAAe;QAAC,CAAC;QACrE,GAAI,aAAa;YAAE;QAAU,CAAC;IAClC;IACA,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,aAAa,uBAAuB;IACzD,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2543, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-process/dist-es/resolveProcessCredentials.js"],"sourcesContent":["import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { exec } from \"child_process\";\nimport { promisify } from \"util\";\nimport { getValidatedProcessCredentials } from \"./getValidatedProcessCredentials\";\nexport const resolveProcessCredentials = async (profileName, profiles, logger) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== undefined) {\n            const execPromise = promisify(exec);\n            try {\n                const { stdout } = await execPromise(credentialProcess);\n                let data;\n                try {\n                    data = JSON.parse(stdout.trim());\n                }\n                catch {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                return getValidatedProcessCredentials(profileName, data, profiles);\n            }\n            catch (error) {\n                throw new CredentialsProviderError(error.message, { logger });\n            }\n        }\n        else {\n            throw new CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`, { logger });\n        }\n    }\n    else {\n        throw new CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`, {\n            logger,\n        });\n    }\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AACA;AACA;;;;;AACO,MAAM,4BAA4B,OAAO,aAAa,UAAU;IACnE,MAAM,UAAU,QAAQ,CAAC,YAAY;IACrC,IAAI,QAAQ,CAAC,YAAY,EAAE;QACvB,MAAM,oBAAoB,OAAO,CAAC,qBAAqB;QACvD,IAAI,sBAAsB,WAAW;YACjC,MAAM,cAAc,CAAA,GAAA,iGAAA,CAAA,YAAS,AAAD,EAAE,mHAAA,CAAA,OAAI;YAClC,IAAI;gBACA,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,YAAY;gBACrC,IAAI;gBACJ,IAAI;oBACA,OAAO,KAAK,KAAK,CAAC,OAAO,IAAI;gBACjC,EACA,OAAM;oBACF,MAAM,MAAM,CAAC,QAAQ,EAAE,YAAY,0CAA0C,CAAC;gBAClF;gBACA,OAAO,CAAA,GAAA,mNAAA,CAAA,iCAA8B,AAAD,EAAE,aAAa,MAAM;YAC7D,EACA,OAAO,OAAO;gBACV,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,MAAM,OAAO,EAAE;oBAAE;gBAAO;YAC/D;QACJ,OACK;YACD,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC,QAAQ,EAAE,YAAY,oCAAoC,CAAC,EAAE;gBAAE;YAAO;QAC9G;IACJ,OACK;QACD,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC,QAAQ,EAAE,YAAY,+CAA+C,CAAC,EAAE;YACxG;QACJ;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2592, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-process/dist-es/fromProcess.js"],"sourcesContent":["import { getProfileName, parseKnownFiles } from \"@smithy/shared-ini-file-loader\";\nimport { resolveProcessCredentials } from \"./resolveProcessCredentials\";\nexport const fromProcess = (init = {}) => async ({ callerClientConfig } = {}) => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-process - fromProcess\");\n    const profiles = await parseKnownFiles(init);\n    return resolveProcessCredentials(getProfileName({\n        profile: init.profile ?? callerClientConfig?.profile,\n    }), profiles, init.logger);\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;AACA;;;AACO,MAAM,cAAc,CAAC,OAAO,CAAC,CAAC,GAAK,OAAO,EAAE,kBAAkB,EAAE,GAAG,CAAC,CAAC;QACxE,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,WAAW,MAAM,CAAA,GAAA,8LAAA,CAAA,kBAAe,AAAD,EAAE;QACvC,OAAO,CAAA,GAAA,8MAAA,CAAA,4BAAyB,AAAD,EAAE,CAAA,GAAA,6LAAA,CAAA,iBAAc,AAAD,EAAE;YAC5C,SAAS,KAAK,OAAO,IAAI,oBAAoB;QACjD,IAAI,UAAU,KAAK,MAAM;IAC7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2614, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-process/dist-es/index.js"],"sourcesContent":["export * from \"./fromProcess\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2632, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-sso/dist-es/isSsoProfile.js"],"sourcesContent":["export const isSsoProfile = (arg) => arg &&\n    (typeof arg.sso_start_url === \"string\" ||\n        typeof arg.sso_account_id === \"string\" ||\n        typeof arg.sso_session === \"string\" ||\n        typeof arg.sso_region === \"string\" ||\n        typeof arg.sso_role_name === \"string\");\n"],"names":[],"mappings":";;;AAAO,MAAM,eAAe,CAAC,MAAQ,OACjC,CAAC,OAAO,IAAI,aAAa,KAAK,YAC1B,OAAO,IAAI,cAAc,KAAK,YAC9B,OAAO,IAAI,WAAW,KAAK,YAC3B,OAAO,IAAI,UAAU,KAAK,YAC1B,OAAO,IAAI,aAAa,KAAK,QAAQ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2642, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-sso/dist-es/resolveSSOCredentials.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { fromSso as getSsoTokenProvider } from \"@aws-sdk/token-providers\";\nimport { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getSSOTokenFromFile } from \"@smithy/shared-ini-file-loader\";\nconst SHOULD_FAIL_CREDENTIAL_CHAIN = false;\nexport const resolveSSOCredentials = async ({ ssoStartUrl, ssoSession, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, clientConfig, parentClientConfig, profile, logger, }) => {\n    let token;\n    const refreshMessage = `To refresh this SSO session run aws sso login with the corresponding profile.`;\n    if (ssoSession) {\n        try {\n            const _token = await getSsoTokenProvider({ profile })();\n            token = {\n                accessToken: _token.token,\n                expiresAt: new Date(_token.expiration).toISOString(),\n            };\n        }\n        catch (e) {\n            throw new CredentialsProviderError(e.message, {\n                tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n                logger,\n            });\n        }\n    }\n    else {\n        try {\n            token = await getSSOTokenFromFile(ssoStartUrl);\n        }\n        catch (e) {\n            throw new CredentialsProviderError(`The SSO session associated with this profile is invalid. ${refreshMessage}`, {\n                tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n                logger,\n            });\n        }\n    }\n    if (new Date(token.expiresAt).getTime() - Date.now() <= 0) {\n        throw new CredentialsProviderError(`The SSO session associated with this profile has expired. ${refreshMessage}`, {\n            tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n            logger,\n        });\n    }\n    const { accessToken } = token;\n    const { SSOClient, GetRoleCredentialsCommand } = await import(\"./loadSso\");\n    const sso = ssoClient ||\n        new SSOClient(Object.assign({}, clientConfig ?? {}, {\n            logger: clientConfig?.logger ?? parentClientConfig?.logger,\n            region: clientConfig?.region ?? ssoRegion,\n        }));\n    let ssoResp;\n    try {\n        ssoResp = await sso.send(new GetRoleCredentialsCommand({\n            accountId: ssoAccountId,\n            roleName: ssoRoleName,\n            accessToken,\n        }));\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e, {\n            tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n            logger,\n        });\n    }\n    const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration, credentialScope, accountId } = {}, } = ssoResp;\n    if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n        throw new CredentialsProviderError(\"SSO returns an invalid temporary credential.\", {\n            tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n            logger,\n        });\n    }\n    const credentials = {\n        accessKeyId,\n        secretAccessKey,\n        sessionToken,\n        expiration: new Date(expiration),\n        ...(credentialScope && { credentialScope }),\n        ...(accountId && { accountId }),\n    };\n    if (ssoSession) {\n        setCredentialFeature(credentials, \"CREDENTIALS_SSO\", \"s\");\n    }\n    else {\n        setCredentialFeature(credentials, \"CREDENTIALS_SSO_LEGACY\", \"u\");\n    }\n    return credentials;\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;AACA;AAAA;;;;;AACA,MAAM,+BAA+B;AAC9B,MAAM,wBAAwB,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,kBAAkB,EAAE,OAAO,EAAE,MAAM,EAAG;IACxK,IAAI;IACJ,MAAM,iBAAiB,CAAC,6EAA6E,CAAC;IACtG,IAAI,YAAY;QACZ,IAAI;YACA,MAAM,SAAS,MAAM,CAAA,GAAA,6KAAA,CAAA,UAAmB,AAAD,EAAE;gBAAE;YAAQ;YACnD,QAAQ;gBACJ,aAAa,OAAO,KAAK;gBACzB,WAAW,IAAI,KAAK,OAAO,UAAU,EAAE,WAAW;YACtD;QACJ,EACA,OAAO,GAAG;YACN,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,EAAE,OAAO,EAAE;gBAC1C,aAAa;gBACb;YACJ;QACJ;IACJ,OACK;QACD,IAAI;YACA,QAAQ,MAAM,CAAA,GAAA,kMAAA,CAAA,sBAAmB,AAAD,EAAE;QACtC,EACA,OAAO,GAAG;YACN,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC,yDAAyD,EAAE,gBAAgB,EAAE;gBAC7G,aAAa;gBACb;YACJ;QACJ;IACJ;IACA,IAAI,IAAI,KAAK,MAAM,SAAS,EAAE,OAAO,KAAK,KAAK,GAAG,MAAM,GAAG;QACvD,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC,0DAA0D,EAAE,gBAAgB,EAAE;YAC9G,aAAa;YACb;QACJ;IACJ;IACA,MAAM,EAAE,WAAW,EAAE,GAAG;IACxB,MAAM,EAAE,SAAS,EAAE,yBAAyB,EAAE,GAAG;IACjD,MAAM,MAAM,aACR,IAAI,UAAU,OAAO,MAAM,CAAC,CAAC,GAAG,gBAAgB,CAAC,GAAG;QAChD,QAAQ,cAAc,UAAU,oBAAoB;QACpD,QAAQ,cAAc,UAAU;IACpC;IACJ,IAAI;IACJ,IAAI;QACA,UAAU,MAAM,IAAI,IAAI,CAAC,IAAI,0BAA0B;YACnD,WAAW;YACX,UAAU;YACV;QACJ;IACJ,EACA,OAAO,GAAG;QACN,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,GAAG;YAClC,aAAa;YACb;QACJ;IACJ;IACA,MAAM,EAAE,iBAAiB,EAAE,WAAW,EAAE,eAAe,EAAE,YAAY,EAAE,UAAU,EAAE,eAAe,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC,EAAG,GAAG;IAC1H,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,YAAY;QAClE,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,gDAAgD;YAC/E,aAAa;YACb;QACJ;IACJ;IACA,MAAM,cAAc;QAChB;QACA;QACA;QACA,YAAY,IAAI,KAAK;QACrB,GAAI,mBAAmB;YAAE;QAAgB,CAAC;QAC1C,GAAI,aAAa;YAAE;QAAU,CAAC;IAClC;IACA,IAAI,YAAY;QACZ,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,aAAa,mBAAmB;IACzD,OACK;QACD,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,aAAa,0BAA0B;IAChE;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2741, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-sso/dist-es/validateSsoProfile.js"],"sourcesContent":["import { CredentialsProviderError } from \"@smithy/property-provider\";\nexport const validateSsoProfile = (profile, logger) => {\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = profile;\n    if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {\n        throw new CredentialsProviderError(`Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", ` +\n            `\"sso_region\", \"sso_role_name\", \"sso_start_url\". Got ${Object.keys(profile).join(\", \")}\\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`, { tryNextLink: false, logger });\n    }\n    return profile;\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM,qBAAqB,CAAC,SAAS;IACxC,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG;IACrE,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,cAAc,CAAC,eAAe;QACpE,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC,0FAA0F,CAAC,GAC3H,CAAC,oDAAoD,EAAE,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC,MAAM,oFAAoF,CAAC,EAAE;YAAE,aAAa;YAAO;QAAO;IACnN;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2763, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-sso/dist-es/fromSSO.js"],"sourcesContent":["import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getProfileName, loadSsoSessionData, parseKnownFiles } from \"@smithy/shared-ini-file-loader\";\nimport { isSsoProfile } from \"./isSsoProfile\";\nimport { resolveSSOCredentials } from \"./resolveSSOCredentials\";\nimport { validateSsoProfile } from \"./validateSsoProfile\";\nexport const fromSSO = (init = {}) => async ({ callerClientConfig } = {}) => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-sso - fromSSO\");\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoSession } = init;\n    const { ssoClient } = init;\n    const profileName = getProfileName({\n        profile: init.profile ?? callerClientConfig?.profile,\n    });\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n        const profiles = await parseKnownFiles(init);\n        const profile = profiles[profileName];\n        if (!profile) {\n            throw new CredentialsProviderError(`Profile ${profileName} was not found.`, { logger: init.logger });\n        }\n        if (!isSsoProfile(profile)) {\n            throw new CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`, {\n                logger: init.logger,\n            });\n        }\n        if (profile?.sso_session) {\n            const ssoSessions = await loadSsoSessionData(init);\n            const session = ssoSessions[profile.sso_session];\n            const conflictMsg = ` configurations in profile ${profileName} and sso-session ${profile.sso_session}`;\n            if (ssoRegion && ssoRegion !== session.sso_region) {\n                throw new CredentialsProviderError(`Conflicting SSO region` + conflictMsg, {\n                    tryNextLink: false,\n                    logger: init.logger,\n                });\n            }\n            if (ssoStartUrl && ssoStartUrl !== session.sso_start_url) {\n                throw new CredentialsProviderError(`Conflicting SSO start_url` + conflictMsg, {\n                    tryNextLink: false,\n                    logger: init.logger,\n                });\n            }\n            profile.sso_region = session.sso_region;\n            profile.sso_start_url = session.sso_start_url;\n        }\n        const { sso_start_url, sso_account_id, sso_region, sso_role_name, sso_session } = validateSsoProfile(profile, init.logger);\n        return resolveSSOCredentials({\n            ssoStartUrl: sso_start_url,\n            ssoSession: sso_session,\n            ssoAccountId: sso_account_id,\n            ssoRegion: sso_region,\n            ssoRoleName: sso_role_name,\n            ssoClient: ssoClient,\n            clientConfig: init.clientConfig,\n            parentClientConfig: init.parentClientConfig,\n            profile: profileName,\n        });\n    }\n    else if (!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName) {\n        throw new CredentialsProviderError(\"Incomplete configuration. The fromSSO() argument hash must include \" +\n            '\"ssoStartUrl\", \"ssoAccountId\", \"ssoRegion\", \"ssoRoleName\"', { tryNextLink: false, logger: init.logger });\n    }\n    else {\n        return resolveSSOCredentials({\n            ssoStartUrl,\n            ssoSession,\n            ssoAccountId,\n            ssoRegion,\n            ssoRoleName,\n            ssoClient,\n            clientConfig: init.clientConfig,\n            parentClientConfig: init.parentClientConfig,\n            profile: profileName,\n        });\n    }\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AACO,MAAM,UAAU,CAAC,OAAO,CAAC,CAAC,GAAK,OAAO,EAAE,kBAAkB,EAAE,GAAG,CAAC,CAAC;QACpE,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG;QAC1E,MAAM,EAAE,SAAS,EAAE,GAAG;QACtB,MAAM,cAAc,CAAA,GAAA,6LAAA,CAAA,iBAAc,AAAD,EAAE;YAC/B,SAAS,KAAK,OAAO,IAAI,oBAAoB;QACjD;QACA,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAa,CAAC,eAAe,CAAC,YAAY;YAC5E,MAAM,WAAW,MAAM,CAAA,GAAA,8LAAA,CAAA,kBAAe,AAAD,EAAE;YACvC,MAAM,UAAU,QAAQ,CAAC,YAAY;YACrC,IAAI,CAAC,SAAS;gBACV,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC,QAAQ,EAAE,YAAY,eAAe,CAAC,EAAE;oBAAE,QAAQ,KAAK,MAAM;gBAAC;YACtG;YACA,IAAI,CAAC,CAAA,GAAA,6LAAA,CAAA,eAAY,AAAD,EAAE,UAAU;gBACxB,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC,QAAQ,EAAE,YAAY,wCAAwC,CAAC,EAAE;oBACjG,QAAQ,KAAK,MAAM;gBACvB;YACJ;YACA,IAAI,SAAS,aAAa;gBACtB,MAAM,cAAc,MAAM,CAAA,GAAA,iMAAA,CAAA,qBAAkB,AAAD,EAAE;gBAC7C,MAAM,UAAU,WAAW,CAAC,QAAQ,WAAW,CAAC;gBAChD,MAAM,cAAc,CAAC,2BAA2B,EAAE,YAAY,iBAAiB,EAAE,QAAQ,WAAW,EAAE;gBACtG,IAAI,aAAa,cAAc,QAAQ,UAAU,EAAE;oBAC/C,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC,sBAAsB,CAAC,GAAG,aAAa;wBACvE,aAAa;wBACb,QAAQ,KAAK,MAAM;oBACvB;gBACJ;gBACA,IAAI,eAAe,gBAAgB,QAAQ,aAAa,EAAE;oBACtD,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,CAAC,yBAAyB,CAAC,GAAG,aAAa;wBAC1E,aAAa;wBACb,QAAQ,KAAK,MAAM;oBACvB;gBACJ;gBACA,QAAQ,UAAU,GAAG,QAAQ,UAAU;gBACvC,QAAQ,aAAa,GAAG,QAAQ,aAAa;YACjD;YACA,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,mMAAA,CAAA,qBAAkB,AAAD,EAAE,SAAS,KAAK,MAAM;YACzH,OAAO,CAAA,GAAA,sMAAA,CAAA,wBAAqB,AAAD,EAAE;gBACzB,aAAa;gBACb,YAAY;gBACZ,cAAc;gBACd,WAAW;gBACX,aAAa;gBACb,WAAW;gBACX,cAAc,KAAK,YAAY;gBAC/B,oBAAoB,KAAK,kBAAkB;gBAC3C,SAAS;YACb;QACJ,OACK,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa;YAClE,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,wEAC/B,6DAA6D;gBAAE,aAAa;gBAAO,QAAQ,KAAK,MAAM;YAAC;QAC/G,OACK;YACD,OAAO,CAAA,GAAA,sMAAA,CAAA,wBAAqB,AAAD,EAAE;gBACzB;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA,cAAc,KAAK,YAAY;gBAC/B,oBAAoB,KAAK,kBAAkB;gBAC3C,SAAS;YACb;QACJ;IACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2856, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 2864, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-sso/dist-es/index.js"],"sourcesContent":["export * from \"./fromSSO\";\nexport * from \"./isSsoProfile\";\nexport * from \"./types\";\nexport * from \"./validateSsoProfile\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2891, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/token-providers/dist-es/constants.js"],"sourcesContent":["export const EXPIRE_WINDOW_MS = 5 * 60 * 1000;\nexport const REFRESH_MESSAGE = `To refresh this SSO session run 'aws sso login' with the corresponding profile.`;\n"],"names":[],"mappings":";;;;AAAO,MAAM,mBAAmB,IAAI,KAAK;AAClC,MAAM,kBAAkB,CAAC,+EAA+E,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2903, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/token-providers/dist-es/getSsoOidcClient.js"],"sourcesContent":["export const getSsoOidcClient = async (ssoRegion, init = {}) => {\n    const { SSOOIDCClient } = await import(\"@aws-sdk/nested-clients/sso-oidc\");\n    const ssoOidcClient = new SSOOIDCClient(Object.assign({}, init.clientConfig ?? {}, {\n        region: ssoRegion ?? init.clientConfig?.region,\n        logger: init.clientConfig?.logger ?? init.parentClientConfig?.logger,\n    }));\n    return ssoOidcClient;\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,mBAAmB,OAAO,WAAW,OAAO,CAAC,CAAC;IACvD,MAAM,EAAE,aAAa,EAAE,GAAG;IAC1B,MAAM,gBAAgB,IAAI,cAAc,OAAO,MAAM,CAAC,CAAC,GAAG,KAAK,YAAY,IAAI,CAAC,GAAG;QAC/E,QAAQ,aAAa,KAAK,YAAY,EAAE;QACxC,QAAQ,KAAK,YAAY,EAAE,UAAU,KAAK,kBAAkB,EAAE;IAClE;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2920, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/token-providers/dist-es/getNewSsoOidcToken.js"],"sourcesContent":["import { getSsoOidcClient } from \"./getSsoOidcClient\";\nexport const getNewSsoOidcToken = async (ssoToken, ssoRegion, init = {}) => {\n    const { CreateTokenCommand } = await import(\"@aws-sdk/nested-clients/sso-oidc\");\n    const ssoOidcClient = await getSsoOidcClient(ssoRegion, init);\n    return ssoOidcClient.send(new CreateTokenCommand({\n        clientId: ssoToken.clientId,\n        clientSecret: ssoToken.clientSecret,\n        refreshToken: ssoToken.refreshToken,\n        grantType: \"refresh_token\",\n    }));\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,OAAO,UAAU,WAAW,OAAO,CAAC,CAAC;IACnE,MAAM,EAAE,kBAAkB,EAAE,GAAG;IAC/B,MAAM,gBAAgB,MAAM,CAAA,GAAA,sLAAA,CAAA,mBAAgB,AAAD,EAAE,WAAW;IACxD,OAAO,cAAc,IAAI,CAAC,IAAI,mBAAmB;QAC7C,UAAU,SAAS,QAAQ;QAC3B,cAAc,SAAS,YAAY;QACnC,cAAc,SAAS,YAAY;QACnC,WAAW;IACf;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2941, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/token-providers/dist-es/validateTokenExpiry.js"],"sourcesContent":["import { TokenProviderError } from \"@smithy/property-provider\";\nimport { REFRESH_MESSAGE } from \"./constants\";\nexport const validateTokenExpiry = (token) => {\n    if (token.expiration && token.expiration.getTime() < Date.now()) {\n        throw new TokenProviderError(`Token is expired. ${REFRESH_MESSAGE}`, false);\n    }\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AACO,MAAM,sBAAsB,CAAC;IAChC,IAAI,MAAM,UAAU,IAAI,MAAM,UAAU,CAAC,OAAO,KAAK,KAAK,GAAG,IAAI;QAC7D,MAAM,IAAI,sLAAA,CAAA,qBAAkB,CAAC,CAAC,kBAAkB,EAAE,+KAAA,CAAA,kBAAe,EAAE,EAAE;IACzE;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2960, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/token-providers/dist-es/validateTokenKey.js"],"sourcesContent":["import { TokenProviderError } from \"@smithy/property-provider\";\nimport { REFRESH_MESSAGE } from \"./constants\";\nexport const validateTokenKey = (key, value, forRefresh = false) => {\n    if (typeof value === \"undefined\") {\n        throw new TokenProviderError(`Value not present for '${key}' in SSO Token${forRefresh ? \". Cannot refresh\" : \"\"}. ${REFRESH_MESSAGE}`, false);\n    }\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AACO,MAAM,mBAAmB,CAAC,KAAK,OAAO,aAAa,KAAK;IAC3D,IAAI,OAAO,UAAU,aAAa;QAC9B,MAAM,IAAI,sLAAA,CAAA,qBAAkB,CAAC,CAAC,uBAAuB,EAAE,IAAI,cAAc,EAAE,aAAa,qBAAqB,GAAG,EAAE,EAAE,+KAAA,CAAA,kBAAe,EAAE,EAAE;IAC3I;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2979, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/token-providers/dist-es/writeSSOTokenToFile.js"],"sourcesContent":["import { getSSOTokenFilepath } from \"@smithy/shared-ini-file-loader\";\nimport { promises as fsPromises } from \"fs\";\nconst { writeFile } = fsPromises;\nexport const writeSSOTokenToFile = (id, ssoToken) => {\n    const tokenFilepath = getSSOTokenFilepath(id);\n    const tokenString = JSON.stringify(ssoToken, null, 2);\n    return writeFile(tokenFilepath, tokenString);\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AACA,MAAM,EAAE,SAAS,EAAE,GAAG,6FAAA,CAAA,WAAU;AACzB,MAAM,sBAAsB,CAAC,IAAI;IACpC,MAAM,gBAAgB,CAAA,GAAA,kMAAA,CAAA,sBAAmB,AAAD,EAAE;IAC1C,MAAM,cAAc,KAAK,SAAS,CAAC,UAAU,MAAM;IACnD,OAAO,UAAU,eAAe;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2999, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/token-providers/dist-es/fromSso.js"],"sourcesContent":["import { TokenProviderError } from \"@smithy/property-provider\";\nimport { getProfileName, getSSOTokenFromFile, loadSsoSessionData, parseKnownFiles, } from \"@smithy/shared-ini-file-loader\";\nimport { EXPIRE_WINDOW_MS, REFRESH_MESSAGE } from \"./constants\";\nimport { getNewSsoOidcToken } from \"./getNewSsoOidcToken\";\nimport { validateTokenExpiry } from \"./validateTokenExpiry\";\nimport { validateTokenKey } from \"./validateTokenKey\";\nimport { writeSSOTokenToFile } from \"./writeSSOTokenToFile\";\nconst lastRefreshAttemptTime = new Date(0);\nexport const fromSso = (_init = {}) => async ({ callerClientConfig } = {}) => {\n    const init = {\n        ..._init,\n        parentClientConfig: {\n            ...callerClientConfig,\n            ..._init.parentClientConfig,\n        },\n    };\n    init.logger?.debug(\"@aws-sdk/token-providers - fromSso\");\n    const profiles = await parseKnownFiles(init);\n    const profileName = getProfileName({\n        profile: init.profile ?? callerClientConfig?.profile,\n    });\n    const profile = profiles[profileName];\n    if (!profile) {\n        throw new TokenProviderError(`Profile '${profileName}' could not be found in shared credentials file.`, false);\n    }\n    else if (!profile[\"sso_session\"]) {\n        throw new TokenProviderError(`Profile '${profileName}' is missing required property 'sso_session'.`);\n    }\n    const ssoSessionName = profile[\"sso_session\"];\n    const ssoSessions = await loadSsoSessionData(init);\n    const ssoSession = ssoSessions[ssoSessionName];\n    if (!ssoSession) {\n        throw new TokenProviderError(`Sso session '${ssoSessionName}' could not be found in shared credentials file.`, false);\n    }\n    for (const ssoSessionRequiredKey of [\"sso_start_url\", \"sso_region\"]) {\n        if (!ssoSession[ssoSessionRequiredKey]) {\n            throw new TokenProviderError(`Sso session '${ssoSessionName}' is missing required property '${ssoSessionRequiredKey}'.`, false);\n        }\n    }\n    const ssoStartUrl = ssoSession[\"sso_start_url\"];\n    const ssoRegion = ssoSession[\"sso_region\"];\n    let ssoToken;\n    try {\n        ssoToken = await getSSOTokenFromFile(ssoSessionName);\n    }\n    catch (e) {\n        throw new TokenProviderError(`The SSO session token associated with profile=${profileName} was not found or is invalid. ${REFRESH_MESSAGE}`, false);\n    }\n    validateTokenKey(\"accessToken\", ssoToken.accessToken);\n    validateTokenKey(\"expiresAt\", ssoToken.expiresAt);\n    const { accessToken, expiresAt } = ssoToken;\n    const existingToken = { token: accessToken, expiration: new Date(expiresAt) };\n    if (existingToken.expiration.getTime() - Date.now() > EXPIRE_WINDOW_MS) {\n        return existingToken;\n    }\n    if (Date.now() - lastRefreshAttemptTime.getTime() < 30 * 1000) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n    validateTokenKey(\"clientId\", ssoToken.clientId, true);\n    validateTokenKey(\"clientSecret\", ssoToken.clientSecret, true);\n    validateTokenKey(\"refreshToken\", ssoToken.refreshToken, true);\n    try {\n        lastRefreshAttemptTime.setTime(Date.now());\n        const newSsoOidcToken = await getNewSsoOidcToken(ssoToken, ssoRegion, init);\n        validateTokenKey(\"accessToken\", newSsoOidcToken.accessToken);\n        validateTokenKey(\"expiresIn\", newSsoOidcToken.expiresIn);\n        const newTokenExpiration = new Date(Date.now() + newSsoOidcToken.expiresIn * 1000);\n        try {\n            await writeSSOTokenToFile(ssoSessionName, {\n                ...ssoToken,\n                accessToken: newSsoOidcToken.accessToken,\n                expiresAt: newTokenExpiration.toISOString(),\n                refreshToken: newSsoOidcToken.refreshToken,\n            });\n        }\n        catch (error) {\n        }\n        return {\n            token: newSsoOidcToken.accessToken,\n            expiration: newTokenExpiration,\n        };\n    }\n    catch (error) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3109, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/util-middleware/dist-es/normalizeProvider.js"],"sourcesContent":["export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,oBAAoB,CAAC;IAC9B,IAAI,OAAO,UAAU,YACjB,OAAO;IACX,MAAM,cAAc,QAAQ,OAAO,CAAC;IACpC,OAAO,IAAM;AACjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3123, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/util-middleware/dist-es/index.js"],"sourcesContent":["export * from \"./normalizeProvider\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3141, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-web-identity/dist-es/fromWebToken.js"],"sourcesContent":["export const fromWebToken = (init) => async (awsIdentityProperties) => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromWebToken\");\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds } = init;\n    let { roleAssumerWithWebIdentity } = init;\n    if (!roleAssumerWithWebIdentity) {\n        const { getDefaultRoleAssumerWithWebIdentity } = await import(\"@aws-sdk/nested-clients/sts\");\n        roleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity({\n            ...init.clientConfig,\n            credentialProviderLogger: init.logger,\n            parentClientConfig: {\n                ...awsIdentityProperties?.callerClientConfig,\n                ...init.parentClientConfig,\n            },\n        }, init.clientPlugins);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,eAAe,CAAC,OAAS,OAAO;QACzC,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,eAAe,EAAE,GAAG;QACxG,IAAI,EAAE,0BAA0B,EAAE,GAAG;QACrC,IAAI,CAAC,4BAA4B;YAC7B,MAAM,EAAE,oCAAoC,EAAE,GAAG;YACjD,6BAA6B,qCAAqC;gBAC9D,GAAG,KAAK,YAAY;gBACpB,0BAA0B,KAAK,MAAM;gBACrC,oBAAoB;oBAChB,GAAG,uBAAuB,kBAAkB;oBAC5C,GAAG,KAAK,kBAAkB;gBAC9B;YACJ,GAAG,KAAK,aAAa;QACzB;QACA,OAAO,2BAA2B;YAC9B,SAAS;YACT,iBAAiB,mBAAmB,CAAC,mBAAmB,EAAE,KAAK,GAAG,IAAI;YACtE,kBAAkB;YAClB,YAAY;YACZ,YAAY;YACZ,QAAQ;YACR,iBAAiB;QACrB;IACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3175, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-web-identity/dist-es/fromTokenFile.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { readFileSync } from \"fs\";\nimport { fromWebToken } from \"./fromWebToken\";\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nexport const fromTokenFile = (init = {}) => async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromTokenFile\");\n    const webIdentityTokenFile = init?.webIdentityTokenFile ?? process.env[ENV_TOKEN_FILE];\n    const roleArn = init?.roleArn ?? process.env[ENV_ROLE_ARN];\n    const roleSessionName = init?.roleSessionName ?? process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new CredentialsProviderError(\"Web identity configuration not specified\", {\n            logger: init.logger,\n        });\n    }\n    const credentials = await fromWebToken({\n        ...init,\n        webIdentityToken: readFileSync(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n    if (webIdentityTokenFile === process.env[ENV_TOKEN_FILE]) {\n        setCredentialFeature(credentials, \"CREDENTIALS_ENV_VARS_STS_WEB_ID_TOKEN\", \"h\");\n    }\n    return credentials;\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AACA;AACA;;;;;AACA,MAAM,iBAAiB;AACvB,MAAM,eAAe;AACrB,MAAM,wBAAwB;AACvB,MAAM,gBAAgB,CAAC,OAAO,CAAC,CAAC,GAAK;QACxC,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,uBAAuB,MAAM,wBAAwB,QAAQ,GAAG,CAAC,eAAe;QACtF,MAAM,UAAU,MAAM,WAAW,QAAQ,GAAG,CAAC,aAAa;QAC1D,MAAM,kBAAkB,MAAM,mBAAmB,QAAQ,GAAG,CAAC,sBAAsB;QACnF,IAAI,CAAC,wBAAwB,CAAC,SAAS;YACnC,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,4CAA4C;gBAC3E,QAAQ,KAAK,MAAM;YACvB;QACJ;QACA,MAAM,cAAc,MAAM,CAAA,GAAA,yMAAA,CAAA,eAAY,AAAD,EAAE;YACnC,GAAG,IAAI;YACP,kBAAkB,CAAA,GAAA,6FAAA,CAAA,eAAY,AAAD,EAAE,sBAAsB;gBAAE,UAAU;YAAQ;YACzE;YACA;QACJ;QACA,IAAI,yBAAyB,QAAQ,GAAG,CAAC,eAAe,EAAE;YACtD,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,aAAa,yCAAyC;QAC/E;QACA,OAAO;IACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3219, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/credential-provider-web-identity/dist-es/index.js"],"sourcesContent":["export * from \"./fromTokenFile\";\nexport * from \"./fromWebToken\";\n"],"names":[],"mappings":";AAAA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3240, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/protocol-http/dist-es/index.js"],"sourcesContent":["export * from \"@smithy/protocol-http\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3288, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/util-utf8-browser/dist-es/pureJs.js"],"sourcesContent":["export const fromUtf8 = (input) => {\n    const bytes = [];\n    for (let i = 0, len = input.length; i < len; i++) {\n        const value = input.charCodeAt(i);\n        if (value < 0x80) {\n            bytes.push(value);\n        }\n        else if (value < 0x800) {\n            bytes.push((value >> 6) | 0b11000000, (value & 0b111111) | 0b10000000);\n        }\n        else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n            bytes.push((surrogatePair >> 18) | 0b11110000, ((surrogatePair >> 12) & 0b111111) | 0b10000000, ((surrogatePair >> 6) & 0b111111) | 0b10000000, (surrogatePair & 0b111111) | 0b10000000);\n        }\n        else {\n            bytes.push((value >> 12) | 0b11100000, ((value >> 6) & 0b111111) | 0b10000000, (value & 0b111111) | 0b10000000);\n        }\n    }\n    return Uint8Array.from(bytes);\n};\nexport const toUtf8 = (input) => {\n    let decoded = \"\";\n    for (let i = 0, len = input.length; i < len; i++) {\n        const byte = input[i];\n        if (byte < 0x80) {\n            decoded += String.fromCharCode(byte);\n        }\n        else if (0b11000000 <= byte && byte < 0b11100000) {\n            const nextByte = input[++i];\n            decoded += String.fromCharCode(((byte & 0b11111) << 6) | (nextByte & 0b111111));\n        }\n        else if (0b11110000 <= byte && byte < 0b101101101) {\n            const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n            const encoded = \"%\" + surrogatePair.map((byteValue) => byteValue.toString(16)).join(\"%\");\n            decoded += decodeURIComponent(encoded);\n        }\n        else {\n            decoded += String.fromCharCode(((byte & 0b1111) << 12) | ((input[++i] & 0b111111) << 6) | (input[++i] & 0b111111));\n        }\n    }\n    return decoded;\n};\n"],"names":[],"mappings":";;;;AAAO,MAAM,WAAW,CAAC;IACrB,MAAM,QAAQ,EAAE;IAChB,IAAK,IAAI,IAAI,GAAG,MAAM,MAAM,MAAM,EAAE,IAAI,KAAK,IAAK;QAC9C,MAAM,QAAQ,MAAM,UAAU,CAAC;QAC/B,IAAI,QAAQ,MAAM;YACd,MAAM,IAAI,CAAC;QACf,OACK,IAAI,QAAQ,OAAO;YACpB,MAAM,IAAI,CAAC,AAAC,SAAS,IAAK,YAAY,AAAC,QAAQ,WAAY;QAC/D,OACK,IAAI,IAAI,IAAI,MAAM,MAAM,IAAI,CAAC,QAAQ,MAAM,MAAM,UAAU,CAAC,MAAM,UAAU,CAAC,IAAI,KAAK,MAAM,MAAM,QAAQ;YAC3G,MAAM,gBAAgB,UAAU,CAAC,CAAC,QAAQ,YAAY,KAAK,EAAE,IAAI,CAAC,MAAM,UAAU,CAAC,EAAE,KAAK,YAAY;YACtG,MAAM,IAAI,CAAC,AAAC,iBAAiB,KAAM,YAAY,AAAE,iBAAiB,KAAM,WAAY,YAAY,AAAE,iBAAiB,IAAK,WAAY,YAAY,AAAC,gBAAgB,WAAY;QACjL,OACK;YACD,MAAM,IAAI,CAAC,AAAC,SAAS,KAAM,YAAY,AAAE,SAAS,IAAK,WAAY,YAAY,AAAC,QAAQ,WAAY;QACxG;IACJ;IACA,OAAO,WAAW,IAAI,CAAC;AAC3B;AACO,MAAM,SAAS,CAAC;IACnB,IAAI,UAAU;IACd,IAAK,IAAI,IAAI,GAAG,MAAM,MAAM,MAAM,EAAE,IAAI,KAAK,IAAK;QAC9C,MAAM,OAAO,KAAK,CAAC,EAAE;QACrB,IAAI,OAAO,MAAM;YACb,WAAW,OAAO,YAAY,CAAC;QACnC,OACK,IAAI,cAAc,QAAQ,OAAO,YAAY;YAC9C,MAAM,WAAW,KAAK,CAAC,EAAE,EAAE;YAC3B,WAAW,OAAO,YAAY,CAAC,AAAC,CAAC,OAAO,OAAO,KAAK,IAAM,WAAW;QACzE,OACK,IAAI,cAAc,QAAQ,OAAO,aAAa;YAC/C,MAAM,gBAAgB;gBAAC;gBAAM,KAAK,CAAC,EAAE,EAAE;gBAAE,KAAK,CAAC,EAAE,EAAE;gBAAE,KAAK,CAAC,EAAE,EAAE;aAAC;YAChE,MAAM,UAAU,MAAM,cAAc,GAAG,CAAC,CAAC,YAAc,UAAU,QAAQ,CAAC,KAAK,IAAI,CAAC;YACpF,WAAW,mBAAmB;QAClC,OACK;YACD,WAAW,OAAO,YAAY,CAAC,AAAC,CAAC,OAAO,MAAM,KAAK,KAAO,CAAC,KAAK,CAAC,EAAE,EAAE,GAAG,QAAQ,KAAK,IAAM,KAAK,CAAC,EAAE,EAAE,GAAG;QAC5G;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3339, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/util-utf8-browser/dist-es/whatwgEncodingApi.js"],"sourcesContent":["export function fromUtf8(input) {\n    return new TextEncoder().encode(input);\n}\nexport function toUtf8(input) {\n    return new TextDecoder(\"utf-8\").decode(input);\n}\n"],"names":[],"mappings":";;;;AAAO,SAAS,SAAS,KAAK;IAC1B,OAAO,IAAI,cAAc,MAAM,CAAC;AACpC;AACO,SAAS,OAAO,KAAK;IACxB,OAAO,IAAI,YAAY,SAAS,MAAM,CAAC;AAC3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3355, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/util-utf8-browser/dist-es/index.js"],"sourcesContent":["import { fromUtf8 as jsFromUtf8, toUtf8 as jsToUtf8 } from \"./pureJs\";\nimport { fromUtf8 as textEncoderFromUtf8, toUtf8 as textEncoderToUtf8 } from \"./whatwgEncodingApi\";\nexport const fromUtf8 = (input) => typeof TextEncoder === \"function\" ? textEncoderFromUtf8(input) : jsFromUtf8(input);\nexport const toUtf8 = (input) => typeof TextDecoder === \"function\" ? textEncoderToUtf8(input) : jsToUtf8(input);\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AACO,MAAM,WAAW,CAAC,QAAU,OAAO,gBAAgB,aAAa,CAAA,GAAA,4LAAA,CAAA,WAAmB,AAAD,EAAE,SAAS,CAAA,GAAA,iLAAA,CAAA,WAAU,AAAD,EAAE;AACxG,MAAM,SAAS,CAAC,QAAU,OAAO,gBAAgB,aAAa,CAAA,GAAA,4LAAA,CAAA,SAAiB,AAAD,EAAE,SAAS,CAAA,GAAA,iLAAA,CAAA,SAAQ,AAAD,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3371, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/signature-v4/dist-es/constants.js"],"sourcesContent":["export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexport const REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexport const AUTH_HEADER = \"authorization\";\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const DATE_HEADER = \"date\";\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nexport const HOST_HEADER = \"host\";\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\nexport const SEC_HEADER_PATTERN = /^sec-/;\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexport const ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexport const MAX_CACHE_SIZE = 50;\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,MAAM,wBAAwB;AAC9B,MAAM,yBAAyB;AAC/B,MAAM,uBAAuB;AAC7B,MAAM,6BAA6B;AACnC,MAAM,sBAAsB;AAC5B,MAAM,wBAAwB;AAC9B,MAAM,oBAAoB;AAC1B,MAAM,mBAAmB;AACzB,MAAM,cAAc;AACpB,MAAM,kBAAkB,qBAAqB,WAAW;AACxD,MAAM,cAAc;AACpB,MAAM,oBAAoB;IAAC;IAAa;IAAiB;CAAY;AACrE,MAAM,mBAAmB,sBAAsB,WAAW;AAC1D,MAAM,gBAAgB;AACtB,MAAM,eAAe,kBAAkB,WAAW;AAClD,MAAM,cAAc;AACpB,MAAM,4BAA4B;IACrC,eAAe;IACf,iBAAiB;IACjB,YAAY;IACZ,QAAQ;IACR,MAAM;IACN,cAAc;IACd,gBAAgB;IAChB,QAAQ;IACR,SAAS;IACT,IAAI;IACJ,SAAS;IACT,qBAAqB;IACrB,SAAS;IACT,cAAc;IACd,mBAAmB;AACvB;AACO,MAAM,uBAAuB;AAC7B,MAAM,qBAAqB;AAC3B,MAAM,sBAAsB;IAAC;IAAY;CAAS;AAClD,MAAM,uBAAuB;AAC7B,MAAM,2BAA2B;AACjC,MAAM,6BAA6B;AACnC,MAAM,mBAAmB;AACzB,MAAM,iBAAiB;AACvB,MAAM,sBAAsB;AAC5B,MAAM,oBAAoB,KAAK,KAAK,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3456, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/signature-v4/dist-es/credentialDerivation.js"],"sourcesContent":["import { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\nconst signingKeyCache = {};\nconst cacheQueue = [];\nexport const createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nexport const getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexport const clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(toUint8Array(data));\n    return hash.digest();\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;AACA;;;;AACA,MAAM,kBAAkB,CAAC;AACzB,MAAM,aAAa,EAAE;AACd,MAAM,cAAc,CAAC,WAAW,QAAQ,UAAY,GAAG,UAAU,CAAC,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,2NAAA,CAAA,sBAAmB,EAAE;AAC9G,MAAM,gBAAgB,OAAO,mBAAmB,aAAa,WAAW,QAAQ;IACnF,MAAM,YAAY,MAAM,KAAK,mBAAmB,YAAY,eAAe,EAAE,YAAY,WAAW;IACpG,MAAM,WAAW,GAAG,UAAU,CAAC,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAA,GAAA,+NAAA,CAAA,QAAK,AAAD,EAAE,WAAW,CAAC,EAAE,YAAY,YAAY,EAAE;IACpG,IAAI,YAAY,iBAAiB;QAC7B,OAAO,eAAe,CAAC,SAAS;IACpC;IACA,WAAW,IAAI,CAAC;IAChB,MAAO,WAAW,MAAM,GAAG,2NAAA,CAAA,iBAAc,CAAE;QACvC,OAAO,eAAe,CAAC,WAAW,KAAK,GAAG;IAC9C;IACA,IAAI,MAAM,CAAC,IAAI,EAAE,YAAY,eAAe,EAAE;IAC9C,KAAK,MAAM,YAAY;QAAC;QAAW;QAAQ;QAAS,2NAAA,CAAA,sBAAmB;KAAC,CAAE;QACtE,MAAM,MAAM,KAAK,mBAAmB,KAAK;IAC7C;IACA,OAAQ,eAAe,CAAC,SAAS,GAAG;AACxC;AACO,MAAM,uBAAuB;IAChC,WAAW,MAAM,GAAG;IACpB,OAAO,IAAI,CAAC,iBAAiB,OAAO,CAAC,CAAC;QAClC,OAAO,eAAe,CAAC,SAAS;IACpC;AACJ;AACA,MAAM,OAAO,CAAC,MAAM,QAAQ;IACxB,MAAM,OAAO,IAAI,KAAK;IACtB,KAAK,MAAM,CAAC,CAAA,GAAA,2NAAA,CAAA,eAAY,AAAD,EAAE;IACzB,OAAO,KAAK,MAAM;AACtB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3509, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/signature-v4/dist-es/getCanonicalHeaders.js"],"sourcesContent":["import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,sBAAsB,CAAC,EAAE,OAAO,EAAE,EAAE,mBAAmB;IAChE,MAAM,YAAY,CAAC;IACnB,KAAK,MAAM,cAAc,OAAO,IAAI,CAAC,SAAS,IAAI,GAAI;QAClD,IAAI,OAAO,CAAC,WAAW,IAAI,WAAW;YAClC;QACJ;QACA,MAAM,sBAAsB,WAAW,WAAW;QAClD,IAAI,uBAAuB,2NAAA,CAAA,4BAAyB,IAChD,mBAAmB,IAAI,wBACvB,2NAAA,CAAA,uBAAoB,CAAC,IAAI,CAAC,wBAC1B,2NAAA,CAAA,qBAAkB,CAAC,IAAI,CAAC,sBAAsB;YAC9C,IAAI,CAAC,mBAAoB,mBAAmB,CAAC,gBAAgB,GAAG,CAAC,sBAAuB;gBACpF;YACJ;QACJ;QACA,SAAS,CAAC,oBAAoB,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,GAAG,OAAO,CAAC,QAAQ;IAChF;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3536, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/signature-v4/dist-es/getCanonicalQuery.js"],"sourcesContent":["import { escapeUri } from \"@smithy/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), [])\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AACO,MAAM,oBAAoB,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE;IAC5C,MAAM,OAAO,EAAE;IACf,MAAM,aAAa,CAAC;IACpB,KAAK,MAAM,OAAO,OAAO,IAAI,CAAC,OAAO,IAAI,GAAI;QACzC,IAAI,IAAI,WAAW,OAAO,2NAAA,CAAA,mBAAgB,EAAE;YACxC;QACJ;QACA,KAAK,IAAI,CAAC;QACV,MAAM,QAAQ,KAAK,CAAC,IAAI;QACxB,IAAI,OAAO,UAAU,UAAU;YAC3B,UAAU,CAAC,IAAI,GAAG,GAAG,CAAA,GAAA,qOAAA,CAAA,YAAS,AAAD,EAAE,KAAK,CAAC,EAAE,CAAA,GAAA,qOAAA,CAAA,YAAS,AAAD,EAAE,QAAQ;QAC7D,OACK,IAAI,MAAM,OAAO,CAAC,QAAQ;YAC3B,UAAU,CAAC,IAAI,GAAG,MACb,KAAK,CAAC,GACN,IAAI,GACJ,MAAM,CAAC,CAAC,SAAS,QAAU,QAAQ,MAAM,CAAC;oBAAC,GAAG,CAAA,GAAA,qOAAA,CAAA,YAAS,AAAD,EAAE,KAAK,CAAC,EAAE,CAAA,GAAA,qOAAA,CAAA,YAAS,AAAD,EAAE,QAAQ;iBAAC,GAAG,EAAE,EACxF,IAAI,CAAC;QACd;IACJ;IACA,OAAO,KACF,GAAG,CAAC,CAAC,MAAQ,UAAU,CAAC,IAAI,EAC5B,MAAM,CAAC,CAAC,aAAe,YACvB,IAAI,CAAC;AACd","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3569, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/signature-v4/dist-es/getPayloadHash.js"],"sourcesContent":["import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(toUint8Array(body));\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;AACA;;;;;AACO,MAAM,iBAAiB,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;IACpD,KAAK,MAAM,cAAc,OAAO,IAAI,CAAC,SAAU;QAC3C,IAAI,WAAW,WAAW,OAAO,2NAAA,CAAA,gBAAa,EAAE;YAC5C,OAAO,OAAO,CAAC,WAAW;QAC9B;IACJ;IACA,IAAI,QAAQ,WAAW;QACnB,OAAO;IACX,OACK,IAAI,OAAO,SAAS,YAAY,YAAY,MAAM,CAAC,SAAS,CAAA,GAAA,6NAAA,CAAA,gBAAa,AAAD,EAAE,OAAO;QAClF,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,CAAA,GAAA,2NAAA,CAAA,eAAY,AAAD,EAAE;QAC7B,OAAO,CAAA,GAAA,+NAAA,CAAA,QAAK,AAAD,EAAE,MAAM,SAAS,MAAM;IACtC;IACA,OAAO,2NAAA,CAAA,mBAAgB;AAC3B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3602, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/signature-v4/dist-es/headerUtil.js"],"sourcesContent":["export const hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexport const getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexport const deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\n"],"names":[],"mappings":";;;;;AAAO,MAAM,YAAY,CAAC,cAAc;IACpC,eAAe,aAAa,WAAW;IACvC,KAAK,MAAM,cAAc,OAAO,IAAI,CAAC,SAAU;QAC3C,IAAI,iBAAiB,WAAW,WAAW,IAAI;YAC3C,OAAO;QACX;IACJ;IACA,OAAO;AACX;AACO,MAAM,iBAAiB,CAAC,cAAc;IACzC,eAAe,aAAa,WAAW;IACvC,KAAK,MAAM,cAAc,OAAO,IAAI,CAAC,SAAU;QAC3C,IAAI,iBAAiB,WAAW,WAAW,IAAI;YAC3C,OAAO,OAAO,CAAC,WAAW;QAC9B;IACJ;IACA,OAAO;AACX;AACO,MAAM,eAAe,CAAC,cAAc;IACvC,eAAe,aAAa,WAAW;IACvC,KAAK,MAAM,cAAc,OAAO,IAAI,CAAC,SAAU;QAC3C,IAAI,iBAAiB,WAAW,WAAW,IAAI;YAC3C,OAAO,OAAO,CAAC,WAAW;QAC9B;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3639, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/signature-v4/dist-es/cloneRequest.js"],"sourcesContent":["export const cloneRequest = ({ headers, query, ...rest }) => ({\n    ...rest,\n    headers: { ...headers },\n    query: query ? cloneQuery(query) : undefined,\n});\nexport const cloneQuery = (query) => Object.keys(query).reduce((carry, paramName) => {\n    const param = query[paramName];\n    return {\n        ...carry,\n        [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n}, {});\n"],"names":[],"mappings":";;;;AAAO,MAAM,eAAe,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,MAAM,GAAK,CAAC;QAC1D,GAAG,IAAI;QACP,SAAS;YAAE,GAAG,OAAO;QAAC;QACtB,OAAO,QAAQ,WAAW,SAAS;IACvC,CAAC;AACM,MAAM,aAAa,CAAC,QAAU,OAAO,IAAI,CAAC,OAAO,MAAM,CAAC,CAAC,OAAO;QACnE,MAAM,QAAQ,KAAK,CAAC,UAAU;QAC9B,OAAO;YACH,GAAG,KAAK;YACR,CAAC,UAAU,EAAE,MAAM,OAAO,CAAC,SAAS;mBAAI;aAAM,GAAG;QACrD;IACJ,GAAG,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3665, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/signature-v4/dist-es/moveHeadersToQuery.js"],"sourcesContent":["import { cloneRequest } from \"./cloneRequest\";\nexport const moveHeadersToQuery = (request, options = {}) => {\n    const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if (lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAC,SAAS,UAAU,CAAC,CAAC;IACpD,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,EAAE,GAAG,OAAO,QAAQ,KAAK,KAAK,aAAa,QAAQ,KAAK,KAAK,CAAA,GAAA,8NAAA,CAAA,eAAY,AAAD,EAAE;IACrG,KAAK,MAAM,QAAQ,OAAO,IAAI,CAAC,SAAU;QACrC,MAAM,QAAQ,KAAK,WAAW;QAC9B,IAAI,MAAM,KAAK,CAAC,GAAG,OAAO,YAAY,CAAC,QAAQ,kBAAkB,EAAE,IAAI,QAAQ;YAC3E,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK;YAC3B,OAAO,OAAO,CAAC,KAAK;QACxB;IACJ;IACA,OAAO;QACH,GAAG,OAAO;QACV;QACA;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3691, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/signature-v4/dist-es/prepareRequest.js"],"sourcesContent":["import { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\nexport const prepareRequest = (request) => {\n    request = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,MAAM,iBAAiB,CAAC;IAC3B,UAAU,OAAO,QAAQ,KAAK,KAAK,aAAa,QAAQ,KAAK,KAAK,CAAA,GAAA,8NAAA,CAAA,eAAY,AAAD,EAAE;IAC/E,KAAK,MAAM,cAAc,OAAO,IAAI,CAAC,QAAQ,OAAO,EAAG;QACnD,IAAI,2NAAA,CAAA,oBAAiB,CAAC,OAAO,CAAC,WAAW,WAAW,MAAM,CAAC,GAAG;YAC1D,OAAO,QAAQ,OAAO,CAAC,WAAW;QACtC;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3713, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/signature-v4/dist-es/utilDate.js"],"sourcesContent":["export const iso8601 = (time) => toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexport const toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\n"],"names":[],"mappings":";;;;AAAO,MAAM,UAAU,CAAC,OAAS,OAAO,MACnC,WAAW,GACX,OAAO,CAAC,aAAa;AACnB,MAAM,SAAS,CAAC;IACnB,IAAI,OAAO,SAAS,UAAU;QAC1B,OAAO,IAAI,KAAK,OAAO;IAC3B;IACA,IAAI,OAAO,SAAS,UAAU;QAC1B,IAAI,OAAO,OAAO;YACd,OAAO,IAAI,KAAK,OAAO,QAAQ;QACnC;QACA,OAAO,IAAI,KAAK;IACpB;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3736, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/signature-v4/dist-es/SignatureV4.js"],"sourcesContent":["import { HeaderMarshaller } from \"@smithy/eventstream-codec\";\nimport { toHex } from \"@smithy/util-hex-encoding\";\nimport { normalizeProvider } from \"@smithy/util-middleware\";\nimport { fromUtf8, toUint8Array, toUtf8 } from \"@smithy/util-utf8\";\nimport { ALGORITHM_IDENTIFIER, ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EVENT_ALGORITHM_IDENTIFIER, EXPIRES_QUERY_PARAM, MAX_PRESIGNED_TTL, SHA256_HEADER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, } from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { hasHeader } from \"./headerUtil\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { iso8601 } from \"./utilDate\";\nexport class SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider(region);\n        this.credentialProvider = normalizeProvider(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else if (toSign.message) {\n            return this.signMessage(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = toHex(await hash.digest());\n        const stringToSign = [\n            EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signMessage(signableMessage, { signingDate = new Date(), signingRegion, signingService }) {\n        const promise = this.signEvent({\n            headers: this.headerMarshaller.format(signableMessage.message.headers),\n            payload: signableMessage.message.body,\n        }, {\n            signingDate,\n            signingRegion,\n            signingService,\n            priorSignature: signableMessage.priorSignature,\n        });\n        return promise.then((signature) => {\n            return { message: signableMessage.message, signature };\n        });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const request = prepareRequest(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        request.headers[AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash(request, this.sha256);\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[AUTH_HEADER] =\n            `${ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(toUint8Array(canonicalRequest));\n        const hashedRequest = await hash.digest();\n        return `${ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = encodeURIComponent(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n}\nconst formatDate = (now) => {\n    const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3953, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/node_modules/%40smithy/signature-v4/dist-es/index.js"],"sourcesContent":["export * from \"./SignatureV4\";\nexport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nexport { getCanonicalQuery } from \"./getCanonicalQuery\";\nexport { getPayloadHash } from \"./getPayloadHash\";\nexport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nexport { prepareRequest } from \"./prepareRequest\";\nexport * from \"./credentialDerivation\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4033, "column": 0}, "map": {"version":3,"sources":["file:///C:/app/agentset/node_modules/%40aws-sdk/signature-v4/dist-es/index.js"],"sourcesContent":["export * from \"@smithy/signature-v4\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}}]
}